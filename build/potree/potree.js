function Potree(){}Potree.KeyCodes={DELETE:46},THREE.EventDispatcher.prototype.removeEventListeners=function(e){void 0!==this._listeners&&this._listeners[e]&&delete this._listeners[e]},THREE.PerspectiveCamera.prototype.zoomTo=function(e,t){if(!e.geometry&&!e.boundingSphere&&!e.boundingBox)return;let i;e.geometry&&null===e.geometry.boundingSphere&&e.geometry.computeBoundingSphere(),e.updateMatrixWorld(),i=e.boundingSphere?e.boundingSphere:e.geometry&&e.geometry.boundingSphere?e.geometry.boundingSphere:e.boundingBox.getBoundingSphere();let n=t||1,o=(i=i.clone().applyMatrix4(e.matrixWorld)).radius,s=this.fov*Math.PI/180;this.aspect<1&&(s*=this.aspect);let r=Math.abs(o/Math.sin(s/2))*n,a=this.getWorldDirection().multiplyScalar(-r);this.position.copy(i.center.clone().add(a))},THREE.OrthographicCamera.prototype.zoomTo=function(e,t=1){(e.geometry||e.boundingBox)&&this.updateProjectionMatrix()},THREE.Ray.prototype.distanceToPlaneWithNegative=function(e){let t=e.normal.dot(this.direction);return 0===t?0===e.distanceToPoint(this.origin)?0:null:-(this.origin.dot(e.normal)+e.constant)/t},Potree.version={major:1,minor:6,suffix:""},Potree.pointBudget=1e6,Potree.framenumber=0,Potree.numNodesLoading=0,Potree.maxNodesLoading=4,Potree.Shaders={},Potree.webgl={shaders:{},vaos:{},vbos:{}},Potree.debug={},Potree.scriptPath=null,document.currentScript.src?(Potree.scriptPath=new URL(document.currentScript.src+"/..").href,"/"===Potree.scriptPath.slice(-1)&&(Potree.scriptPath=Potree.scriptPath.slice(0,-1))):console.error("Potree was unable to find its script path using document.currentScript. Is Potree included with a script tag? Does your browser support this function?"),Potree.scriptPath="/pointcloud-viewer/libs/potree/",Potree.resourcePath=Potree.scriptPath+"/resources";class EnumItem{constructor(e){for(let t of Object.keys(e))this[t]=e[t]}inspect(){return`Enum(${this.name}: ${this.value})`}}class Enum{constructor(e){this.object=e;for(let t of Object.keys(e)){let i=e[t];"object"==typeof i?i.name=t:i={name:t,value:i},this[t]=new EnumItem(i)}}fromValue(e){for(let t of Object.keys(this.object))if(this[t].value===e)return this[t];throw new Error(`No enum for value: ${e}`)}}Potree.CameraMode={ORTHOGRAPHIC:0,PERSPECTIVE:1},Potree.ClipTask={NONE:0,HIGHLIGHT:1,SHOW_INSIDE:2,SHOW_OUTSIDE:3},Potree.ClipMethod={INSIDE_ANY:0,INSIDE_ALL:1},Potree.MOUSE={LEFT:1,RIGHT:2,MIDDLE:4},Potree.timerQueries={},Potree.measureTimings=!1,Potree.startQuery=function(e,t){let i=t.getExtension("EXT_disjoint_timer_query");if(!i)return;void 0===Potree.timerQueries[e]&&(Potree.timerQueries[e]=[]);let n=i.createQueryEXT();return i.beginQueryEXT(i.TIME_ELAPSED_EXT,n),Potree.timerQueries[e].push(n),n},Potree.endQuery=function(e,t){let i=t.getExtension("EXT_disjoint_timer_query");i&&i.endQueryEXT(i.TIME_ELAPSED_EXT)},Potree.resolveQueries=function(e){let t=e.getExtension("EXT_disjoint_timer_query"),i=new Map;for(let n in Potree.timerQueries){let o=Potree.timerQueries[n],s=[];for(let r of o){let o=t.getQueryObjectEXT(r,t.QUERY_RESULT_AVAILABLE_EXT),a=e.getParameter(t.GPU_DISJOINT_EXT);if(o&&!a){let e=t.getQueryObjectEXT(r,t.QUERY_RESULT_EXT)/1e6;i.get(n)||i.set(n,[]),i.get(n).push(e)}else s.push(r)}0===s.length?delete Potree.timerQueries[n]:Potree.timerQueries[n]=s}return i},Potree.toMaterialID=function(e){return"RGB"===e?Potree.PointColorType.RGB:"Color"===e?Potree.PointColorType.COLOR:"Elevation"===e?Potree.PointColorType.HEIGHT:"Intensity"===e?Potree.PointColorType.INTENSITY:"Intensity Gradient"===e?Potree.PointColorType.INTENSITY_GRADIENT:"Classification"===e?Potree.PointColorType.CLASSIFICATION:"Return Number"===e?Potree.PointColorType.RETURN_NUMBER:"Source"===e?Potree.PointColorType.SOURCE:"Level of Detail"===e?Potree.PointColorType.LOD:"Point Index"===e?Potree.PointColorType.POINT_INDEX:"Normal"===e?Potree.PointColorType.NORMAL:"Phong"===e?Potree.PointColorType.PHONG:"Index"===e?Potree.PointColorType.POINT_INDEX:"RGB and Elevation"===e?Potree.PointColorType.RGB_HEIGHT:"Composite"===e?Potree.PointColorType.COMPOSITE:void 0},Potree.toMaterialName=function(e){return e===Potree.PointColorType.RGB?"RGB":e===Potree.PointColorType.COLOR?"Color":e===Potree.PointColorType.HEIGHT?"Elevation":e===Potree.PointColorType.INTENSITY?"Intensity":e===Potree.PointColorType.INTENSITY_GRADIENT?"Intensity Gradient":e===Potree.PointColorType.CLASSIFICATION?"Classification":e===Potree.PointColorType.RETURN_NUMBER?"Return Number":e===Potree.PointColorType.SOURCE?"Source":e===Potree.PointColorType.LOD?"Level of Detail":e===Potree.PointColorType.NORMAL?"Normal":e===Potree.PointColorType.PHONG?"Phong":e===Potree.PointColorType.POINT_INDEX?"Index":e===Potree.PointColorType.RGB_HEIGHT?"RGB and Elevation":e===Potree.PointColorType.COMPOSITE?"Composite":void 0},Potree.getMeasurementIcon=function(e){return e instanceof Potree.Measure?!e.showDistances||e.showArea||e.showAngles?e.showDistances&&e.showArea&&!e.showAngles?`${Potree.resourcePath}/icons/area.svg`:1===e.maxMarkers?`${Potree.resourcePath}/icons/point.svg`:e.showDistances||e.showArea||!e.showAngles?e.showHeight?`${Potree.resourcePath}/icons/height.svg`:`${Potree.resourcePath}/icons/distance.svg`:`${Potree.resourcePath}/icons/angle.png`:`${Potree.resourcePath}/icons/distance.svg`:e instanceof Potree.Profile?`${Potree.resourcePath}/icons/profile.svg`:e instanceof Potree.Volume?`${Potree.resourcePath}/icons/volume.svg`:e instanceof Potree.PolygonClipVolume?`${Potree.resourcePath}/icons/clip-polygon.svg`:void 0},Potree.Points=class{constructor(){this.boundingBox=new THREE.Box3,this.numPoints=0,this.data={}}add(e){let t=this.numPoints,i=t+e.numPoints,n=Object.keys(this.data),o=Object.keys(e.data),s=new Set([...n,...o]);for(let r of s)if(n.includes(r)&&o.includes(r)){let t=new(0,this.data[r].constructor)(this.data[r].length+e.data[r].length);t.set(this.data[r],0),t.set(e.data[r],this.data[r].length),this.data[r]=t}else if(n.includes(r)&&!o.includes(r)){let e=this.data[r].length/this.numPoints,t=new(0,this.data[r].constructor)(e*i);t.set(this.data[r],0),this.data[r]=t}else if(!n.includes(r)&&o.includes(r)){let n=e.data[r].length/e.numPoints,o=new(0,e.data[r].constructor)(n*i);o.set(e.data[r],n*t),this.data[r]=o}this.numPoints=i,this.boundingBox.union(e.boundingBox)}};const loadPointCloudDefaultOptions={name:"Point Cloud",numberOfClones:1};Potree.loadPointCloud=function(e,t=loadPointCloudDefaultOptions,i){let n=function(e){e[0].name=t.name,i({type:"pointcloud_loaded",pointclouds:e})};const o=new Array((t.numberOfClones||0)+1).fill();e&&(e.indexOf("ept.json")>0?Potree.EptLoader.load(e,function(t){if(t){const e=o.map(()=>new Potree.PointCloudOctree(t));n(e)}else console.error(new Error(`failed to load point cloud from URL: ${e}`))}):0===e.indexOf("greyhound://")?Potree.GreyhoundLoader.load(e,function(e){if(e){const t=o.map(()=>new Potree.PointCloudOctree(e));n(t)}else i({type:"loading_failed"})}):e.indexOf("cloud.js")>0?Potree.POCLoader.load(e,function(e){if(e){const t=o.map(()=>new Potree.PointCloudOctree(e));n(t)}else i({type:"loading_failed"})}):e.indexOf(".vpc")>0?Potree.PointCloudArena4DGeometry.load(e,function(e){if(e){const t=o.map(()=>new Potree.PointCloudOctree(e));n(t)}else i({type:"loading_failed"})}):console.error(new Error(`failed to load point cloud from URL: ${e}`)))},Potree.updatePointClouds=function(e,t,i){Potree.lru||(Potree.lru=new LRU);for(let t of e){let e=performance.now();for(let i of t.profileRequests){if(i.update(),performance.now()-e>5)break}performance.now()}let n=Potree.updateVisibility(e,t,i);for(let n of e)n.updateMaterial(n.material,n.visibleNodes,t,i),n.updateVisibleBounds();return Potree.getLRU().freeMemory(),n},Potree.getLRU=function(){return Potree.lru||(Potree.lru=new LRU),Potree.lru},Potree.updateVisibilityStructures=function(e,t,i){let n=[],o=[],s=new BinaryHeap(function(e){return 1/e.weight});for(let i=0;i<e.length;i++){const r=e[i],a=t[i];if(!r.initialized())continue;r.numVisibleNodes=0,r.numVisiblePoints=0,r.deepestVisibleLevel=0,r.visibleNodes=[],r.visibleGeometry=[],a.updateMatrixWorld();let l=new THREE.Frustum,h=a.matrixWorldInverse,d=r.matrixWorld,c=a.clone();c.near=Math.min(a.near,.1),c.updateProjectionMatrix();let p=a.projectionMatrix,u=(new THREE.Matrix4).multiply(p).multiply(h).multiply(d);l.setFromMatrix(u),n.push(l);let m=a.matrixWorld,g=(new THREE.Matrix4).getInverse(d),f=(new THREE.Matrix4).multiply(g).multiply(m),E=(new THREE.Vector3).setFromMatrixPosition(f);o.push(E),r.visible&&null!==r.root&&s.push({pointcloud:i,node:r.root,weight:Number.MAX_VALUE}),r.root.isTreeNode()&&r.hideDescendants(r.root.sceneNode);for(let e=0;e<r.boundingBoxNodes.length;e++)r.boundingBoxNodes[e].visible=!1}return{frustums:n,camObjPositions:o,priorityQueue:s}},Potree.getDEMWorkerInstance=function(){if(!Potree.DEMWorkerInstance){let e=Potree.scriptPath+"/workers/DEMWorker.js";Potree.DEMWorkerInstance=Potree.workerPool.getWorker(e)}return Potree.DEMWorkerInstance},Potree.updateVisibility=function(e,t,i){const[n]=t,[o]=i;Potree._pointcloudTransformVersion||(Potree._pointcloudTransformVersion=new Map);let s=Potree._pointcloudTransformVersion;for(let t of e)if(t.visible)if(t.updateMatrixWorld(),s.has(t)){let e=s.get(t);e.transform.equals(t.matrixWorld)||(e.number++,e.transform.copy(t.matrixWorld),t.dispatchEvent({type:"transformation_changed",target:t}))}else s.set(t,{number:0,transform:t.matrixWorld.clone()});let r=0,a=new Map(e.map(e=>[e,0])),l=[],h=[],d=[],c=1/0,p=Potree.updateVisibilityStructures(e,t,i),u=p.frustums,m=p.camObjPositions,g=p.priorityQueue,f=0,E=(o.domElement.clientWidth,o.domElement.clientHeight);for(;g.size()>0;){let t=g.pop(),i=t.node,o=t.parent,p=e[t.pointcloud],v=i.getBoundingBox(),y=u.some(e=>e.intersectsBox(v)),w=p.maxLevel||1/0,T=i.getLevel(),b=y;if(b=(b=(b=b&&!(r+i.getNumPoints()>Potree.pointBudget))&&!(a.get(p)+i.getNumPoints()>p.pointBudget))&&T<w,window.warned125||(window.warned125=!0),p.material.clipBoxes.length>0){let e=0,t=0;for(let i of p.material.clipBoxes){let n=(new THREE.Matrix4).getInverse(p.matrixWorld).multiply(i.box.matrixWorld),o=new THREE.Vector3(1,0,0).applyMatrix4(n),s=new THREE.Vector3(-1,0,0).applyMatrix4(n),r=new THREE.Vector3(0,1,0).applyMatrix4(n),a=new THREE.Vector3(0,-1,0).applyMatrix4(n),l=new THREE.Vector3(0,0,1).applyMatrix4(n),h=new THREE.Vector3(0,0,-1).applyMatrix4(n),d=(new THREE.Vector3).subVectors(s,o).normalize(),c=d.clone().multiplyScalar(-1),u=(new THREE.Vector3).subVectors(a,r).normalize(),m=u.clone().multiplyScalar(-1),g=(new THREE.Vector3).subVectors(h,l).normalize(),f=g.clone().multiplyScalar(-1),E=(new THREE.Plane).setFromNormalAndCoplanarPoint(d,o),y=(new THREE.Plane).setFromNormalAndCoplanarPoint(c,s),w=(new THREE.Plane).setFromNormalAndCoplanarPoint(u,r),T=(new THREE.Plane).setFromNormalAndCoplanarPoint(m,a),b=(new THREE.Plane).setFromNormalAndCoplanarPoint(g,l),P=(new THREE.Plane).setFromNormalAndCoplanarPoint(f,h);new THREE.Frustum(E,y,w,T,b,P).intersectsBox(v)&&e++,t++}let i=e>0,n=e===t;p.material.clipTask===Potree.ClipTask.SHOW_INSIDE&&(p.material.clipMethod===Potree.ClipMethod.INSIDE_ANY&&i||p.material.clipMethod===Potree.ClipMethod.INSIDE_ALL&&n||(b=!1))}if(i.spacing?c=Math.min(c,i.spacing):i.geometryNode&&i.geometryNode.spacing&&(c=Math.min(c,i.geometryNode.spacing)),r+i.getNumPoints()>Potree.pointBudget)break;if(!b)continue;r+=i.getNumPoints();let P=a.get(p);if(a.set(p,P+i.getNumPoints()),p.numVisibleNodes++,p.numVisiblePoints+=i.getNumPoints(),!i.isGeometryNode()||o&&!o.isTreeNode()||(i.isLoaded()&&f<2?(i=p.toTreeNode(i,o),f++):(d.push(i),h.push(i))),i.isTreeNode()){p.initialLoadFinished||(p.initialLoadFinished=!0,p.dispatchEvent({type:"pointcloud_ready"})),Potree.getLRU().touch(i.geometryNode),i.sceneNode.visible=!0,i.sceneNode.material=p.material,l.push(i),p.visibleNodes.push(i),void 0===i._transformVersion&&(i._transformVersion=-1);let e=s.get(p);if(i._transformVersion!==e.number&&(i.sceneNode.updateMatrix(),i.sceneNode.matrixWorld.multiplyMatrices(p.matrixWorld,i.sceneNode.matrix),i._transformVersion=e.number),p.showBoundingBox&&!i.boundingBoxNode&&i.getBoundingBox){let e=new Potree.Box3Helper(i.getBoundingBox());e.matrixAutoUpdate=!1,p.boundingBoxNodes.push(e),i.boundingBoxNode=e,i.boundingBoxNode.matrix.copy(p.matrixWorld)}else p.showBoundingBox?(i.boundingBoxNode.visible=!0,i.boundingBoxNode.matrix.copy(p.matrixWorld)):!p.showBoundingBox&&i.boundingBoxNode&&(i.boundingBoxNode.visible=!1)}let x=i.getChildren();for(let e=0;e<x.length;e++){let o=x[e],s=0;if(n.isPerspectiveCamera){let e=o.getBoundingSphere(),t=e.center;const i=m.map((e,i)=>{let n=e.x-t.x,o=e.y-t.y,s=e.z-t.z,r=n*n+o*o+s*s;return Math.sqrt(r)}),r=Math.min(...i);let a=e.radius,l=n.fov*Math.PI/180,h=a*(.5*E/(Math.tan(l/2)*r));if(h<p.minimumNodePixelSize)continue;s=h,r-a<0&&(s=Number.MAX_VALUE)}else{let e=o.getBoundingBox();const t=m.map(e=>o.getBoundingSphere().center.distanceTo(e));s=e.max.clone().sub(e.min).length()/Math.min(...t)}g.push({pointcloud:t.pointcloud,node:o,parent:i,weight:s})}}{let t=4,i=e.filter(e=>e.generateDEM&&e.dem instanceof Potree.DEM);for(let e of i){let i=e.visibleNodes.filter(e=>e.getLevel()<=t);e.dem.update(i)}}for(let e=0;e<Math.min(Potree.maxNodesLoading,d.length);e++)d[e].load();return{visibleNodes:l,numVisiblePoints:r,lowestSpacing:c}},Potree.XHRFactory={config:{withCredentials:!1,customHeaders:[{header:null,value:null}]},createXMLHttpRequest:function(){let e=new XMLHttpRequest;if(this.config.customHeaders&&Array.isArray(this.config.customHeaders)&&this.config.customHeaders.length>0){let t=e.open,i=this.config.customHeaders;e.open=function(){t.apply(this,[].slice.call(arguments)),i.forEach(function(t){t.header&&t.value&&e.setRequestHeader(t.header,t.value)})}}return e}},Potree.getSignatureKeyForPath=(e=>{if(!Potree.signedUrls)return"";let t;for(let i in Potree.signedUrls.urls)i.indexOf(e)>=0&&(t=Potree.signedUrls.urls[i]);return`?Expires=${Potree.signedUrls.expires}&KeyName=${Potree.signedUrls.keyname}&Signature=${t}`});export default Potree;Potree.paramThreeToGL=function(e,t){let i;if(t===THREE.RepeatWrapping)return e.REPEAT;if(t===THREE.ClampToEdgeWrapping)return e.CLAMP_TO_EDGE;if(t===THREE.MirroredRepeatWrapping)return e.MIRRORED_REPEAT;if(t===THREE.NearestFilter)return e.NEAREST;if(t===THREE.NearestMipMapNearestFilter)return e.NEAREST_MIPMAP_NEAREST;if(t===THREE.NearestMipMapLinearFilter)return e.NEAREST_MIPMAP_LINEAR;if(t===THREE.LinearFilter)return e.LINEAR;if(t===THREE.LinearMipMapNearestFilter)return e.LINEAR_MIPMAP_NEAREST;if(t===THREE.LinearMipMapLinearFilter)return e.LINEAR_MIPMAP_LINEAR;if(t===THREE.UnsignedByteType)return e.UNSIGNED_BYTE;if(t===THREE.UnsignedShort4444Type)return e.UNSIGNED_SHORT_4_4_4_4;if(t===THREE.UnsignedShort5551Type)return e.UNSIGNED_SHORT_5_5_5_1;if(t===THREE.UnsignedShort565Type)return e.UNSIGNED_SHORT_5_6_5;if(t===THREE.ByteType)return e.BYTE;if(t===THREE.ShortType)return e.SHORT;if(t===THREE.UnsignedShortType)return e.UNSIGNED_SHORT;if(t===THREE.IntType)return e.INT;if(t===THREE.UnsignedIntType)return e.UNSIGNED_INT;if(t===THREE.FloatType)return e.FLOAT;if(t===THREE.HalfFloatType&&null!==(i=extensions.get("OES_texture_half_float")))return i.HALF_FLOAT_OES;if(t===THREE.AlphaFormat)return e.ALPHA;if(t===THREE.RGBFormat)return e.RGB;if(t===THREE.RGBAFormat)return e.RGBA;if(t===THREE.LuminanceFormat)return e.LUMINANCE;if(t===THREE.LuminanceAlphaFormat)return e.LUMINANCE_ALPHA;if(t===THREE.DepthFormat)return e.DEPTH_COMPONENT;if(t===THREE.DepthStencilFormat)return e.DEPTH_STENCIL;if(t===THREE.AddEquation)return e.FUNC_ADD;if(t===THREE.SubtractEquation)return e.FUNC_SUBTRACT;if(t===THREE.ReverseSubtractEquation)return e.FUNC_REVERSE_SUBTRACT;if(t===THREE.ZeroFactor)return e.ZERO;if(t===THREE.OneFactor)return e.ONE;if(t===THREE.SrcColorFactor)return e.SRC_COLOR;if(t===THREE.OneMinusSrcColorFactor)return e.ONE_MINUS_SRC_COLOR;if(t===THREE.SrcAlphaFactor)return e.SRC_ALPHA;if(t===THREE.OneMinusSrcAlphaFactor)return e.ONE_MINUS_SRC_ALPHA;if(t===THREE.DstAlphaFactor)return e.DST_ALPHA;if(t===THREE.OneMinusDstAlphaFactor)return e.ONE_MINUS_DST_ALPHA;if(t===THREE.DstColorFactor)return e.DST_COLOR;if(t===THREE.OneMinusDstColorFactor)return e.ONE_MINUS_DST_COLOR;if(t===THREE.SrcAlphaSaturateFactor)return e.SRC_ALPHA_SATURATE;if((t===THREE.RGB_S3TC_DXT1_Format||t===RGBA_S3TC_DXT1_Format||t===THREE.RGBA_S3TC_DXT3_Format||t===RGBA_S3TC_DXT5_Format)&&null!==(i=extensions.get("WEBGL_compressed_texture_s3tc"))){if(t===THREE.RGB_S3TC_DXT1_Format)return i.COMPRESSED_RGB_S3TC_DXT1_EXT;if(t===THREE.RGBA_S3TC_DXT1_Format)return i.COMPRESSED_RGBA_S3TC_DXT1_EXT;if(t===THREE.RGBA_S3TC_DXT3_Format)return i.COMPRESSED_RGBA_S3TC_DXT3_EXT;if(t===THREE.RGBA_S3TC_DXT5_Format)return i.COMPRESSED_RGBA_S3TC_DXT5_EXT}if((t===THREE.RGB_PVRTC_4BPPV1_Format||t===THREE.RGB_PVRTC_2BPPV1_Format||t===THREE.RGBA_PVRTC_4BPPV1_Format||t===THREE.RGBA_PVRTC_2BPPV1_Format)&&null!==(i=extensions.get("WEBGL_compressed_texture_pvrtc"))){if(t===THREE.RGB_PVRTC_4BPPV1_Format)return i.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;if(t===THREE.RGB_PVRTC_2BPPV1_Format)return i.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;if(t===THREE.RGBA_PVRTC_4BPPV1_Format)return i.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;if(t===THREE.RGBA_PVRTC_2BPPV1_Format)return i.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG}if(t===THREE.RGB_ETC1_Format&&null!==(i=extensions.get("WEBGL_compressed_texture_etc1")))return i.COMPRESSED_RGB_ETC1_WEBGL;if((t===THREE.MinEquation||t===THREE.MaxEquation)&&null!==(i=extensions.get("EXT_blend_minmax"))){if(t===THREE.MinEquation)return i.MIN_EXT;if(t===THREE.MaxEquation)return i.MAX_EXT}return t===UnsignedInt248Type&&null!==(i=extensions.get("WEBGL_depth_texture"))?i.UNSIGNED_INT_24_8_WEBGL:0},Potree.attributeLocations={position:0,color:1,intensity:2,classification:3,returnNumber:4,numberOfReturns:5,pointSourceID:6,indices:7,normal:8,spacing:9},Potree.Shader=class{constructor(e,t,i,n){this.gl=e,this.name=t,this.vsSource=i,this.fsSource=n,this.cache=new Map,this.vs=null,this.fs=null,this.program=null,this.uniformLocations={},this.attributeLocations={},this.update(i,n)}update(e,t){this.vsSource=e,this.fsSource=t,this.linkProgram()}compileShader(e,t){let i=this.gl;if(i.shaderSource(e,t),i.compileShader(e),!i.getShaderParameter(e,i.COMPILE_STATUS)){let n=i.getShaderInfoLog(e),o=t.split("\n").map((e,t)=>`${t+1}`.padEnd(5)+e).join("\n");throw`could not compile shader ${this.name}: ${n}, \n${o}`}}linkProgram(){let e=this.gl;this.uniformLocations={},this.attributeLocations={},e.useProgram(null);let t=this.cache.get(`${this.vsSource}, ${this.fsSource}`);if(t)return this.program=t.program,this.vs=t.vs,this.fs=t.fs,this.attributeLocations=t.attributeLocations,void(this.uniformLocations=t.uniformLocations);{this.vs=e.createShader(e.VERTEX_SHADER),this.fs=e.createShader(e.FRAGMENT_SHADER),this.program=e.createProgram();for(let t of Object.keys(Potree.attributeLocations)){let i=Potree.attributeLocations[t];e.bindAttribLocation(this.program,i,t)}this.compileShader(this.vs,this.vsSource),this.compileShader(this.fs,this.fsSource);let t=this.program;if(e.attachShader(t,this.vs),e.attachShader(t,this.fs),e.linkProgram(t),e.detachShader(t,this.vs),e.detachShader(t,this.fs),!e.getProgramParameter(t,e.LINK_STATUS)){let i=e.getProgramInfoLog(t);throw`could not link program ${this.name}: ${i}`}{let i=e.getProgramParameter(t,e.ACTIVE_ATTRIBUTES);for(let n=0;n<i;n++){let i=e.getActiveAttrib(t,n),o=e.getAttribLocation(t,i.name);this.attributeLocations[i.name]=o}}{let i=e.getProgramParameter(t,e.ACTIVE_UNIFORMS);for(let n=0;n<i;n++){let i=e.getActiveUniform(t,n),o=e.getUniformLocation(t,i.name);this.uniformLocations[i.name]=o}}let i={program:this.program,vs:this.vs,fs:this.fs,attributeLocations:this.attributeLocations,uniformLocations:this.uniformLocations};this.cache.set(`${this.vsSource}, ${this.fsSource}`,i)}}setUniformMatrix4(e,t){const i=this.gl,n=this.uniformLocations[e];if(null==n)return;let o=new Float32Array(t.elements);i.uniformMatrix4fv(n,!1,o)}setUniform1f(e,t){const i=this.gl,n=this.uniformLocations[e];null!=n&&i.uniform1f(n,t)}setUniformBoolean(e,t){const i=this.gl,n=this.uniformLocations[e];null!=n&&i.uniform1i(n,t)}setUniformTexture(e,t){const i=this.gl,n=this.uniformLocations[e];null!=n&&i.uniform1i(n,t)}setUniform2f(e,t){const i=this.gl,n=this.uniformLocations[e];null!=n&&i.uniform2f(n,t[0],t[1])}setUniform3f(e,t){const i=this.gl,n=this.uniformLocations[e];null!=n&&i.uniform3f(n,t[0],t[1],t[2])}setUniform(e,t){t.constructor===THREE.Matrix4?this.setUniformMatrix4(e,t):"number"==typeof t?this.setUniform1f(e,t):"boolean"==typeof t?this.setUniformBoolean(e,t):t instanceof Potree.WebGLTexture?this.setUniformTexture(e,t):t instanceof Array?2===t.length?this.setUniform2f(e,t):3===t.length&&this.setUniform3f(e,t):console.error("unhandled uniform type: ",e,t)}setUniform1i(e,t){let i=this.gl,n=this.uniformLocations[e];null!=n&&i.uniform1i(n,t)}},Potree.WebGLTexture=class{constructor(e,t){this.gl=e,this.texture=t,this.id=e.createTexture(),this.target=e.TEXTURE_2D,this.version=-1,this.update(t)}update(){if(!this.texture.image)return void(this.version=this.texture.version);let e=this.gl,t=this.texture;if(this.version===t.version)return;this.target=e.TEXTURE_2D,e.bindTexture(this.target,this.id);let i,n=Potree.paramThreeToGL(e,t.format),o=t.image.width,s=t.image.height,r=n,a=Potree.paramThreeToGL(e,t.type);e.pixelStorei(e.UNPACK_FLIP_Y_WEBGL,t.flipY),e.pixelStorei(e.UNPACK_PREMULTIPLY_ALPHA_WEBGL,t.premultiplyAlpha),e.pixelStorei(e.UNPACK_ALIGNMENT,t.unpackAlignment),THREE.CanvasTexture&&t instanceof THREE.DataTexture?(i=t.image.data,e.texParameteri(this.target,e.TEXTURE_WRAP_S,e.CLAMP_TO_EDGE),e.texParameteri(this.target,e.TEXTURE_WRAP_T,e.CLAMP_TO_EDGE),e.texParameteri(this.target,e.TEXTURE_MAG_FILTER,Potree.paramThreeToGL(e,t.magFilter)),e.texParameteri(this.target,e.TEXTURE_MIN_FILTER,Potree.paramThreeToGL(e,t.minFilter)),e.texImage2D(this.target,0,n,o,s,0,r,a,i)):THREE.CanvasTexture&&t instanceof THREE.CanvasTexture&&(i=t.image,e.texParameteri(this.target,e.TEXTURE_WRAP_S,Potree.paramThreeToGL(e,t.wrapS)),e.texParameteri(this.target,e.TEXTURE_WRAP_T,Potree.paramThreeToGL(e,t.wrapT)),e.texParameteri(this.target,e.TEXTURE_MAG_FILTER,Potree.paramThreeToGL(e,t.magFilter)),e.texParameteri(this.target,e.TEXTURE_MIN_FILTER,Potree.paramThreeToGL(e,t.minFilter)),e.texImage2D(this.target,0,n,n,a,i)),e.bindTexture(this.target,null),this.version=t.version}},Potree.WebGLBuffer=class{constructor(){this.numElements=0,this.vao=null,this.vbos=new Map}},Potree.Renderer=class{constructor(e){this.threeRenderer=e,this.gl=this.threeRenderer.context,this.buffers=new Map,this.shaders=new Map,this.textures=new Map,this.glTypeMapping=new Map,this.glTypeMapping.set(Float32Array,this.gl.FLOAT),this.glTypeMapping.set(Uint8Array,this.gl.UNSIGNED_BYTE),this.glTypeMapping.set(Uint16Array,this.gl.UNSIGNED_SHORT),this.toggle=0}createBuffer(e){let t=this.gl,i=new Potree.WebGLBuffer;i.vao=t.createVertexArray(),i.numElements=e.attributes.position.count,t.bindVertexArray(i.vao);for(let n in e.attributes){let o=e.attributes[n],s=t.createBuffer();t.bindBuffer(t.ARRAY_BUFFER,s),t.bufferData(t.ARRAY_BUFFER,o.array,t.STATIC_DRAW);let r=Potree.attributeLocations[n],a=o.normalized,l=this.glTypeMapping.get(o.array.constructor);t.vertexAttribPointer(r,o.itemSize,l,a,0,0),t.enableVertexAttribArray(r),i.vbos.set(n,{handle:s,name:n,count:o.count,itemSize:o.itemSize,type:e.attributes.position.array.constructor,version:0})}return t.bindBuffer(t.ARRAY_BUFFER,null),t.bindVertexArray(null),i}updateBuffer(e){let t=this.gl,i=this.buffers.get(e);t.bindVertexArray(i.vao);for(let n in e.attributes){let o=e.attributes[n],s=Potree.attributeLocations[n],r=o.normalized,a=this.glTypeMapping.get(o.array.constructor),l=null;i.vbos.has(n)?(l=i.vbos.get(n).handle,i.vbos.get(n).version=o.version):(l=t.createBuffer(),i.vbos.set(n,{handle:l,name:n,count:o.count,itemSize:o.itemSize,type:e.attributes.position.array.constructor,version:o.version})),t.bindBuffer(t.ARRAY_BUFFER,l),t.bufferData(t.ARRAY_BUFFER,o.array,t.STATIC_DRAW),t.vertexAttribPointer(s,o.itemSize,a,r,0,0),t.enableVertexAttribArray(s)}t.bindBuffer(t.ARRAY_BUFFER,null),t.bindVertexArray(null)}traverse(e){let t=[],i=[e];for(;i.length>0;){let e=i.pop();if(e instanceof Potree.PointCloudTree){t.push(e);continue}let n=e.children.filter(e=>e.visible);i.push(...n)}return{octrees:t}}renderNodes(e,t,i,n,o,s,r){Potree.measureTimings&&performance.mark("renderNodes-start");let a=this.gl,l=r.material?r.material:e.material,h=null==r.shadowMaps?[]:r.shadowMaps,d=n.matrixWorldInverse,c=new THREE.Matrix4,p=new Float32Array(16),u=0;for(let e of t){if(void 0!==Potree.debug.allowedNodes&&!Potree.debug.allowedNodes.includes(e.name))continue;let t=e.sceneNode.matrixWorld;if(c.multiplyMatrices(d,t),i){let t=i.offsets.get(e);s.setUniform1f("uVNStart",t)}let n,o=e.getLevel();e.debug?s.setUniform("uDebug",!0):s.setUniform("uDebug",!1),e instanceof Potree.PointCloudOctreeNode?n=0===Object.keys(e.children).length:e instanceof Potree.PointCloudArena4DNode&&(n=e.geometryNode.isLeaf),s.setUniform("uIsLeafNode",n);const r=s.uniformLocations.modelMatrix;r&&(p.set(t.elements),a.uniformMatrix4fv(r,!1,p));const m=s.uniformLocations.modelViewMatrix;for(let e=0;e<16;e++)p[e]=c.elements[e];if(a.uniformMatrix4fv(m,!1,p),l.clipPolygons&&l.clipPolygons.length>0){let e=[],i=[];for(let n of l.clipPolygons){let o=n.viewMatrix,s=n.projMatrix.clone().multiply(o).multiply(t);e.push(n.markers.length),i.push(s)}let n=[].concat(...i.map(e=>e.elements)),o=new Array(24*l.clipPolygons.length);for(let e=0;e<l.clipPolygons.length;e++){let t=l.clipPolygons[e];for(let i=0;i<t.markers.length;i++)o[24*e+(3*i+0)]=t.markers[i].position.x,o[24*e+(3*i+1)]=t.markers[i].position.y,o[24*e+(3*i+2)]=t.markers[i].position.z}const r=s.uniformLocations["uClipPolygonVCount[0]"];a.uniform1iv(r,e);const h=s.uniformLocations["uClipPolygonWVP[0]"];a.uniformMatrix4fv(h,!1,n);const d=s.uniformLocations["uClipPolygonVertices[0]"];a.uniform3fv(d,o)}if(s.setUniform1f("uLevel",o),s.setUniform1f("uNodeSpacing",e.geometryNode.estimatedSpacing),s.setUniform1f("uPCIndex",u),h.length>0){const e=s.uniformLocations["uShadowMap[0]"];s.setUniform3f("uShadowColor",l.uniforms.uShadowColor.value);let i=5,n=new Array(h.length).fill(i).map((e,t)=>e+t);a.uniform1iv(e,n);for(let e=0;e<h.length;e++){let t=h[e],i=n[e],o=this.threeRenderer.properties.get(t.target.texture).__webglTexture;a.activeTexture(a[`TEXTURE${i}`]),a.bindTexture(a.TEXTURE_2D,o)}{let e=h.map(e=>e.camera.matrixWorldInverse).map(e=>(new THREE.Matrix4).multiplyMatrices(e,t)),i=[].concat(...e.map(e=>e.elements));const n=s.uniformLocations["uShadowWorldView[0]"];a.uniformMatrix4fv(n,!1,i)}{let e=[].concat(...h.map(e=>e.camera.projectionMatrix.elements));const t=s.uniformLocations["uShadowProj[0]"];a.uniformMatrix4fv(t,!1,e)}}let g=e.geometryNode.geometry,f=null;if(this.buffers.has(g)){f=this.buffers.get(g);for(let e in g.attributes){g.attributes[e].version>f.vbos.get(e).version&&this.updateBuffer(g)}}else f=this.createBuffer(g),this.buffers.set(g,f);a.bindVertexArray(f.vao);let E=f.numElements;a.drawArrays(a.POINTS,0,E),u++}a.bindVertexArray(null),Potree.measureTimings&&(performance.mark("renderNodes-end"),performance.measure("render.renderNodes","renderNodes-start","renderNodes-end"))}renderOctree(e,t,i,n,o={}){let s=this.gl,r=o.material?o.material:e.material,a=null==o.shadowMaps?[]:o.shadowMaps,l=i.matrixWorldInverse,h=i.matrixWorld,d=i.projectionMatrix,c=(new THREE.Matrix4).getInverse(d),p=(new THREE.Matrix4,null),u=null,m=0;if(r.pointSizeType>=0&&(r.pointSizeType===Potree.PointSizeType.ADAPTIVE||r.pointColorType===Potree.PointColorType.LOD)){let n=null!=o.vnTextureNodes?o.vnTextureNodes:t;u=e.computeVisibilityTextureData(n,i);const s=r.visibleNodesTexture;s.image.data.set(u.data),s.needsUpdate=!0}if(!this.shaders.has(r)){let[e,t]=[r.vertexShader,r.fragmentShader],i=new Potree.Shader(s,"pointcloud",e,t);this.shaders.set(r,i)}p=this.shaders.get(r);{let[e,t]=[r.vertexShader,r.fragmentShader],i=r.snapEnabled?r.numSnapshots:0,n=r.clipBoxes&&r.clipBoxes.length?r.clipBoxes.length:0,o=r.clipPolygons&&r.clipPolygons.length?r.clipPolygons.length:0,s=[`#define num_shadowmaps ${a.length}`,`#define num_snapshots ${i}`,`#define num_clipboxes ${n}`,`#define num_clippolygons ${o}`].join("\n");e=`${s}\n${e}`,t=`${s}\n${t}`,p.update(e,t),r.needsUpdate=!1}for(let e of Object.keys(r.uniforms)){let t=r.uniforms[e];if("t"==t.type){let e=t.value;if(!e)continue;if(!this.textures.has(e)){let t=new Potree.WebGLTexture(s,e);this.textures.set(e,t)}this.textures.get(e).update()}}s.useProgram(p.program);let g=!1;(g=void 0!==o.transparent?o.transparent&&r.opacity<1:r.opacity<1)?(s.enable(s.BLEND),s.blendFunc(s.SRC_ALPHA,s.ONE),s.depthMask(!1),s.disable(s.DEPTH_TEST)):(s.disable(s.BLEND),s.depthMask(!0),s.enable(s.DEPTH_TEST)),void 0!==o.blendFunc&&(s.enable(s.BLEND),s.blendFunc(...o.blendFunc)),void 0!==o.depthTest&&(!0===o.depthTest?s.enable(s.DEPTH_TEST):s.disable(s.DEPTH_TEST)),void 0!==o.depthWrite&&(!0===o.depthWrite?s.depthMask(!0):s.depthMask(!1));{p.setUniformMatrix4("projectionMatrix",d),p.setUniformMatrix4("viewMatrix",l),p.setUniformMatrix4("uViewInv",h),p.setUniformMatrix4("uProjInv",c);let e=n?n.width:r.screenWidth,t=n?n.height:r.screenHeight;if(p.setUniform1f("uScreenWidth",e),p.setUniform1f("uScreenHeight",t),p.setUniform1f("fov",Math.PI*i.fov/180),p.setUniform1f("near",i.near),p.setUniform1f("far",i.far),i instanceof THREE.OrthographicCamera?(p.setUniform("uUseOrthographicCamera",!0),p.setUniform("uOrthoWidth",i.right-i.left),p.setUniform("uOrthoHeight",i.top-i.bottom)):p.setUniform("uUseOrthographicCamera",!1),r.clipBoxes.length+r.clipPolygons.length===0?p.setUniform1i("clipTask",Potree.ClipTask.NONE):p.setUniform1i("clipTask",r.clipTask),p.setUniform1i("clipMethod",r.clipMethod),r.clipBoxes&&r.clipBoxes.length>0){let e=[].concat(...r.clipBoxes.map(e=>e.inverse.elements));const t=p.uniformLocations["clipBoxes[0]"];s.uniformMatrix4fv(t,!1,e)}p.setUniform1f("size",r.size),p.setUniform1f("maxSize",r.uniforms.maxSize.value),p.setUniform1f("minSize",r.uniforms.minSize.value),p.setUniform1f("uOctreeSpacing",r.spacing),p.setUniform("uOctreeSize",r.uniforms.octreeSize.value),p.setUniform3f("uColor",r.color.toArray()),p.setUniform1f("uOpacity",r.opacity),p.setUniform2f("elevationRange",r.elevationRange),p.setUniform2f("intensityRange",r.intensityRange),p.setUniform1f("intensityGamma",r.intensityGamma),p.setUniform1f("intensityContrast",r.intensityContrast),p.setUniform1f("intensityBrightness",r.intensityBrightness),p.setUniform1f("rgbGamma",r.rgbGamma),p.setUniform1f("rgbContrast",r.rgbContrast),p.setUniform1f("rgbBrightness",r.rgbBrightness),p.setUniform1f("uTransition",r.transition),p.setUniform1f("wRGB",r.weightRGB),p.setUniform1f("wIntensity",r.weightIntensity),p.setUniform1f("wElevation",r.weightElevation),p.setUniform1f("wClassification",r.weightClassification),p.setUniform1f("wReturnNumber",r.weightReturnNumber),p.setUniform1f("wSourceID",r.weightSourceID);let o=this.textures.get(r.visibleNodesTexture);p.setUniform1i("visibleNodesTexture",m),s.activeTexture(s.TEXTURE0+m),s.bindTexture(o.target,o.id),m++;let a=this.textures.get(r.gradientTexture);p.setUniform1i("gradient",m),s.activeTexture(s.TEXTURE0+m),s.bindTexture(a.target,a.id),m++;let u=this.textures.get(r.classificationTexture);if(p.setUniform1i("classificationLUT",m),s.activeTexture(s.TEXTURE0+m),s.bindTexture(u.target,u.id),m++,!0===r.snapEnabled){{const e=p.uniformLocations["uSnapshot[0]"],t=p.uniformLocations["uSnapshotDepth[0]"];let i=m,n=new Array(5).fill(i).map((e,t)=>e+t),o=new Array(5).fill(1+Math.max(...n)).map((e,t)=>e+t);m=1+Math.max(...o),s.uniform1iv(e,n),s.uniform1iv(t,o);for(let e=0;e<5;e++){let t=r.uniforms.uSnapshot.value[e],i=r.uniforms.uSnapshotDepth.value[e];if(!t)break;let a=this.threeRenderer.properties.get(t).__webglTexture,l=this.threeRenderer.properties.get(i).__webglTexture,h=n[e],d=o[e];s.activeTexture(s[`TEXTURE${h}`]),s.bindTexture(s.TEXTURE_2D,a),s.activeTexture(s[`TEXTURE${d}`]),s.bindTexture(s.TEXTURE_2D,l)}}{let e=[].concat(...r.uniforms.uSnapView.value.map(e=>e.elements));const t=p.uniformLocations["uSnapView[0]"];s.uniformMatrix4fv(t,!1,e)}{let e=[].concat(...r.uniforms.uSnapProj.value.map(e=>e.elements));const t=p.uniformLocations["uSnapProj[0]"];s.uniformMatrix4fv(t,!1,e)}{let e=[].concat(...r.uniforms.uSnapProjInv.value.map(e=>e.elements));const t=p.uniformLocations["uSnapProjInv[0]"];s.uniformMatrix4fv(t,!1,e)}{let e=[].concat(...r.uniforms.uSnapViewInv.value.map(e=>e.elements));const t=p.uniformLocations["uSnapViewInv[0]"];s.uniformMatrix4fv(t,!1,e)}}}this.renderNodes(e,t,u,i,n,p,o),s.activeTexture(s.TEXTURE2),s.bindTexture(s.TEXTURE_2D,null),s.activeTexture(s.TEXTURE0)}render(e,t,i,n={}){const o=this.gl;null!=i&&this.threeRenderer.setRenderTarget(i),t.updateProjectionMatrix();const s=this.traverse(e);for(const e of s.octrees){let o=e.visibleNodes;this.renderOctree(e,o,t,i,n)}o.activeTexture(o.TEXTURE1),o.bindTexture(o.TEXTURE_2D,null),this.threeRenderer.resetGLState()}},Potree.DEMNode=class{constructor(e,t,i){this.name=e,this.box=t,this.tileSize=i,this.level=this.name.length-1,this.data=new Float32Array(i*i),this.data.fill(-1/0),this.children=[],this.mipMap=[this.data],this.mipMapNeedsUpdate=!0}createMipMap(){this.mipMap=[this.data];let e=this.tileSize,t=parseInt(e/2),i=this.data;for(;t>1;){let n=new Float32Array(t*t);for(let o=0;o<t;o++)for(let s=0;s<t;s++){let r=i[2*o+0+2*s*e],a=i[2*o+0+2*s*e+e],l=i[2*o+1+2*s*e],h=i[2*o+1+2*s*e+e],[d,c]=[0,0];isFinite(r)&&(d+=r,c+=1),isFinite(a)&&(d+=a,c+=1),isFinite(l)&&(d+=l,c+=1),isFinite(h)&&(d+=h,c+=1),d/=c,n[o+s*t]=d}this.mipMap.push(n),i=n,e=t,t=parseInt(t/2)}this.mipMapNeedsUpdate=!1}uv(e){let t=this.box.getSize();return[(e.x-this.box.min.x)/t.x,(e.y-this.box.min.y)/t.y]}heightAtMipMapLevel(e,t){let i=this.uv(e),n=parseInt(this.tileSize/parseInt(2**t)),o=this.mipMap[t],s=Math.min(i[0]*n,n-1),r=Math.min(i[1]*n,n-1),a=s%1,l=r%1,[h,d]=[Math.floor(s),Math.ceil(s)],[c,p]=[Math.floor(r),Math.ceil(r)],u=o[h+n*c],m=o[h+n*p],g=o[d+n*c],f=o[d+n*p],E=isFinite(u)?(1-a)*(1-l):0,v=isFinite(m)?(1-a)*l:0,y=isFinite(g)?a*(1-l):0,w=isFinite(f)?a*l:0,T=E+v+y+w;if(E/=T,v/=T,y/=T,w/=T,0===T)return null;let b=0;return isFinite(u)&&(b+=u*E),isFinite(m)&&(b+=m*v),isFinite(g)&&(b+=g*y),isFinite(f)&&(b+=f*w),b}height(e){let t=null;for(let i=0;i<this.mipMap.length;i++)if(null!==(t=this.heightAtMipMapLevel(e,i)))return t;return t}traverse(e,t=0){e(this,t);for(let i of this.children.filter(e=>void 0!==e))i.traverse(e,t+1)}},Potree.DEM=class{constructor(e){this.pointcloud=e,this.matrix=null,this.boundingBox=null,this.tileSize=64,this.root=null,this.version=0}expandAndFindByBox(e,t){if(0===t)return[this.root];let i=[],n=[this.root];for(;n.length>0;){let o,s=n.pop(),r=s.box.getSize(),a={x:(e.min.x-s.box.min.x)/r.x,y:(e.min.y-s.box.min.y)/r.y},l={x:(e.max.x-s.box.max.x)/r.x,y:(e.max.y-s.box.max.y)/r.y};a.x=a.x<.5?0:1,a.y=a.y<.5?0:1,l.x=l.x<.5?0:1,l.y=l.y<.5?0:1,o=0===a.x&&0===a.y&&1===l.x&&1===l.y?[0,1,2,3]:a.x===l.x&&a.y===l.y?[a.x<<1|a.y]:[a.x<<1|a.y,l.x<<1|l.y];for(let e of o){if(void 0===s.children[e]){let t=s.box.clone();(2&e)>0?t.min.x+=r.x/2:t.max.x-=r.x/2,(1&e)>0?t.min.y+=r.y/2:t.max.y-=r.y/2;let i=new Potree.DEMNode(s.name+e,t,this.tileSize);s.children[e]=i}let o=s.children[e];o.level<t?n.push(o):i.push(o)}}return i}childIndex(e){let[t,i]=e.map(e=>e<.5?0:1);return t<<1|i}height(e){if(!this.root)return 0;let t=null,i=[this.root];for(;;){let n=i[i.length-1],o=n.height(e);null!==o&&(t=o);let s=n.uv(e),r=this.childIndex(s);if(!n.children[r])break;i.push(n.children[r])}return t+this.pointcloud.position.z}update(e){if(Potree.getDEMWorkerInstance().working)return;null!==this.matrix&&this.matrix.equals(this.pointcloud.matrixWorld)||(this.matrix=this.pointcloud.matrixWorld.clone(),this.boundingBox=this.pointcloud.boundingBox.clone().applyMatrix4(this.matrix),this.root=new Potree.DEMNode("r",this.boundingBox,this.tileSize),this.version++);let t=null;for(let i of e)if(void 0===i.demVersion||i.demVersion<this.version){t=i;break}if(null===t)return;let i=t.getBoundingBox().clone().applyMatrix4(this.matrix),n=i.getSize(),o=this.expandAndFindByBox(i,t.getLevel());t.demVersion=this.version,Potree.getDEMWorkerInstance().onmessage=(e=>{let t=new Float32Array(e.data.dem.data);for(let e of o){let o=e.box.getSize();for(let s=0;s<this.tileSize;s++)for(let r=0;r<this.tileSize;r++){let a=s/(this.tileSize-1),l=r/(this.tileSize-1),h=e.box.min.x+a*o.x,d=e.box.min.y+l*o.y,c=this.tileSize*(h-i.min.x)/n.x,p=this.tileSize*(d-i.min.y)/n.y;c<0||c>this.tileSize||(p<0||p>this.tileSize||(c=Math.min(Math.floor(c),this.tileSize-1),p=Math.min(Math.floor(p),this.tileSize-1),e.data[s+this.tileSize*r]=t[c+this.tileSize*p]))}e.createMipMap(),e.mipMapNeedsUpdate=!0,Potree.getDEMWorkerInstance().working=!1}});let s=t.geometryNode.geometry.attributes.position.array,r={boundingBox:{min:t.getBoundingBox().min.toArray(),max:t.getBoundingBox().max.toArray()},position:new Float32Array(s).buffer},a=[r.position];Potree.getDEMWorkerInstance().working=!0,Potree.getDEMWorkerInstance().postMessage(r,a)}},Potree.PointCloudTreeNode=class{constructor(){this.needsTransformUpdate=!0}getChildren(){throw new Error("override function")}getBoundingBox(){throw new Error("override function")}isLoaded(){throw new Error("override function")}isGeometryNode(){throw new Error("override function")}isTreeNode(){throw new Error("override function")}getLevel(){throw new Error("override function")}getBoundingSphere(){throw new Error("override function")}},Potree.PointCloudTree=class extends THREE.Object3D{constructor(){super(),this.dem=new Potree.DEM(this)}initialized(){return null!==this.root}},Potree.WorkerPool=class{constructor(){this.workers={}}getWorker(e){if(this.workers[e]||(this.workers[e]=[]),0===this.workers[e].length){let t=new Worker(e);this.workers[e].push(t)}return this.workers[e].pop()}returnWorker(e,t){this.workers[e].push(t)}},Potree.workerPool=new Potree.WorkerPool,Potree.Shaders["pointcloud.vs"]="\nprecision highp float;\nprecision highp int;\n\n#define max_clip_polygons 8\n#define PI 3.141592653589793\n\nattribute vec3 position;\nattribute vec3 color;\nattribute float intensity;\nattribute float classification;\nattribute float returnNumber;\nattribute float numberOfReturns;\nattribute float pointSourceID;\nattribute vec4 indices;\nattribute float spacing;\n\nuniform mat4 modelMatrix;\nuniform mat4 modelViewMatrix;\nuniform mat4 projectionMatrix;\nuniform mat4 viewMatrix;\n\nuniform float uScreenWidth;\nuniform float uScreenHeight;\nuniform float fov;\nuniform float near;\nuniform float far;\n\nuniform bool uDebug;\n\nuniform bool uUseOrthographicCamera;\nuniform float uOrthoWidth;\nuniform float uOrthoHeight;\n\n\n#define CLIPTASK_NONE 0\n#define CLIPTASK_HIGHLIGHT 1\n#define CLIPTASK_SHOW_INSIDE 2\n#define CLIPTASK_SHOW_OUTSIDE 3\n\n#define CLIPMETHOD_INSIDE_ANY 0\n#define CLIPMETHOD_INSIDE_ALL 1\n\nuniform int clipTask;\nuniform int clipMethod;\n#if defined(num_clipboxes) && num_clipboxes > 0\n\tuniform mat4 clipBoxes[num_clipboxes];\n#endif\n\n#if defined(num_clippolygons) && num_clippolygons > 0\n\tuniform int uClipPolygonVCount[num_clippolygons];\n\tuniform vec3 uClipPolygonVertices[num_clippolygons * 8];\n\tuniform mat4 uClipPolygonWVP[num_clippolygons];\n#endif\n\nuniform float size;\nuniform float minSize;\nuniform float maxSize;\n\nuniform float uPCIndex;\nuniform float uOctreeSpacing;\nuniform float uNodeSpacing;\nuniform float uOctreeSize;\nuniform vec3 uBBSize;\nuniform float uLevel;\nuniform float uVNStart;\nuniform bool uIsLeafNode;\n\nuniform vec3 uColor;\nuniform float uOpacity;\n\nuniform vec2 elevationRange;\nuniform vec2 intensityRange;\nuniform float intensityGamma;\nuniform float intensityContrast;\nuniform float intensityBrightness;\nuniform float rgbGamma;\nuniform float rgbContrast;\nuniform float rgbBrightness;\nuniform float uTransition;\nuniform float wRGB;\nuniform float wIntensity;\nuniform float wElevation;\nuniform float wClassification;\nuniform float wReturnNumber;\nuniform float wSourceID;\n\nuniform vec3 uShadowColor;\n\nuniform sampler2D visibleNodes;\nuniform sampler2D gradient;\nuniform sampler2D classificationLUT;\n\n#if defined(num_shadowmaps) && num_shadowmaps > 0\nuniform sampler2D uShadowMap[num_shadowmaps];\nuniform mat4 uShadowWorldView[num_shadowmaps];\nuniform mat4 uShadowProj[num_shadowmaps];\n#endif\n\n#if defined(num_snapshots) && num_snapshots > 0\nuniform sampler2D uSnapshot[num_snapshots];\nuniform mat4 uSnapView[num_snapshots];\nuniform mat4 uSnapProj[num_snapshots];\nuniform mat4 uSnapScreenToCurrentView[num_snapshots];\n\nvarying float vSnapTextureID;\n#endif\n\nvarying vec3\tvColor;\nvarying float\tvLogDepth;\nvarying vec3\tvViewPosition;\nvarying float \tvRadius;\nvarying float \tvPointSize;\n\n\nfloat round(float number){\n\treturn floor(number + 0.5);\n}\n\n// \n//    ###    ########     ###    ########  ######## #### ##     ## ########     ######  #### ######## ########  ######  \n//   ## ##   ##     ##   ## ##   ##     ##    ##     ##  ##     ## ##          ##    ##  ##       ##  ##       ##    ## \n//  ##   ##  ##     ##  ##   ##  ##     ##    ##     ##  ##     ## ##          ##        ##      ##   ##       ##       \n// ##     ## ##     ## ##     ## ########     ##     ##  ##     ## ######       ######   ##     ##    ######    ######  \n// ######### ##     ## ######### ##           ##     ##   ##   ##  ##                ##  ##    ##     ##             ## \n// ##     ## ##     ## ##     ## ##           ##     ##    ## ##   ##          ##    ##  ##   ##      ##       ##    ## \n// ##     ## ########  ##     ## ##           ##    ####    ###    ########     ######  #### ######## ########  ######  \n// \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n\n\n// ---------------------\n// OCTREE\n// ---------------------\n\n#if (defined(adaptive_point_size) || defined(color_type_lod)) && defined(tree_type_octree)\n/**\n * number of 1-bits up to inclusive index position\n * number is treated as if it were an integer in the range 0-255\n *\n */\nint numberOfOnes(int number, int index){\n\tint numOnes = 0;\n\tint tmp = 128;\n\tfor(int i = 7; i >= 0; i--){\n\t\t\n\t\tif(number >= tmp){\n\t\t\tnumber = number - tmp;\n\n\t\t\tif(i <= index){\n\t\t\t\tnumOnes++;\n\t\t\t}\n\t\t}\n\t\t\n\t\ttmp = tmp / 2;\n\t}\n\n\treturn numOnes;\n}\n\n\n/**\n * checks whether the bit at index is 1\n * number is treated as if it were an integer in the range 0-255\n *\n */\nbool isBitSet(int number, int index){\n\n\t// weird multi else if due to lack of proper array, int and bitwise support in WebGL 1.0\n\tint powi = 1;\n\tif(index == 0){\n\t\tpowi = 1;\n\t}else if(index == 1){\n\t\tpowi = 2;\n\t}else if(index == 2){\n\t\tpowi = 4;\n\t}else if(index == 3){\n\t\tpowi = 8;\n\t}else if(index == 4){\n\t\tpowi = 16;\n\t}else if(index == 5){\n\t\tpowi = 32;\n\t}else if(index == 6){\n\t\tpowi = 64;\n\t}else if(index == 7){\n\t\tpowi = 128;\n\t}else{\n\t\treturn false;\n\t}\n\n\tint ndp = number / powi;\n\n\treturn mod(float(ndp), 2.0) != 0.0;\n}\n\n\n/**\n * find the LOD at the point position\n */\nfloat getLOD(){\n\t\n\tvec3 offset = vec3(0.0, 0.0, 0.0);\n\tint iOffset = int(uVNStart);\n\tfloat depth = uLevel;\n\tfor(float i = 0.0; i <= 30.0; i++){\n\t\tfloat nodeSizeAtLevel = uOctreeSize  / pow(2.0, i + uLevel + 0.0);\n\t\t\n\t\tvec3 index3d = (position-offset) / nodeSizeAtLevel;\n\t\tindex3d = floor(index3d + 0.5);\n\t\tint index = int(round(4.0 * index3d.x + 2.0 * index3d.y + index3d.z));\n\t\t\n\t\tvec4 value = texture2D(visibleNodes, vec2(float(iOffset) / 2048.0, 0.0));\n\t\tint mask = int(round(value.r * 255.0));\n\n\t\tif(isBitSet(mask, index)){\n\t\t\t// there are more visible child nodes at this position\n\t\t\tint advanceG = int(round(value.g * 255.0)) * 256;\n\t\t\tint advanceB = int(round(value.b * 255.0));\n\t\t\tint advanceChild = numberOfOnes(mask, index - 1);\n\t\t\tint advance = advanceG + advanceB + advanceChild;\n\n\t\t\tiOffset = iOffset + advance;\n\t\t\t\n\t\t\tdepth++;\n\t\t}else{\n\t\t\t// no more visible child nodes at this position\n\t\t\treturn value.a * 255.0;\n\t\t\t//return depth;\n\t\t}\n\t\t\n\t\toffset = offset + (vec3(1.0, 1.0, 1.0) * nodeSizeAtLevel * 0.5) * index3d;\n\t}\n\t\t\n\treturn depth;\n}\n\nfloat getSpacing(){\n\tvec3 offset = vec3(0.0, 0.0, 0.0);\n\tint iOffset = int(uVNStart);\n\tfloat depth = uLevel;\n\tfloat spacing = uNodeSpacing;\n\tfor(float i = 0.0; i <= 30.0; i++){\n\t\tfloat nodeSizeAtLevel = uOctreeSize  / pow(2.0, i + uLevel + 0.0);\n\t\t\n\t\tvec3 index3d = (position-offset) / nodeSizeAtLevel;\n\t\tindex3d = floor(index3d + 0.5);\n\t\tint index = int(round(4.0 * index3d.x + 2.0 * index3d.y + index3d.z));\n\t\t\n\t\tvec4 value = texture2D(visibleNodes, vec2(float(iOffset) / 2048.0, 0.0));\n\t\tint mask = int(round(value.r * 255.0));\n\t\tfloat spacingFactor = value.a;\n\n\t\tif(i > 0.0){\n\t\t\tspacing = spacing / (255.0 * spacingFactor);\n\t\t}\n\t\t\n\n\t\tif(isBitSet(mask, index)){\n\t\t\t// there are more visible child nodes at this position\n\t\t\tint advanceG = int(round(value.g * 255.0)) * 256;\n\t\t\tint advanceB = int(round(value.b * 255.0));\n\t\t\tint advanceChild = numberOfOnes(mask, index - 1);\n\t\t\tint advance = advanceG + advanceB + advanceChild;\n\n\t\t\tiOffset = iOffset + advance;\n\n\t\t\t//spacing = spacing / (255.0 * spacingFactor);\n\t\t\t//spacing = spacing / 3.0;\n\t\t\t\n\t\t\tdepth++;\n\t\t}else{\n\t\t\t// no more visible child nodes at this position\n\t\t\treturn spacing;\n\t\t}\n\t\t\n\t\toffset = offset + (vec3(1.0, 1.0, 1.0) * nodeSizeAtLevel * 0.5) * index3d;\n\t}\n\t\t\n\treturn spacing;\n}\n\nfloat getPointSizeAttenuation(){\n\treturn pow(2.0, getLOD());\n}\n\n\n#endif\n\n\n// ---------------------\n// KD-TREE\n// ---------------------\n\n#if (defined(adaptive_point_size) || defined(color_type_lod)) && defined(tree_type_kdtree)\n\nfloat getLOD(){\n\tvec3 offset = vec3(0.0, 0.0, 0.0);\n\tfloat iOffset = 0.0;\n\tfloat depth = 0.0;\n\t\t\n\t\t\n\tvec3 size = uBBSize;\t\n\tvec3 pos = position;\n\t\t\n\tfor(float i = 0.0; i <= 1000.0; i++){\n\t\t\n\t\tvec4 value = texture2D(visibleNodes, vec2(iOffset / 2048.0, 0.0));\n\t\t\n\t\tint children = int(value.r * 255.0);\n\t\tfloat next = value.g * 255.0;\n\t\tint split = int(value.b * 255.0);\n\t\t\n\t\tif(next == 0.0){\n\t\t \treturn depth;\n\t\t}\n\t\t\n\t\tvec3 splitv = vec3(0.0, 0.0, 0.0);\n\t\tif(split == 1){\n\t\t\tsplitv.x = 1.0;\n\t\t}else if(split == 2){\n\t\t \tsplitv.y = 1.0;\n\t\t}else if(split == 4){\n\t\t \tsplitv.z = 1.0;\n\t\t}\n\t\t\n\t\tiOffset = iOffset + next;\n\t\t\n\t\tfloat factor = length(pos * splitv / size);\n\t\tif(factor < 0.5){\n\t\t\t// left\n\t\tif(children == 0 || children == 2){\n\t\t\t\treturn depth;\n\t\t\t}\n\t\t}else{\n\t\t\t// right\n\t\t\tpos = pos - size * splitv * 0.5;\n\t\t\tif(children == 0 || children == 1){\n\t\t\t\treturn depth;\n\t\t\t}\n\t\t\tif(children == 3){\n\t\t\t\tiOffset = iOffset + 1.0;\n\t\t\t}\n\t\t}\n\t\tsize = size * ((1.0 - (splitv + 1.0) / 2.0) + 0.5);\n\t\t\n\t\tdepth++;\n\t}\n\t\t\n\t\t\n\treturn depth;\t\n}\n\nfloat getPointSizeAttenuation(){\n\treturn 0.5 * pow(1.3, getLOD());\n}\n\n#endif\n\n\n\n// \n//    ###    ######## ######## ########  #### ########  ##     ## ######## ########  ######  \n//   ## ##      ##       ##    ##     ##  ##  ##     ## ##     ##    ##    ##       ##    ## \n//  ##   ##     ##       ##    ##     ##  ##  ##     ## ##     ##    ##    ##       ##       \n// ##     ##    ##       ##    ########   ##  ########  ##     ##    ##    ######    ######  \n// #########    ##       ##    ##   ##    ##  ##     ## ##     ##    ##    ##             ## \n// ##     ##    ##       ##    ##    ##   ##  ##     ## ##     ##    ##    ##       ##    ## \n// ##     ##    ##       ##    ##     ## #### ########   #######     ##    ########  ######                                                                               \n// \n\n\n\n// formula adapted from: http://www.dfstudios.co.uk/articles/programming/image-programming-algorithms/image-processing-algorithms-part-5-contrast-adjustment/\nfloat getContrastFactor(float contrast){\n\treturn (1.0158730158730156 * (contrast + 1.0)) / (1.0158730158730156 - contrast);\n}\n\nvec3 getRGB(){\n\tvec3 rgb = color;\n\t\n\trgb = pow(rgb, vec3(rgbGamma));\n\trgb = rgb + rgbBrightness;\n\t//rgb = (rgb - 0.5) * getContrastFactor(rgbContrast) + 0.5;\n\trgb = clamp(rgb, 0.0, 1.0);\n\n\t\t//rgb = indices.rgb;\n\t//rgb.b = pcIndex / 255.0;\n\t\n\t\n\treturn rgb;\n}\n\nfloat getIntensity(){\n\tfloat w = (intensity - intensityRange.x) / (intensityRange.y - intensityRange.x);\n\tw = pow(w, intensityGamma);\n\tw = w + intensityBrightness;\n\tw = (w - 0.5) * getContrastFactor(intensityContrast) + 0.5;\n\tw = clamp(w, 0.0, 1.0);\n\n\t//w = w + color.x * 0.0001;\n\t\n\t//float w = color.x * 0.001 + intensity / 1.0;\n\n\treturn w;\n}\n\nvec3 getElevation(){\n\tvec4 world = modelMatrix * vec4( position, 1.0 );\n\tfloat w = (world.z - elevationRange.x) / (elevationRange.y - elevationRange.x);\n\tvec3 cElevation = texture2D(gradient, vec2(w,1.0-w)).rgb;\n\t\n\treturn cElevation;\n}\n\nvec4 getClassification(){\n\tvec2 uv = vec2(classification / 255.0, 0.5);\n\tvec4 classColor = texture2D(classificationLUT, uv);\n\t\n\treturn classColor;\n}\n\nvec3 getReturnNumber(){\n\tif(numberOfReturns == 1.0){\n\t\treturn vec3(1.0, 1.0, 0.0);\n\t}else{\n\t\tif(returnNumber == 1.0){\n\t\t\treturn vec3(1.0, 0.0, 0.0);\n\t\t}else if(returnNumber == numberOfReturns){\n\t\t\treturn vec3(0.0, 0.0, 1.0);\n\t\t}else{\n\t\t\treturn vec3(0.0, 1.0, 0.0);\n\t\t}\n\t}\n}\n\nvec3 getSourceID(){\n\tfloat w = mod(pointSourceID, 10.0) / 10.0;\n\treturn texture2D(gradient, vec2(w,1.0 - w)).rgb;\n}\n\nvec3 getCompositeColor(){\n\tvec3 c;\n\tfloat w;\n\n\tc += wRGB * getRGB();\n\tw += wRGB;\n\t\n\tc += wIntensity * getIntensity() * vec3(1.0, 1.0, 1.0);\n\tw += wIntensity;\n\t\n\tc += wElevation * getElevation();\n\tw += wElevation;\n\t\n\tc += wReturnNumber * getReturnNumber();\n\tw += wReturnNumber;\n\t\n\tc += wSourceID * getSourceID();\n\tw += wSourceID;\n\t\n\tvec4 cl = wClassification * getClassification();\n    c += cl.a * cl.rgb;\n\tw += wClassification * cl.a;\n\n\tc = c / w;\n\t\n\tif(w == 0.0){\n\t\t//c = color;\n\t\tgl_Position = vec4(100.0, 100.0, 100.0, 0.0);\n\t}\n\t\n\treturn c;\n}\n\n\n// \n//  ######  ##       #### ########  ########  #### ##    ##  ######   \n// ##    ## ##        ##  ##     ## ##     ##  ##  ###   ## ##    ##  \n// ##       ##        ##  ##     ## ##     ##  ##  ####  ## ##        \n// ##       ##        ##  ########  ########   ##  ## ## ## ##   #### \n// ##       ##        ##  ##        ##         ##  ##  #### ##    ##  \n// ##    ## ##        ##  ##        ##         ##  ##   ### ##    ##  \n//  ######  ######## #### ##        ##        #### ##    ##  ######                                                          \n// \n\n\n\nvec3 getColor(){\n\tvec3 color;\n\t\n\t#ifdef color_type_rgb\n\t\tcolor = getRGB();\n\t#elif defined color_type_height\n\t\tcolor = getElevation();\n\t#elif defined color_type_rgb_highlight\n\t\tcolor = vec3(124.0 / 255.0, 215.0 / 255.0, 244.0 / 255.0);\n\t#elif defined color_type_rgb_height\n\t\tvec3 cHeight = getElevation();\n\t\tcolor = (1.0 - uTransition) * getRGB() + uTransition * cHeight;\n\t#elif defined color_type_depth\n\t\tfloat linearDepth = gl_Position.w;\n\t\tfloat expDepth = (gl_Position.z / gl_Position.w) * 0.5 + 0.5;\n\t\tcolor = vec3(linearDepth, expDepth, 0.0);\n\t#elif defined color_type_intensity\n\t\tfloat w = getIntensity();\n\t\tcolor = vec3(w, w, w);\n\t#elif defined color_type_intensity_gradient\n\t\tfloat w = getIntensity();\n\t\tcolor = texture2D(gradient, vec2(w,1.0-w)).rgb;\n\t#elif defined color_type_color\n\t\tcolor = uColor;\n\t#elif defined color_type_lod\n\t\tfloat depth = getLOD();\n\t\tfloat w = depth / 10.0;\n\t\tcolor = texture2D(gradient, vec2(w,1.0-w)).rgb;\n\t#elif defined color_type_point_index\n\t\tcolor = indices.rgb;\n\t#elif defined color_type_classification\n\t\tvec4 cl = getClassification(); \n\t\tcolor = cl.rgb;\n\t#elif defined color_type_return_number\n\t\tcolor = getReturnNumber();\n\t#elif defined color_type_source\n\t\tcolor = getSourceID();\n\t#elif defined color_type_normal\n\t\tcolor = (modelMatrix * vec4(normal, 0.0)).xyz;\n\t#elif defined color_type_phong\n\t\tcolor = color;\n\t#elif defined color_type_composite\n\t\tcolor = getCompositeColor();\n\t#endif\n\t\n\treturn color;\n}\n\nfloat getPointSize(){\n\tfloat pointSize = 1.0;\n\t\n\tfloat slope = tan(fov / 2.0);\n\tfloat projFactor = -0.5 * uScreenHeight / (slope * vViewPosition.z);\n\t\n\tfloat r = uOctreeSpacing * 1.7;\n\tvRadius = r;\n\t#if defined fixed_point_size\n\t\tpointSize = size;\n\t#elif defined attenuated_point_size\n\t\tif(uUseOrthographicCamera){\n\t\t\tpointSize = size;\n\t\t}else{\n\t\t\tpointSize = size * spacing * projFactor;\n\t\t\t//pointSize = pointSize * projFactor;\n\t\t}\n\t#elif defined adaptive_point_size\n\t\tif(uUseOrthographicCamera) {\n\t\t\tfloat worldSpaceSize = 1.0 * size * r / getPointSizeAttenuation();\n\t\t\tpointSize = (worldSpaceSize / uOrthoWidth) * uScreenWidth;\n\t\t} else {\n\n\t\t\tif(uIsLeafNode && false){\n\t\t\t\tpointSize = size * spacing * projFactor;\n\t\t\t}else{\n\t\t\t\tfloat worldSpaceSize = 1.0 * size * r / getPointSizeAttenuation();\n\t\t\t\tpointSize = worldSpaceSize * projFactor;\n\t\t\t}\n\t\t}\n\t#endif\n\n\tpointSize = max(minSize, pointSize);\n\tpointSize = min(maxSize, pointSize);\n\t\n\tvRadius = pointSize / projFactor;\n\n\treturn pointSize;\n}\n\n#if defined(num_clippolygons) && num_clippolygons > 0\nbool pointInClipPolygon(vec3 point, int polyIdx) {\n\n\tmat4 wvp = uClipPolygonWVP[polyIdx];\n\t//vec4 screenClipPos = uClipPolygonVP[polyIdx] * modelMatrix * vec4(point, 1.0);\n\t//screenClipPos.xy = screenClipPos.xy / screenClipPos.w * 0.5 + 0.5;\n\n\tvec4 pointNDC = wvp * vec4(point, 1.0);\n\tpointNDC.xy = pointNDC.xy / pointNDC.w;\n\n\tint j = uClipPolygonVCount[polyIdx] - 1;\n\tbool c = false;\n\tfor(int i = 0; i < 8; i++) {\n\t\tif(i == uClipPolygonVCount[polyIdx]) {\n\t\t\tbreak;\n\t\t}\n\n\t\t//vec4 verti = wvp * vec4(uClipPolygonVertices[polyIdx * 8 + i], 1);\n\t\t//vec4 vertj = wvp * vec4(uClipPolygonVertices[polyIdx * 8 + j], 1);\n\n\t\t//verti.xy = verti.xy / verti.w;\n\t\t//vertj.xy = vertj.xy / vertj.w;\n\n\t\t//verti.xy = verti.xy / verti.w * 0.5 + 0.5;\n\t\t//vertj.xy = vertj.xy / vertj.w * 0.5 + 0.5;\n\n\t\tvec3 verti = uClipPolygonVertices[polyIdx * 8 + i];\n\t\tvec3 vertj = uClipPolygonVertices[polyIdx * 8 + j];\n\n\t\tif( ((verti.y > pointNDC.y) != (vertj.y > pointNDC.y)) && \n\t\t\t(pointNDC.x < (vertj.x-verti.x) * (pointNDC.y-verti.y) / (vertj.y-verti.y) + verti.x) ) {\n\t\t\tc = !c;\n\t\t}\n\t\tj = i;\n\t}\n\n\treturn c;\n}\n#endif\n\nvoid doClipping(){\n\n\t#if !defined color_type_composite\n\t\tvec4 cl = getClassification(); \n\t\tif(cl.a == 0.0){\n\t\t\tgl_Position = vec4(100.0, 100.0, 100.0, 0.0);\n\t\t\t\n\t\t\treturn;\n\t\t}\n\t#endif\n\n\tint clipVolumesCount = 0;\n\tint insideCount = 0;\n\n\t#if defined(num_clipboxes) && num_clipboxes > 0\n\t\tfor(int i = 0; i < num_clipboxes; i++){\n\t\t\tvec4 clipPosition = clipBoxes[i] * modelMatrix * vec4( position, 1.0 );\n\t\t\tbool inside = -0.5 <= clipPosition.x && clipPosition.x <= 0.5;\n\t\t\tinside = inside && -0.5 <= clipPosition.y && clipPosition.y <= 0.5;\n\t\t\tinside = inside && -0.5 <= clipPosition.z && clipPosition.z <= 0.5;\n\n\t\t\tinsideCount = insideCount + (inside ? 1 : 0);\n\t\t\tclipVolumesCount++;\n\t\t}\t\n\t#endif\n\n\t#if defined(num_clippolygons) && num_clippolygons > 0\n\t\tfor(int i = 0; i < num_clippolygons; i++) {\n\t\t\tbool inside = pointInClipPolygon(position, i);\n\n\t\t\tinsideCount = insideCount + (inside ? 1 : 0);\n\t\t\tclipVolumesCount++;\n\t\t}\n\t#endif\n\n\tbool insideAny = insideCount > 0;\n\tbool insideAll = (clipVolumesCount > 0) && (clipVolumesCount == insideCount);\n\n\tif(clipMethod == CLIPMETHOD_INSIDE_ANY){\n\t\tif(insideAny && clipTask == CLIPTASK_HIGHLIGHT){\n\t\t\tvColor.r += 0.5;\n\t\t}else if(!insideAny && clipTask == CLIPTASK_SHOW_INSIDE){\n\t\t\tgl_Position = vec4(100.0, 100.0, 100.0, 1.0);\n\t\t}else if(insideAny && clipTask == CLIPTASK_SHOW_OUTSIDE){\n\t\t\tgl_Position = vec4(100.0, 100.0, 100.0, 1.0);\n\t\t}\n\t}else if(clipMethod == CLIPMETHOD_INSIDE_ALL){\n\t\tif(insideAll && clipTask == CLIPTASK_HIGHLIGHT){\n\t\t\tvColor.r += 0.5;\n\t\t}else if(!insideAll && clipTask == CLIPTASK_SHOW_INSIDE){\n\t\t\tgl_Position = vec4(100.0, 100.0, 100.0, 1.0);\n\t\t}else if(insideAll && clipTask == CLIPTASK_SHOW_OUTSIDE){\n\t\t\tgl_Position = vec4(100.0, 100.0, 100.0, 1.0);\n\t\t}\n\t}\n}\n\n\n\n// \n// ##     ##    ###    #### ##    ## \n// ###   ###   ## ##    ##  ###   ## \n// #### ####  ##   ##   ##  ####  ## \n// ## ### ## ##     ##  ##  ## ## ## \n// ##     ## #########  ##  ##  #### \n// ##     ## ##     ##  ##  ##   ### \n// ##     ## ##     ## #### ##    ## \n//\n\nvoid main() {\n\tvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\n\tvViewPosition = mvPosition.xyz;\n\tgl_Position = projectionMatrix * mvPosition;\n\tvLogDepth = log2(-mvPosition.z);\n\n\t// POINT SIZE\n\tfloat pointSize = getPointSize();\n\tgl_PointSize = pointSize;\n\tvPointSize = pointSize;\n\n\t// COLOR\n\tvColor = getColor();\n\n\n\t#if defined hq_depth_pass\n\t\tfloat originalDepth = gl_Position.w;\n\t\tfloat adjustedDepth = originalDepth + 2.0 * vRadius;\n\t\tfloat adjust = adjustedDepth / originalDepth;\n\n\t\tmvPosition.xyz = mvPosition.xyz * adjust;\n\t\tgl_Position = projectionMatrix * mvPosition;\n\t#endif\n\n\n\t// CLIPPING\n\tdoClipping();\n\t\n\n\n\n\n\t//#if defined(num_snapshots) && num_snapshots > 0\n\n\t//\tfor(int i = 0; i < num_snapshots; i++){\n\t//\t\tvSnapProjected[i] = uSnapProj[i] * uSnapView[i] * modelMatrix * vec4(position, 1.0);\t\n\t//\t\tvSnapProjectedDistance[i] = -(uSnapView[i] * modelMatrix * vec4(position, 1.0)).z;\n\t//\t}\n\t//\t\n\t//#endif\n\n\t#if defined(num_shadowmaps) && num_shadowmaps > 0\n\n\t\tconst float sm_near = 0.1;\n\t\tconst float sm_far = 10000.0;\n\n\t\tfor(int i = 0; i < num_shadowmaps; i++){\n\t\t\tvec3 viewPos = (uShadowWorldView[i] * vec4(position, 1.0)).xyz;\n\t\t\tfloat distanceToLight = abs(viewPos.z);\n\t\t\t\n\t\t\tvec4 projPos = uShadowProj[i] * uShadowWorldView[i] * vec4(position, 1);\n\t\t\tvec3 nc = projPos.xyz / projPos.w;\n\t\t\t\n\t\t\tfloat u = nc.x * 0.5 + 0.5;\n\t\t\tfloat v = nc.y * 0.5 + 0.5;\n\n\t\t\tvec2 sampleStep = vec2(1.0 / (2.0*1024.0), 1.0 / (2.0*1024.0)) * 1.5;\n\t\t\tvec2 sampleLocations[9];\n\t\t\tsampleLocations[0] = vec2(0.0, 0.0);\n\t\t\tsampleLocations[1] = sampleStep;\n\t\t\tsampleLocations[2] = -sampleStep;\n\t\t\tsampleLocations[3] = vec2(sampleStep.x, -sampleStep.y);\n\t\t\tsampleLocations[4] = vec2(-sampleStep.x, sampleStep.y);\n\n\t\t\tsampleLocations[5] = vec2(0.0, sampleStep.y);\n\t\t\tsampleLocations[6] = vec2(0.0, -sampleStep.y);\n\t\t\tsampleLocations[7] = vec2(sampleStep.x, 0.0);\n\t\t\tsampleLocations[8] = vec2(-sampleStep.x, 0.0);\n\n\t\t\tfloat visibleSamples = 0.0;\n\t\t\tfloat numSamples = 0.0;\n\n\t\t\tfloat bias = vRadius * 2.0;\n\n\t\t\tfor(int j = 0; j < 9; j++){\n\t\t\t\tvec4 depthMapValue = texture2D(uShadowMap[i], vec2(u, v) + sampleLocations[j]);\n\n\t\t\t\tfloat linearDepthFromSM = depthMapValue.x + bias;\n\t\t\t\tfloat linearDepthFromViewer = distanceToLight;\n\n\t\t\t\tif(linearDepthFromSM > linearDepthFromViewer){\n\t\t\t\t\tvisibleSamples += 1.0;\n\t\t\t\t}\n\n\t\t\t\tnumSamples += 1.0;\n\t\t\t}\n\n\t\t\tfloat visibility = visibleSamples / numSamples;\n\n\t\t\tif(u < 0.0 || u > 1.0 || v < 0.0 || v > 1.0 || nc.x < -1.0 || nc.x > 1.0 || nc.y < -1.0 || nc.y > 1.0 || nc.z < -1.0 || nc.z > 1.0){\n\t\t\t\t//vColor = vec3(0.0, 0.0, 0.2);\n\t\t\t}else{\n\t\t\t\t//vColor = vec3(1.0, 1.0, 1.0) * visibility + vec3(1.0, 1.0, 1.0) * vec3(0.5, 0.0, 0.0) * (1.0 - visibility);\n\t\t\t\tvColor = vColor * visibility + vColor * uShadowColor * (1.0 - visibility);\n\t\t\t}\n\t\t}\n\n\t#endif\n\n\tif(uDebug){\n\t\tvColor.b = (vColor.r + vColor.g + vColor.b) / 3.0;\n\t\tvColor.r = 1.0;\n\t\tvColor.g = 1.0;\n\t}\n\n}\n",Potree.Shaders["pointcloud.fs"]="\n#if defined paraboloid_point_shape\n\t#extension GL_EXT_frag_depth : enable\n#endif\n\nprecision highp float;\nprecision highp int;\n\nuniform mat4 viewMatrix;\nuniform mat4 uViewInv;\nuniform mat4 uProjInv;\nuniform vec3 cameraPosition;\n\n\nuniform mat4 projectionMatrix;\nuniform float uOpacity;\n\nuniform float blendHardness;\nuniform float blendDepthSupplement;\nuniform float fov;\nuniform float uSpacing;\nuniform float near;\nuniform float far;\nuniform float uPCIndex;\nuniform float uScreenWidth;\nuniform float uScreenHeight;\n\nvarying vec3\tvColor;\nvarying float\tvLogDepth;\nvarying vec3\tvViewPosition;\nvarying float\tvRadius;\nvarying float \tvPointSize;\nvarying vec3 \tvPosition;\n\n#if defined(num_snapshots) && num_snapshots > 0\nuniform sampler2D uSnapshot[num_snapshots];\nuniform sampler2D uSnapshotDepth[num_snapshots];\nuniform mat4 uSnapView[num_snapshots];\nuniform mat4 uSnapProj[num_snapshots];\nuniform mat4 uSnapProjInv[num_snapshots];\nuniform mat4 uSnapViewInv[num_snapshots];\n\nvarying float vSnapTextureID;\n#endif\n\n\n\n\n\n\nfloat specularStrength = 1.0;\n\nvoid main() {\n\n\tvec3 color = vColor;\n\tfloat depth = gl_FragCoord.z;\n\n\n\t//#if defined(num_snapshots) && num_snapshots > 0\n\t//\tvec3 sRGB = vec3(0.0, 0.0, 0.0);\n\t//\tfloat sA = 0.0;\n\n\t//\tfor(int i = 0; i < num_snapshots; i++){\n\n\t//\t\tfloat snapLinearDistance = 0.0;\n\t//\t\tfloat currentLinearDistance = vSnapProjectedDistance[i];\n\t//\t\tvec2 uv;\n\n\t//\t\t{\n\t//\t\t\tvec2 pc = vec2(gl_PointCoord.x - 0.5, (1.0 - gl_PointCoord.y) - 0.5);\n\t//\t\t\tvec2 offset = (pc * vPointSize) / vec2(uScreenWidth, uScreenHeight);\n\t//\t\n\t//\t\t\tuv = 0.5 * (vSnapProjected[i].xy /vSnapProjected[i].w) + 0.5 + offset;\t\n\t//\t\t\t\n\t//\t\t\tvec4 td = texture2D(uSnapshotDepth[i], uv);\n\t//\t\t\tfloat d = td.r;\n\n\t//\t\t\t// TODO save linear distance in uSnapshotDepth!!!\n\t//\t\t\tvec4 snapViewPos = uSnapProjInv[i] * vec4(uv * 2.0 - 1.0, d * 2.0 - 1.0, 1.0);\n\t//\t\t\tsnapViewPos = snapViewPos / snapViewPos.w;\n\t//\t\t\tsnapLinearDistance = -snapViewPos.z;\n\n\t//\t\t}\n\n\t//\t\tif(abs(currentLinearDistance - snapLinearDistance) < vRadius * 1.0){\n\t//\t\t\tvec4 col = texture2D(uSnapshot[i], uv);\n\t//\t\t\t//vec4 col = vec4(0.5, 1.0, 0.0, 1.0);\n\t//\t\t\tsRGB += col.rgb;\n\n\t//\t\t\tif(col.a != 0.0){\n\t//\t\t\t\tsA = sA + 1.0;\n\t//\t\t\t}\n\t//\t\t}else{\n\t//\t\t\t//sRGB += vColor;\n\t//\t\t\t//sA += 1.0;\n\t//\t\t\t\n\t//\t\t}\n\n\t//\t}\n\n\n\t//\tcolor = sRGB / sA;\n\t//\tif(sA == 0.0){\n\t//\t\t//color = vColor;\n\t//\t\tdiscard;\n\t//\t}\n\t//\n\t//#endif\n\n\n\t#if defined(circle_point_shape) || defined(paraboloid_point_shape) \n\t\tfloat u = 2.0 * gl_PointCoord.x - 1.0;\n\t\tfloat v = 2.0 * gl_PointCoord.y - 1.0;\n\t#endif\n\t\n\t#if defined(circle_point_shape) \n\t\tfloat cc = u*u + v*v;\n\t\tif(cc > 1.0){\n\t\t\tdiscard;\n\t\t}\n\t#endif\n\t\t\n\t#if defined color_type_point_index\n\t\tgl_FragColor = vec4(color, uPCIndex / 255.0);\n\t#else\n\t\tgl_FragColor = vec4(color, uOpacity);\n\t#endif\n\n\t#if defined paraboloid_point_shape\n\t\tfloat wi = 0.0 - ( u*u + v*v);\n\t\tvec4 pos = vec4(vViewPosition, 1.0);\n\t\tpos.z += wi * vRadius;\n\t\tfloat linearDepth = -pos.z;\n\t\tpos = projectionMatrix * pos;\n\t\tpos = pos / pos.w;\n\t\tfloat expDepth = pos.z;\n\t\tdepth = (pos.z + 1.0) / 2.0;\n\t\tgl_FragDepthEXT = depth;\n\t\t\n\t\t#if defined(color_type_depth)\n\t\t\tcolor.r = linearDepth;\n\t\t\tcolor.g = expDepth;\n\t\t#endif\n\t\t\n\t\t#if defined(use_edl)\n\t\t\tgl_FragColor.a = log2(linearDepth);\n\t\t#endif\n\t\t\n\t#else\n\t\t#if defined(use_edl)\n\t\t\tgl_FragColor.a = vLogDepth;\n\t\t#endif\n\t#endif\n\n\t#if defined(weighted_splats)\n\t\tfloat distance = 2.0 * length(gl_PointCoord.xy - 0.5);\n\t\tfloat weight = max(0.0, 1.0 - distance);\n\t\tweight = pow(weight, 1.5);\n\n\t\tgl_FragColor.a = weight;\n\t\tgl_FragColor.xyz = gl_FragColor.xyz * weight;\n\t#endif\n\t\n}\n\n\n",Potree.Shaders["pointcloud_sm.vs"]="\nprecision mediump float;\nprecision mediump int;\n\nattribute vec3 position;\nattribute vec3 color;\n\nuniform mat4 modelMatrix;\nuniform mat4 modelViewMatrix;\nuniform mat4 projectionMatrix;\nuniform mat4 viewMatrix;\n\nuniform float uScreenWidth;\nuniform float uScreenHeight;\nuniform float near;\nuniform float far;\n\nuniform float uSpacing;\nuniform float uOctreeSize;\nuniform float uLevel;\nuniform float uVNStart;\n\nuniform sampler2D visibleNodes;\n\nvarying float vLinearDepth;\nvarying vec3 vColor;\n\n#define PI 3.141592653589793\n\n\n\n// ---------------------\n// OCTREE\n// ---------------------\n\n#if defined(adaptive_point_size)\n/**\n * number of 1-bits up to inclusive index position\n * number is treated as if it were an integer in the range 0-255\n *\n */\nfloat numberOfOnes(float number, float index){\n\tfloat tmp = mod(number, pow(2.0, index + 1.0));\n\tfloat numOnes = 0.0;\n\tfor(float i = 0.0; i < 8.0; i++){\n\t\tif(mod(tmp, 2.0) != 0.0){\n\t\t\tnumOnes++;\n\t\t}\n\t\ttmp = floor(tmp / 2.0);\n\t}\n\treturn numOnes;\n}\n\n\n/**\n * checks whether the bit at index is 1\n * number is treated as if it were an integer in the range 0-255\n *\n */\nbool isBitSet(float number, float index){\n\treturn mod(floor(number / pow(2.0, index)), 2.0) != 0.0;\n}\n\n\n/**\n * find the LOD at the point position\n */\nfloat getLOD(){\n\t\n\tvec3 offset = vec3(0.0, 0.0, 0.0);\n\tfloat iOffset = uVNStart;\n\tfloat depth = uLevel;\n\tfor(float i = 0.0; i <= 30.0; i++){\n\t\tfloat nodeSizeAtLevel = uOctreeSize  / pow(2.0, i + uLevel + 0.0);\n\t\t\n\t\tvec3 index3d = (position-offset) / nodeSizeAtLevel;\n\t\tindex3d = floor(index3d + 0.5);\n\t\tfloat index = 4.0 * index3d.x + 2.0 * index3d.y + index3d.z;\n\t\t\n\t\tvec4 value = texture2D(visibleNodes, vec2(iOffset / 2048.0, 0.0));\n\t\tfloat mask = value.r * 255.0;\n\t\tif(isBitSet(mask, index)){\n\t\t\t// there are more visible child nodes at this position\n\t\t\tiOffset = iOffset + value.g * 255.0 * 256.0 + value.b * 255.0 + numberOfOnes(mask, index - 1.0);\n\t\t\tdepth++;\n\t\t}else{\n\t\t\t// no more visible child nodes at this position\n\t\t\treturn depth;\n\t\t}\n\t\t\n\t\toffset = offset + (vec3(1.0, 1.0, 1.0) * nodeSizeAtLevel * 0.5) * index3d;\n\t}\n\t\t\n\treturn depth;\n}\n\n#endif\n\nfloat getPointSize(){\n\tfloat pointSize = 1.0;\n\t\n\tfloat slope = tan(fov / 2.0);\n\tfloat projFactor =  -0.5 * uScreenHeight / (slope * vViewPosition.z);\n\t\n\tfloat r = uOctreeSpacing * 1.5;\n\tvRadius = r;\n\t#if defined fixed_point_size\n\t\tpointSize = size;\n\t#elif defined attenuated_point_size\n\t\tif(uUseOrthographicCamera){\n\t\t\tpointSize = size;\t\t\t\n\t\t}else{\n\t\t\tpointSize = pointSize * projFactor;\n\t\t}\n\t#elif defined adaptive_point_size\n\t\tif(uUseOrthographicCamera) {\n\t\t\tfloat worldSpaceSize = 1.5 * size * r / getPointSizeAttenuation();\n\t\t\tpointSize = (worldSpaceSize / uOrthoWidth) * uScreenWidth;\n\t\t} else {\n\t\t\tfloat worldSpaceSize = 1.5 * size * r / getPointSizeAttenuation();\n\t\t\tpointSize = worldSpaceSize * projFactor;\n\t\t}\n\t#endif\n\n\tpointSize = max(minSize, pointSize);\n\tpointSize = min(maxSize, pointSize);\n\t\n\tvRadius = pointSize / projFactor;\n\n\treturn pointSize;\n}\n\n\nvoid main() {\n\n\tvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\n\tvLinearDepth = gl_Position.w;\n\n\tfloat pointSize = getPointSize();\n\tgl_PointSize = pointSize;\n\n}\n",Potree.Shaders["pointcloud_sm.fs"]="\nprecision mediump float;\nprecision mediump int;\n\nvarying vec3 vColor;\nvarying float vLinearDepth;\n\nvoid main() {\n\n\t//gl_FragColor = vec4(1.0, 0.0, 0.0, 1.0);\n\t//gl_FragColor = vec4(vColor, 1.0);\n\t//gl_FragColor = vec4(vLinearDepth, pow(vLinearDepth, 2.0), 0.0, 1.0);\n\tgl_FragColor = vec4(vLinearDepth, vLinearDepth / 30.0, vLinearDepth / 30.0, 1.0);\n\t\n}\n\n\n",Potree.Shaders["normalize.vs"]="\nprecision mediump float;\nprecision mediump int;\n\nattribute vec3 position;\nattribute vec2 uv;\n\nuniform mat4 projectionMatrix;\nuniform mat4 modelViewMatrix;\n\nvarying vec2 vUv;\n\nvoid main() {\n\tvUv = uv;\n\tgl_Position = projectionMatrix * modelViewMatrix * vec4(position,1.0);\n}",Potree.Shaders["normalize.fs"]="\n#extension GL_EXT_frag_depth : enable\n\nprecision mediump float;\nprecision mediump int;\n\nuniform sampler2D uWeightMap;\nuniform sampler2D uDepthMap;\n\nvarying vec2 vUv;\n\nvoid main() {\n\tfloat depth = texture2D(uDepthMap, vUv).r;\n\t\n\tif(depth >= 1.0){\n\t\tdiscard;\n\t}\n\n\tgl_FragColor = vec4(depth, 1.0, 0.0, 1.0);\n\n\tvec4 color = texture2D(uWeightMap, vUv); \n\tcolor = color / color.w;\n\t\n\tgl_FragColor = vec4(color.xyz, 1.0); \n\t\n\tgl_FragDepthEXT = depth;\n\n\n}",Potree.Shaders["normalize_and_edl.fs"]="\n#extension GL_EXT_frag_depth : enable\n\nprecision mediump float;\nprecision mediump int;\n\nuniform sampler2D uWeightMap;\nuniform sampler2D uEDLMap;\nuniform sampler2D uDepthMap;\n\nuniform float screenWidth;\nuniform float screenHeight;\nuniform vec2 neighbours[NEIGHBOUR_COUNT];\nuniform float edlStrength;\nuniform float radius;\n\nvarying vec2 vUv;\n\nfloat response(float depth){\n\tvec2 uvRadius = radius / vec2(screenWidth, screenHeight);\n\t\n\tfloat sum = 0.0;\n\t\n\tfor(int i = 0; i < NEIGHBOUR_COUNT; i++){\n\t\tvec2 uvNeighbor = vUv + uvRadius * neighbours[i];\n\t\t\n\t\tfloat neighbourDepth = texture2D(uEDLMap, uvNeighbor).a;\n\n\t\tif(neighbourDepth != 0.0){\n\t\t\tif(depth == 0.0){\n\t\t\t\tsum += 100.0;\n\t\t\t}else{\n\t\t\t\tsum += max(0.0, depth - neighbourDepth);\n\t\t\t}\n\t\t}\n\t}\n\t\n\treturn sum / float(NEIGHBOUR_COUNT);\n}\n\nvoid main() {\n\n\tfloat edlDepth = texture2D(uEDLMap, vUv).a;\n\tfloat res = response(edlDepth);\n\tfloat shade = exp(-res * 300.0 * edlStrength);\n\n\tfloat depth = texture2D(uDepthMap, vUv).r;\n\tif(depth >= 1.0 && res == 0.0){\n\t\tdiscard;\n\t}\n\t\n\tvec4 color = texture2D(uWeightMap, vUv); \n\tcolor = color / color.w;\n\tcolor = color * shade;\n\n\tgl_FragColor = vec4(color.xyz, 1.0); \n\n\tgl_FragDepthEXT = depth;\n}",Potree.Shaders["edl.vs"]="\n\nvarying vec2 vUv;\n\nvoid main() {\n    vUv = uv;\n\t\n\tvec4 mvPosition = modelViewMatrix * vec4(position,1.0);\n\n    gl_Position = projectionMatrix * mvPosition;\n}",Potree.Shaders["edl.fs"]="// \n// adapted from the EDL shader code from Christian Boucheny in cloud compare:\n// https://github.com/cloudcompare/trunk/tree/master/plugins/qEDL/shaders/EDL\n//\n\nuniform float screenWidth;\nuniform float screenHeight;\nuniform vec2 neighbours[NEIGHBOUR_COUNT];\nuniform float edlStrength;\nuniform float radius;\nuniform float opacity;\n\n//uniform sampler2D colorMap;\nuniform sampler2D uRegularColor;\nuniform sampler2D uRegularDepth;\nuniform sampler2D uEDLColor;\nuniform sampler2D uEDLDepth;\n\nvarying vec2 vUv;\n\nfloat response(float depth){\n\tvec2 uvRadius = radius / vec2(screenWidth, screenHeight);\n\t\n\tfloat sum = 0.0;\n\t\n\tfor(int i = 0; i < NEIGHBOUR_COUNT; i++){\n\t\tvec2 uvNeighbor = vUv + uvRadius * neighbours[i];\n\t\t\n\t\tfloat neighbourDepth = texture2D(uEDLColor, uvNeighbor).a;\n\t\tneighbourDepth = (neighbourDepth == 1.0) ? 0.0 : neighbourDepth;\n\n\t\tif(neighbourDepth != 0.0){\n\t\t\tif(depth == 0.0){\n\t\t\t\tsum += 100.0;\n\t\t\t}else{\n\t\t\t\tsum += max(0.0, depth - neighbourDepth);\n\t\t\t}\n\t\t}\n\t}\n\t\n\treturn sum / float(NEIGHBOUR_COUNT);\n}\n\nvoid main(){\n\tvec4 cReg = texture2D(uRegularColor, vUv);\n\tvec4 cEDL = texture2D(uEDLColor, vUv);\n\t\n\tfloat depth = cEDL.a;\n\tdepth = (depth == 1.0) ? 0.0 : depth;\n\tfloat res = response(depth);\n\tfloat shade = exp(-res * 300.0 * edlStrength);\n\n\tfloat dReg = texture2D(uRegularDepth, vUv).r;\n\tfloat dEDL = texture2D(uEDLDepth, vUv).r;\n\n\tif(dEDL < dReg){\n\t\tgl_FragColor = vec4(cEDL.rgb * shade, opacity);\n\t}else{\n\t\tgl_FragColor = vec4(cReg.rgb * shade, cReg.a);\n\t}\n\n}\n",Potree.Shaders["blur.vs"]="\nvarying vec2 vUv;\n\nvoid main() {\n    vUv = uv;\n\n    gl_Position =   projectionMatrix * modelViewMatrix * vec4(position,1.0);\n}",Potree.Shaders["blur.fs"]="\nuniform mat4 projectionMatrix;\n\nuniform float screenWidth;\nuniform float screenHeight;\nuniform float near;\nuniform float far;\n\nuniform sampler2D map;\n\nvarying vec2 vUv;\n\nvoid main() {\n\n\tfloat dx = 1.0 / screenWidth;\n\tfloat dy = 1.0 / screenHeight;\n\n\tvec3 color = vec3(0.0, 0.0, 0.0);\n\tcolor += texture2D(map, vUv + vec2(-dx, -dy)).rgb;\n\tcolor += texture2D(map, vUv + vec2(  0, -dy)).rgb;\n\tcolor += texture2D(map, vUv + vec2(+dx, -dy)).rgb;\n\tcolor += texture2D(map, vUv + vec2(-dx,   0)).rgb;\n\tcolor += texture2D(map, vUv + vec2(  0,   0)).rgb;\n\tcolor += texture2D(map, vUv + vec2(+dx,   0)).rgb;\n\tcolor += texture2D(map, vUv + vec2(-dx,  dy)).rgb;\n\tcolor += texture2D(map, vUv + vec2(  0,  dy)).rgb;\n\tcolor += texture2D(map, vUv + vec2(+dx,  dy)).rgb;\n    \n\tcolor = color / 9.0;\n\t\n\tgl_FragColor = vec4(color, 1.0);\n\t\n\t\n}",Potree.POCLoader=function(){},Potree.POCLoader.load=function(e,t){try{let i=new Potree.PointCloudOctreeGeometry;i.url=e;let n=Potree.XHRFactory.createXMLHttpRequest();n.open("GET",e,!0),n.onreadystatechange=function(){if(4===n.readyState&&(200===n.status||0===n.status)){let o=JSON.parse(n.responseText),s=new Potree.Version(o.version);0===o.octreeDir.indexOf("http")?i.octreeDir=o.octreeDir:e.indexOf("cloud.js")>=0&&Potree.signedUrls?i.octreeDir=`${e.split("/").slice(0,-1).join("/")}/${o.octreeDir}`:i.octreeDir=e+"/../"+o.octreeDir,i.spacing=o.spacing,i.hierarchyStepSize=o.hierarchyStepSize,i.pointAttributes=o.pointAttributes;let r=new THREE.Vector3(o.boundingBox.lx,o.boundingBox.ly,o.boundingBox.lz),a=new THREE.Vector3(o.boundingBox.ux,o.boundingBox.uy,o.boundingBox.uz),l=new THREE.Box3(r,a),h=l.clone();o.tightBoundingBox&&(h.min.copy(new THREE.Vector3(o.tightBoundingBox.lx,o.tightBoundingBox.ly,o.tightBoundingBox.lz)),h.max.copy(new THREE.Vector3(o.tightBoundingBox.ux,o.tightBoundingBox.uy,o.tightBoundingBox.uz)));let d=r.clone();l.min.sub(d),l.max.sub(d),h.min.sub(d),h.max.sub(d),i.projection=o.projection,i.boundingBox=l,i.tightBoundingBox=h,i.boundingSphere=l.getBoundingSphere(),i.tightBoundingSphere=h.getBoundingSphere(),i.offset=d,"LAS"===o.pointAttributes?i.loader=new Potree.LasLazLoader(o.version):"LAZ"===o.pointAttributes?i.loader=new Potree.LasLazLoader(o.version):(i.loader=new Potree.BinaryLoader(o.version,l,o.scale),i.pointAttributes=new Potree.PointAttributes(i.pointAttributes));let c={};{let e="r",t=new Potree.PointCloudOctreeGeometryNode(e,i,l);t.level=0,t.hasChildren=!0,t.spacing=i.spacing,s.upTo("1.5")?t.numPoints=o.hierarchy[0][1]:t.numPoints=0,i.root=t,i.root.load(),c[e]=t}if(s.upTo("1.4"))for(let e=1;e<o.hierarchy.length;e++){let t=o.hierarchy[e][0],n=o.hierarchy[e][1],s=parseInt(t.charAt(t.length-1)),r=c[t.substring(0,t.length-1)],a=t.length-1,l=Potree.POCLoader.createChildAABB(r.boundingBox,s),h=new Potree.PointCloudOctreeGeometryNode(t,i,l);h.level=a,h.numPoints=n,h.spacing=i.spacing/Math.pow(2,a),r.addChild(h),c[t]=h}i.nodes=c,t(i)}},n.send(null)}catch(i){console.log("loading failed: '"+e+"'"),console.log(i),t()}},Potree.POCLoader.loadPointAttributes=function(e){let t=e.pointAttributes,i=new Potree.PointAttributes;for(let e=0;e<t.length;e++){let n=Potree.PointAttribute[t[e]];i.add(n)}return i},Potree.POCLoader.createChildAABB=function(e,t){let i=e.min.clone(),n=e.max.clone(),o=(new THREE.Vector3).subVectors(n,i);return(1&t)>0?i.z+=o.z/2:n.z-=o.z/2,(2&t)>0?i.y+=o.y/2:n.y-=o.y/2,(4&t)>0?i.x+=o.x/2:n.x-=o.x/2,new THREE.Box3(i,n)},Potree.PointAttributeNames={},Potree.PointAttributeNames.POSITION_CARTESIAN=0,Potree.PointAttributeNames.COLOR_PACKED=1,Potree.PointAttributeNames.COLOR_FLOATS_1=2,Potree.PointAttributeNames.COLOR_FLOATS_255=3,Potree.PointAttributeNames.NORMAL_FLOATS=4,Potree.PointAttributeNames.FILLER=5,Potree.PointAttributeNames.INTENSITY=6,Potree.PointAttributeNames.CLASSIFICATION=7,Potree.PointAttributeNames.NORMAL_SPHEREMAPPED=8,Potree.PointAttributeNames.NORMAL_OCT16=9,Potree.PointAttributeNames.NORMAL=10,Potree.PointAttributeNames.RETURN_NUMBER=11,Potree.PointAttributeNames.NUMBER_OF_RETURNS=12,Potree.PointAttributeNames.SOURCE_ID=13,Potree.PointAttributeNames.INDICES=14,Potree.PointAttributeNames.SPACING=15,Potree.PointAttributeTypes={DATA_TYPE_DOUBLE:{ordinal:0,size:8},DATA_TYPE_FLOAT:{ordinal:1,size:4},DATA_TYPE_INT8:{ordinal:2,size:1},DATA_TYPE_UINT8:{ordinal:3,size:1},DATA_TYPE_INT16:{ordinal:4,size:2},DATA_TYPE_UINT16:{ordinal:5,size:2},DATA_TYPE_INT32:{ordinal:6,size:4},DATA_TYPE_UINT32:{ordinal:7,size:4},DATA_TYPE_INT64:{ordinal:8,size:8},DATA_TYPE_UINT64:{ordinal:9,size:8}};let i=0;for(let e in Potree.PointAttributeTypes)Potree.PointAttributeTypes[i]=Potree.PointAttributeTypes[e],i++;Potree.PointAttribute=function(e,t,i){this.name=e,this.type=t,this.numElements=i,this.byteSize=this.numElements*this.type.size},Potree.PointAttribute.POSITION_CARTESIAN=new Potree.PointAttribute(Potree.PointAttributeNames.POSITION_CARTESIAN,Potree.PointAttributeTypes.DATA_TYPE_FLOAT,3),Potree.PointAttribute.RGBA_PACKED=new Potree.PointAttribute(Potree.PointAttributeNames.COLOR_PACKED,Potree.PointAttributeTypes.DATA_TYPE_INT8,4),Potree.PointAttribute.COLOR_PACKED=Potree.PointAttribute.RGBA_PACKED,Potree.PointAttribute.RGB_PACKED=new Potree.PointAttribute(Potree.PointAttributeNames.COLOR_PACKED,Potree.PointAttributeTypes.DATA_TYPE_INT8,3),Potree.PointAttribute.NORMAL_FLOATS=new Potree.PointAttribute(Potree.PointAttributeNames.NORMAL_FLOATS,Potree.PointAttributeTypes.DATA_TYPE_FLOAT,3),Potree.PointAttribute.FILLER_1B=new Potree.PointAttribute(Potree.PointAttributeNames.FILLER,Potree.PointAttributeTypes.DATA_TYPE_UINT8,1),Potree.PointAttribute.INTENSITY=new Potree.PointAttribute(Potree.PointAttributeNames.INTENSITY,Potree.PointAttributeTypes.DATA_TYPE_UINT16,1),Potree.PointAttribute.CLASSIFICATION=new Potree.PointAttribute(Potree.PointAttributeNames.CLASSIFICATION,Potree.PointAttributeTypes.DATA_TYPE_UINT8,1),Potree.PointAttribute.NORMAL_SPHEREMAPPED=new Potree.PointAttribute(Potree.PointAttributeNames.NORMAL_SPHEREMAPPED,Potree.PointAttributeTypes.DATA_TYPE_UINT8,2),Potree.PointAttribute.NORMAL_OCT16=new Potree.PointAttribute(Potree.PointAttributeNames.NORMAL_OCT16,Potree.PointAttributeTypes.DATA_TYPE_UINT8,2),Potree.PointAttribute.NORMAL=new Potree.PointAttribute(Potree.PointAttributeNames.NORMAL,Potree.PointAttributeTypes.DATA_TYPE_FLOAT,3),Potree.PointAttribute.RETURN_NUMBER=new Potree.PointAttribute(Potree.PointAttributeNames.RETURN_NUMBER,Potree.PointAttributeTypes.DATA_TYPE_UINT8,1),Potree.PointAttribute.NUMBER_OF_RETURNS=new Potree.PointAttribute(Potree.PointAttributeNames.NUMBER_OF_RETURNS,Potree.PointAttributeTypes.DATA_TYPE_UINT8,1),Potree.PointAttribute.SOURCE_ID=new Potree.PointAttribute(Potree.PointAttributeNames.SOURCE_ID,Potree.PointAttributeTypes.DATA_TYPE_UINT8,1),Potree.PointAttribute.INDICES=new Potree.PointAttribute(Potree.PointAttributeNames.INDICES,Potree.PointAttributeTypes.DATA_TYPE_UINT32,1),Potree.PointAttribute.SPACING=new Potree.PointAttribute(Potree.PointAttributeNames.SPACING,Potree.PointAttributeTypes.DATA_TYPE_FLOAT,1),Potree.PointAttributes=function(e){if(this.attributes=[],this.byteSize=0,this.size=0,null!=e)for(let t=0;t<e.length;t++){let i=e[t],n=Potree.PointAttribute[i];this.attributes.push(n),this.byteSize+=n.byteSize,this.size++}},Potree.PointAttributes.prototype.add=function(e){this.attributes.push(e),this.byteSize+=e.byteSize,this.size++},Potree.PointAttributes.prototype.hasColors=function(){for(let e in this.attributes){if(this.attributes[e].name===Potree.PointAttributeNames.COLOR_PACKED)return!0}return!1},Potree.PointAttributes.prototype.hasNormals=function(){for(let e in this.attributes){let t=this.attributes[e];if(t===Potree.PointAttribute.NORMAL_SPHEREMAPPED||t===Potree.PointAttribute.NORMAL_FLOATS||t===Potree.PointAttribute.NORMAL||t===Potree.PointAttribute.NORMAL_OCT16)return!0}return!1},Potree.BinaryLoader=class{constructor(e,t,i){this.version="string"==typeof e?new Potree.Version(e):e,this.boundingBox=t,this.scale=i}extension(){return".bin"}workerPath(){return Potree.scriptPath+"/workers/BinaryDecoderWorker.js"}load(e){if(e.loaded)return;let t=e.getURL(),i=e.getHierarchyPath()+"/"+e.name;this.version.equalOrHigher("1.4")&&(t+=this.extension(),i+=this.extension()),t+=Potree.getSignatureKeyForPath(i);let n=Potree.XHRFactory.createXMLHttpRequest();n.open("GET",t,!0),n.responseType="arraybuffer",n.overrideMimeType("text/plain; charset=x-user-defined"),n.onreadystatechange=(()=>{if(4===n.readyState){if(200!==n.status&&0!==n.status||null===n.response)throw new Error(`Failed to load file! HTTP status: ${n.status}, file: ${t}`);{let t=n.response;this.parse(e,t)}}});try{n.send(null)}catch(e){console.log("fehler beim laden der punktwolke: "+e)}}parse(e,t){let i=e.pcoGeometry.pointAttributes,n=t.byteLength/e.pcoGeometry.pointAttributes.byteSize;this.version.upTo("1.5")&&(e.numPoints=n);let o=this.workerPath(),s=Potree.workerPool.getWorker(o);s.onmessage=function(t){let n=t.data,r=n.attributeBuffers,a=new THREE.Box3((new THREE.Vector3).fromArray(n.tightBoundingBox.min),(new THREE.Vector3).fromArray(n.tightBoundingBox.max));Potree.workerPool.returnWorker(o,s);let l=new THREE.BufferGeometry;for(let e in r){let t=r[e].buffer;if(parseInt(e)===Potree.PointAttributeNames.POSITION_CARTESIAN)l.addAttribute("position",new THREE.BufferAttribute(new Float32Array(t),3));else if(parseInt(e)===Potree.PointAttributeNames.COLOR_PACKED)l.addAttribute("color",new THREE.BufferAttribute(new Uint8Array(t),4,!0));else if(parseInt(e)===Potree.PointAttributeNames.INTENSITY)l.addAttribute("intensity",new THREE.BufferAttribute(new Float32Array(t),1));else if(parseInt(e)===Potree.PointAttributeNames.CLASSIFICATION)l.addAttribute("classification",new THREE.BufferAttribute(new Uint8Array(t),1));else if(parseInt(e)===Potree.PointAttributeNames.NORMAL_SPHEREMAPPED)l.addAttribute("normal",new THREE.BufferAttribute(new Float32Array(t),3));else if(parseInt(e)===Potree.PointAttributeNames.NORMAL_OCT16)l.addAttribute("normal",new THREE.BufferAttribute(new Float32Array(t),3));else if(parseInt(e)===Potree.PointAttributeNames.NORMAL)l.addAttribute("normal",new THREE.BufferAttribute(new Float32Array(t),3));else if(parseInt(e)===Potree.PointAttributeNames.INDICES){let e=new THREE.BufferAttribute(new Uint8Array(t),4);e.normalized=!0,l.addAttribute("indices",e)}else if(parseInt(e)===Potree.PointAttributeNames.SPACING){let e=new THREE.BufferAttribute(new Float32Array(t),1);l.addAttribute("spacing",e)}}a.max.sub(a.min),a.min.set(0,0,0);let h=t.data.buffer.byteLength/i.byteSize;e.numPoints=h,e.geometry=l,e.mean=new THREE.Vector3(...n.mean),e.tightBoundingBox=a,e.loaded=!0,e.loading=!1,e.estimatedSpacing=n.estimatedSpacing,Potree.numNodesLoading--};let r={buffer:t,pointAttributes:i,version:this.version.version,min:[e.boundingBox.min.x,e.boundingBox.min.y,e.boundingBox.min.z],offset:[e.pcoGeometry.offset.x,e.pcoGeometry.offset.y,e.pcoGeometry.offset.z],scale:this.scale,spacing:e.spacing,hasChildren:e.hasChildren,name:e.name};s.postMessage(r,[r.buffer])}},Potree.EptLaszipLoader=class{load(e){if(e.loaded)return;const t=e.url().split("/").reverse()[0],i=Potree.getSignatureKeyForPath(t);let n=e.url()+".laz"+i,o=Potree.XHRFactory.createXMLHttpRequest();o.open("GET",n,!0),o.responseType="arraybuffer",o.overrideMimeType("text/plain; charset=x-user-defined"),o.onreadystatechange=(()=>{if(4===o.readyState)if(200===o.status){let t=o.response;this.parse(e,t)}else console.log("Failed "+n+": "+o.status)}),o.send(null)}parse(e,t){let i=new LASFile(t),n=new Potree.EptLazBatcher(e);i.open().then(()=>(i.isOpen=!0,i.getHeader())).then(t=>{let o=0,s=(t.pointsCount,e=>[e.x,e.y,e.z]),r=s(e.key.b.min),a=s(e.key.b.max),l=()=>{return i.readData(1e6,0,1).then(function(e){let s=new LASDecoder(e.buffer,t.pointsFormatId,t.pointsStructSize,e.count,t.scale,t.offset,r,a);return s.extraBytes=t.extraBytes,s.pointsFormatId=t.pointsFormatId,n.push(s),o+=e.count,e.hasMoreData?l():(t.totalRead=o,t.versionAsString=i.versionAsString,t.isCompressed=i.isCompressed,null)})};return l()}).then(()=>i.close()).then(()=>i.isOpen=!1).catch(e=>{if(console.log("Error reading LAZ:",e),!i.isOpen)throw e;i.close().then(()=>{throw i.isOpen=!1,e})})}},Potree.EptLazBatcher=class{constructor(e){this.node=e}push(e){let t=Potree.scriptPath+"/workers/EptLaszipDecoderWorker.js",i=Potree.workerPool.getWorker(t);i.onmessage=(n=>{let o=new THREE.BufferGeometry,s=e.pointsCount,r=new Float32Array(n.data.position),a=new Uint8Array(n.data.color),l=new Float32Array(n.data.intensity),h=new Uint8Array(n.data.classification),d=new Uint8Array(n.data.returnNumber),c=new Uint8Array(n.data.numberOfReturns),p=new Uint16Array(n.data.pointSourceID),u=new Uint8Array(n.data.indices);o.addAttribute("position",new THREE.BufferAttribute(r,3)),o.addAttribute("color",new THREE.BufferAttribute(a,4,!0)),o.addAttribute("intensity",new THREE.BufferAttribute(l,1)),o.addAttribute("classification",new THREE.BufferAttribute(h,1)),o.addAttribute("returnNumber",new THREE.BufferAttribute(d,1)),o.addAttribute("numberOfReturns",new THREE.BufferAttribute(c,1)),o.addAttribute("pointSourceID",new THREE.BufferAttribute(p,1)),o.addAttribute("indices",new THREE.BufferAttribute(u,4)),o.attributes.indices.normalized=!0;let m=new THREE.Box3((new THREE.Vector3).fromArray(n.data.tightBoundingBox.min),(new THREE.Vector3).fromArray(n.data.tightBoundingBox.max));this.node.doneLoading(o,m,s,new THREE.Vector3(...n.data.mean)),Potree.workerPool.returnWorker(t,i)});let n={buffer:e.arrayb,numPoints:e.pointsCount,pointSize:e.pointSize,pointFormatID:e.pointsFormatId,scale:e.scale,offset:e.offset,mins:e.mins,maxs:e.maxs};i.postMessage(n,[n.buffer])}},Potree.EptLoader=class{static async load(e,t){let i=await fetch(e),n=await i.json();const o=e.substr(0,e.lastIndexOf("ept.json"));let s=new Potree.PointCloudEptGeometry(o,n),r=new Potree.PointCloudEptGeometryNode(s);s.root=r,s.root.load(),t(s)}};class U{static toVector3(e,t){return(new THREE.Vector3).fromArray(e,t||0)}static toBox3(e){return new THREE.Box3(U.toVector3(e),U.toVector3(e,3))}static findDim(e,t){var i=e.find(e=>e.name==t);if(!i)throw new Error("Failed to find "+t+" in schema");return i}static sphereFrom(e){return e.getBoundingSphere(new THREE.Sphere)}}Potree.PointCloudEptGeometry=class{constructor(e,t){t.version;let i=t.schema,n=t.bounds,o=t.boundsConforming,s=[U.findDim(i,"X"),U.findDim(i,"Y"),U.findDim(i,"Z")],r=s.map(e=>e.scale||1),a=s.map(e=>e.offset||0);this.eptScale=U.toVector3(r),this.eptOffset=U.toVector3(a),this.url=e,this.info=t,this.type="ept",this.schema=i,this.span=t.span,this.boundingBox=U.toBox3(n),this.tightBoundingBox=U.toBox3(o),this.offset=U.toVector3([0,0,0]),this.boundingSphere=U.sphereFrom(this.boundingBox),this.tightBoundingSphere=U.sphereFrom(this.tightBoundingBox),this.version=new Potree.Version("1.6"),this.projection=null,this.fallbackProjection=null,t.srs&&t.srs.horizontal&&(this.projection=t.srs.authority+":"+t.srs.horizontal),t.srs.wkt&&(this.projection?this.fallbackProjection=t.srs.wkt:this.projection=t.srs.wkt),this.pointAttributes="LAZ",this.spacing=(this.boundingBox.max.x-this.boundingBox.min.x)/this.span;t.hierarchyType;const l=t.dataType;if("laszip"==l)this.loader=new Potree.EptLaszipLoader;else if("binary"==l)this.loader=new Potree.EptBinaryLoader;else{if("zstandard"!=l)throw new Error("Could not read data type: "+l);this.loader=new Potree.EptZstandardLoader(this.version)}}},Potree.EptKey=class{constructor(e,t,i,n,o,s){this.ept=e,this.b=t,this.d=i,this.x=n||0,this.y=o||0,this.z=s||0}name(){return this.d+"-"+this.x+"-"+this.y+"-"+this.z}step(e,t,i){let n=this.b.min.clone(),o=this.b.max.clone(),s=(new THREE.Vector3).subVectors(o,n);return e?n.x+=s.x/2:o.x-=s.x/2,t?n.y+=s.y/2:o.y-=s.y/2,i?n.z+=s.z/2:o.z-=s.z/2,new Potree.EptKey(this.ept,new THREE.Box3(n,o),this.d+1,2*this.x+e,2*this.y+t,2*this.z+i)}children(){for(var e=[],t=0;t<2;++t)for(var i=0;i<2;++i)for(var n=0;n<2;++n){var o=this.step(t,i,n).name();e.includes(o)||(e=e.concat(o))}return e}},Potree.PointCloudEptGeometryNode=class e extends Potree.PointCloudTreeNode{constructor(t,i,n,o,s,r){super(),this.ept=t,this.key=new Potree.EptKey(this.ept,i||this.ept.boundingBox,n||0,o,s,r),this.id=e.IDCount++,this.geometry=null,this.boundingBox=this.key.b,this.tightBoundingBox=this.boundingBox,this.spacing=this.ept.spacing/Math.pow(2,this.key.d),this.boundingSphere=U.sphereFrom(this.boundingBox),this.hasChildren=!1,this.children={},this.numPoints=-1,this.level=this.key.d,this.loaded=!1,this.loading=!1,this.oneTimeDisposeHandlers=[];let a=this.key;this.name=this.toPotreeName(a.d,a.x,a.y,a.z),this.index=parseInt(this.name.charAt(this.name.length-1))}isGeometryNode(){return!0}getLevel(){return this.level}isTreeNode(){return!1}isLoaded(){return this.loaded}getBoundingSphere(){return this.boundingSphere}getBoundingBox(){return this.boundingBox}url(){return this.ept.url+"ept-data/"+this.filename()}getNumPoints(){return this.numPoints}filename(){return this.key.name()}getChildren(){let e=[];for(let t=0;t<8;t++)this.children[t]&&e.push(this.children[t]);return e}addChild(e){this.children[e.index]=e,e.parent=this}load(){this.loaded||this.loading||Potree.numNodesLoading>=Potree.maxNodesLoading||(this.loading=!0,++Potree.numNodesLoading,-1==this.numPoints&&this.loadHierarchy(),this.loadPoints())}loadPoints(){this.ept.loader.load(this)}async loadHierarchy(){let e={};e[this.filename()]=this,this.hasChildren=!1;let t=`${this.ept.url}ept-hierarchy/${this.filename()}.json`;t+=Potree.getSignatureKeyForPath(`ept-hierarchy/${this.filename()}.json`);let i=await fetch(t),n=await i.json();Object.keys(n).sort((e,t)=>{let[i,n,o,s]=e.split("-").map(e=>parseInt(e,10)),[r,a,l,h]=t.split("-").map(e=>parseInt(e,10));return i<r?-1:i>r?1:n<a?-1:n>a?1:o<l?-1:o>l?1:s<h?-1:s>h?1:0}).forEach(t=>{let[i,o,s,r]=t.split("-").map(e=>parseInt(e,10)),a=1&o,l=1&s,h=1&r,d=e[i-1+"-"+(o>>1)+"-"+(s>>1)+"-"+(r>>1)];if(!d)return;d.hasChildren=!0;let c=d.key.step(a,l,h),p=new Potree.PointCloudEptGeometryNode(this.ept,c.b,c.d,c.x,c.y,c.z);p.level=i,p.numPoints=n[t],d.addChild(p),e[c.name()]=p})}doneLoading(e,t,i,n){e.boundingBox=this.boundingBox,this.geometry=e,this.tightBoundingBox=t,this.numPoints=i,this.mean=n,this.loaded=!0,this.loading=!1,--Potree.numNodesLoading}toPotreeName(e,t,i,n){for(var o="r",s=0;s<e;++s){var r=1<<e-s-1,a=0;t&r&&(a+=4),i&r&&(a+=2),n&r&&(a+=1),o+=a}return o}dispose(){if(this.geometry&&null!=this.parent){this.geometry.dispose(),this.geometry=null,this.loaded=!1;for(let e=0;e<this.oneTimeDisposeHandlers.length;e++){(0,this.oneTimeDisposeHandlers[e])()}this.oneTimeDisposeHandlers=[]}}},Potree.PointCloudEptGeometryNode.IDCount=0,Potree.GreyhoundBinaryLoader=class{constructor(e,t,i){this.version="string"==typeof e?new Potree.Version(e):e,this.boundingBox=t,this.scale=i}load(e){if(e.loaded)return;let t=this,i=e.getURL(),n=Potree.XHRFactory.createXMLHttpRequest();n.open("GET",i,!0),n.responseType="arraybuffer",n.overrideMimeType("text/plain; charset=x-user-defined"),n.onreadystatechange=function(){if(4===n.readyState)if(200===n.status||0===n.status){let i=n.response;t.parse(e,i)}else console.log("Failed to load file! HTTP status:",n.status,"file:",i)};try{n.send(null)}catch(e){console.log("error loading point cloud: "+e)}}parse(e,t){let i=new DataView(t,t.byteLength-4,4).getUint32(0,!0),n=e.pcoGeometry.pointAttributes;e.numPoints=i;let o=Potree.scriptPath+"/workers/GreyhoundBinaryDecoderWorker.js",s=Potree.workerPool.getWorker(o);s.onmessage=function(t){let i=t.data,n=i.attributeBuffers,r=new THREE.Box3((new THREE.Vector3).fromArray(i.tightBoundingBox.min),(new THREE.Vector3).fromArray(i.tightBoundingBox.max));Potree.workerPool.returnWorker(o,s);let a=new THREE.BufferGeometry;for(let e in n){let t=n[e].buffer;if(parseInt(e)===Potree.PointAttributeNames.POSITION_CARTESIAN)a.addAttribute("position",new THREE.BufferAttribute(new Float32Array(t),3));else if(parseInt(e)===Potree.PointAttributeNames.COLOR_PACKED)a.addAttribute("color",new THREE.BufferAttribute(new Uint8Array(t),4,!0));else if(parseInt(e)===Potree.PointAttributeNames.INTENSITY)a.addAttribute("intensity",new THREE.BufferAttribute(new Float32Array(t),1));else if(parseInt(e)===Potree.PointAttributeNames.CLASSIFICATION)a.addAttribute("classification",new THREE.BufferAttribute(new Uint8Array(t),1));else if(parseInt(e)===Potree.PointAttributeNames.NORMAL_SPHEREMAPPED)a.addAttribute("normal",new THREE.BufferAttribute(new Float32Array(t),3));else if(parseInt(e)===Potree.PointAttributeNames.NORMAL_OCT16)a.addAttribute("normal",new THREE.BufferAttribute(new Float32Array(t),3));else if(parseInt(e)===Potree.PointAttributeNames.NORMAL)a.addAttribute("normal",new THREE.BufferAttribute(new Float32Array(t),3));else if(parseInt(e)===Potree.PointAttributeNames.INDICES){let e=new THREE.BufferAttribute(new Uint8Array(t),4);e.normalized=!0,a.addAttribute("indices",e)}else if(parseInt(e)===Potree.PointAttributeNames.SPACING){let e=new THREE.BufferAttribute(new Float32Array(t),1);a.addAttribute("spacing",e)}}r.max.sub(r.min),r.min.set(0,0,0),e.numPoints=i.numPoints,e.geometry=a,e.mean=new THREE.Vector3(...i.mean),e.tightBoundingBox=r,e.loaded=!0,e.loading=!1,Potree.numNodesLoading--};let r=e.boundingBox,a=e.pcoGeometry.boundingBox.getCenter().sub(e.boundingBox.min),l={buffer:t,pointAttributes:n,version:this.version.version,schema:e.pcoGeometry.schema,min:[r.min.x,r.min.y,r.min.z],max:[r.max.x,r.max.y,r.max.z],offset:a.toArray(),scale:this.scale,normalize:e.pcoGeometry.normalize};s.postMessage(l,[l.buffer])}};class GreyhoundUtils{static getQueryParam(e){e=e.replace(/[[\]]/g,"\\$&");let t=new RegExp("[?&]"+e+"(=([^&#]*)|&|#|$)").exec(window.location.href);return t?t[2]?decodeURIComponent(t[2].replace(/\+/g," ")):"":null}static createSchema(e){let t=[{name:"X",size:4,type:"signed"},{name:"Y",size:4,type:"signed"},{name:"Z",size:4,type:"signed"}];return e.forEach(function(e){"COLOR_PACKED"===e?(t.push({name:"Red",size:2,type:"unsigned"}),t.push({name:"Green",size:2,type:"unsigned"}),t.push({name:"Blue",size:2,type:"unsigned"})):"INTENSITY"===e?t.push({name:"Intensity",size:2,type:"unsigned"}):"CLASSIFICATION"===e&&t.push({name:"Classification",size:1,type:"unsigned"})}),t}static fetch(e,t){let i=Potree.XHRFactory.createXMLHttpRequest();i.open("GET",e,!0),i.onreadystatechange=function(){4===i.readyState&&(200===i.status||0===i.status?t(null,i.responseText):t(i.responseText))},i.send(null)}static fetchBinary(e,t){let i=Potree.XHRFactory.createXMLHttpRequest();i.open("GET",e,!0),i.responseType="arraybuffer",i.onreadystatechange=function(){4===i.readyState&&(200===i.status||0===i.status?t(null,i.response):t(i.responseText))},i.send(null)}static pointSizeFrom(e){return e.reduce((e,t)=>e+t.size,0)}static getNormalization(e,t,i){let n=[{name:"X",size:4,type:"floating"},{name:"Y",size:4,type:"floating"},{name:"Z",size:4,type:"floating"},{name:"Red",size:2,type:"unsigned"},{name:"Green",size:2,type:"unsigned"},{name:"Blue",size:2,type:"unsigned"},{name:"Intensity",size:2,type:"unsigned"}],o=e+"read?depth="+t+"&schema="+JSON.stringify(n);GreyhoundUtils.fetchBinary(o,function(e,t){if(e)throw new Error(e);let o=new DataView(t),s=t.byteLength-4,r=GreyhoundUtils.pointSizeFrom(n),a=!1,l=!1;for(let e=0;e<s&&((o.getUint16(e+12,!0)>255||o.getUint16(e+14,!0)>255||o.getUint16(e+16,!0)>255)&&(a=!0),o.getUint16(e+18,!0)>255&&(l=!0),!a||!l);e+=r);a&&console.log("Normalizing color"),l&&console.log("Normalizing intensity"),i(null,{color:a,intensity:l})})}}function LRUItem(e){this.previous=null,this.next=null,this.node=e}function LRU(){this.first=null,this.last=null,this.items={},this.elements=0,this.numPoints=0}Potree.GreyhoundLoader=function(){},Potree.GreyhoundLoader.loadInfoJSON=function(e,t){},Potree.GreyhoundLoader.load=function(e,t){try{let i=e.split("greyhound://")[1];1===i.split("http://").length&&(i="http://"+i),GreyhoundUtils.fetch(i+"info",function(e,n){if(e)throw new Error(e);let o=JSON.parse(n),s=new Potree.Version("1.4"),r=o.bounds,a=o.scale||.01;Array.isArray(a)&&(a=Math.min(a[0],a[1],a[2])),GreyhoundUtils.getQueryParam("scale")&&(a=parseFloat(GreyhoundUtils.getQueryParam("scale")));let l=Math.max(8,o.baseDepth),h=["POSITION_CARTESIAN"],d=!1,c=!1,p=!1;o.schema.forEach(function(e){"Intensity"===e.name&&h.push("INTENSITY"),"Classification"===e.name&&h.push("CLASSIFICATION"),"Red"===e.name?d=!0:"Green"===e.name?c=!0:"Blue"===e.name&&(p=!0)}),d&&c&&p&&h.push("COLOR_PACKED");let u=new Potree.PointCloudGreyhoundGeometry;u.serverURL=i,u.spacing=(r[3]-r[0])/Math.pow(2,l),u.baseDepth=l,u.hierarchyStepSize=5,u.schema=GreyhoundUtils.createSchema(h);let m=GreyhoundUtils.pointSizeFrom(u.schema);u.pointAttributes=new Potree.PointAttributes(h),u.pointAttributes.byteSize=m;let g=new THREE.Box3((new THREE.Vector3).fromArray(r,0),(new THREE.Vector3).fromArray(r,3)),f=g.min.clone();g.max.sub(g.min),g.min.set(0,0,0),u.projection=o.srs,u.boundingBox=g,u.boundingSphere=g.getBoundingSphere(),u.scale=a,u.offset=f,console.log("Scale:",a),console.log("Offset:",f),console.log("Bounds:",g),u.loader=new Potree.GreyhoundBinaryLoader(s,g,u.scale);let E={};{let e="r",t=new Potree.PointCloudGreyhoundGeometryNode(e,u,g,a,f);t.level=0,t.hasChildren=!0,t.numPoints=o.numPoints,t.spacing=u.spacing,u.root=t,u.root.load(),E[e]=t}u.nodes=E,GreyhoundUtils.getNormalization(i,o.baseDepth,function(e,i){i.color&&(u.normalize.color=!0),i.intensity&&(u.normalize.intensity=!0),t(u)})})}catch(i){console.log("loading failed: '"+e+"'"),console.log(i),t()}},Potree.GreyhoundLoader.loadPointAttributes=function(e){let t=e.pointAttributes,i=new Potree.PointAttributes;for(let e=0;e<t.length;e++){let n=Potree.PointAttribute[t[e]];i.add(n)}return i},Potree.GreyhoundLoader.createChildAABB=function(e,t){let i=e.min,n=e.max,o=(new THREE.Vector3).copy(n).sub(i).multiplyScalar(.5),s=new THREE.Vector3(o.x,0,0),r=new THREE.Vector3(0,o.y,0),a=new THREE.Vector3(0,0,o.z),l=i,h=(new THREE.Vector3).add(i).add(o);return 1===t?(i=(new THREE.Vector3).copy(l).add(a),n=(new THREE.Vector3).copy(h).add(a)):3===t?(i=(new THREE.Vector3).copy(l).add(a).add(r),n=(new THREE.Vector3).copy(h).add(a).add(r)):0===t?(i=l,n=h):2===t?(i=(new THREE.Vector3).copy(l).add(r),n=(new THREE.Vector3).copy(h).add(r)):5===t?(i=(new THREE.Vector3).copy(l).add(a).add(s),n=(new THREE.Vector3).copy(h).add(a).add(s)):7===t?(i=(new THREE.Vector3).copy(l).add(o),n=(new THREE.Vector3).copy(h).add(o)):4===t?(i=(new THREE.Vector3).copy(l).add(s),n=(new THREE.Vector3).copy(h).add(s)):6===t&&(i=(new THREE.Vector3).copy(l).add(s).add(r),n=(new THREE.Vector3).copy(h).add(s).add(r)),new THREE.Box3(i,n)},Potree.LasLazLoader=class{constructor(e){this.version="string"==typeof e?new Potree.Version(e):e}static progressCB(){}load(e){if(e.loaded)return;let t=e.pcoGeometry.pointAttributes,i=e.getURL();this.version.equalOrHigher("1.4")&&(i+="."+t.toLowerCase());let n=Potree.XHRFactory.createXMLHttpRequest();n.open("GET",i,!0),n.responseType="arraybuffer",n.overrideMimeType("text/plain; charset=x-user-defined"),n.onreadystatechange=(()=>{if(4===n.readyState)if(200===n.status){let t=n.response;this.parse(e,t)}else console.log("Failed to load file! HTTP status: "+n.status+", file: "+i)}),n.send(null)}parse(e,t){let i=new LASFile(t),n=new Potree.LasLazBatcher(e);i.open().then(e=>(i.isOpen=!0,i)).catch(e=>{console.log("failed to open file. :(")}).then(e=>e.getHeader().then(function(t){return[e,t]})).then(e=>{let t=e[0],i=e[1],o=0,s=i.pointsCount,r=function(){return t.readData(1e6,0,1).then(function(e){return n.push(new LASDecoder(e.buffer,i.pointsFormatId,i.pointsStructSize,e.count,i.scale,i.offset,i.mins,i.maxs)),o+=e.count,Potree.LasLazLoader.progressCB(o/s),e.hasMoreData?r():(i.totalRead=o,i.versionAsString=t.versionAsString,i.isCompressed=t.isCompressed,[t,i,n])})};return r()}).then(e=>{let t=e[0];return Potree.LasLazLoader.progressCB(1),t.close().then(function(){return t.isOpen=!1,e.slice(1)}).catch(e=>{if(t.isOpen)return t.close().then(function(){throw t.isOpen=!1,e});throw e})})}handle(e,t){}},Potree.LasLazBatcher=class{constructor(e){this.node=e}push(e){let t=Potree.scriptPath+"/workers/LASDecoderWorker.js",i=Potree.workerPool.getWorker(t);this.node;i.onmessage=(n=>{let o=new THREE.BufferGeometry,s=e.pointsCount,r=new Float32Array(n.data.position),a=new Uint8Array(n.data.color),l=new Float32Array(n.data.intensity),h=new Uint8Array(n.data.classification),d=new Uint8Array(n.data.returnNumber),c=new Uint8Array(n.data.numberOfReturns),p=new Uint16Array(n.data.pointSourceID),u=new Uint8Array(n.data.indices);o.addAttribute("position",new THREE.BufferAttribute(r,3)),o.addAttribute("color",new THREE.BufferAttribute(a,4,!0)),o.addAttribute("intensity",new THREE.BufferAttribute(l,1)),o.addAttribute("classification",new THREE.BufferAttribute(h,1)),o.addAttribute("returnNumber",new THREE.BufferAttribute(d,1)),o.addAttribute("numberOfReturns",new THREE.BufferAttribute(c,1)),o.addAttribute("pointSourceID",new THREE.BufferAttribute(p,1)),o.addAttribute("indices",new THREE.BufferAttribute(u,4)),o.attributes.indices.normalized=!0;let m=new THREE.Box3((new THREE.Vector3).fromArray(n.data.tightBoundingBox.min),(new THREE.Vector3).fromArray(n.data.tightBoundingBox.max));o.boundingBox=this.node.boundingBox,this.node.tightBoundingBox=m,this.node.geometry=o,this.node.numPoints=s,this.node.loaded=!0,this.node.loading=!1,Potree.numNodesLoading--,this.node.mean=new THREE.Vector3(...n.data.mean),Potree.workerPool.returnWorker(t,i)});let n={buffer:e.arrayb,numPoints:e.pointsCount,pointSize:e.pointSize,pointFormatID:2,scale:e.scale,offset:e.offset,mins:e.mins,maxs:e.maxs};i.postMessage(n,[n.buffer])}},Potree.EptZstandardLoader=class{extension(){return".zst"}workerPath(){return Potree.scriptPath+"/workers/EptZstandardDecoderWorker.js"}load(e){if(e.loaded)return;let t=e.url()+this.extension();const i=t.split("/").splice(-2,2).join("/"),n=Potree.getSignatureKeyForPath(i);t+=n;let o=Potree.XHRFactory.createXMLHttpRequest();o.open("GET",t,!0),o.responseType="arraybuffer",o.overrideMimeType("text/plain; charset=x-user-defined"),o.onreadystatechange=(()=>{if(4===o.readyState)if(200===o.status){let t=o.response;this.parse(e,t)}else console.log("Failed "+t+": "+o.status)});try{o.send(null)}catch(e){console.log("Failed request: "+e)}}parse(e,t){let i=this.workerPath(),n=Potree.workerPool.getWorker(i);n.onmessage=function(t){let o=new THREE.BufferGeometry,s=t.data.numPoints,r=new Float32Array(t.data.position);o.addAttribute("position",new THREE.BufferAttribute(r,3));let a=new Uint8Array(t.data.indices);if(o.addAttribute("indices",new THREE.BufferAttribute(a,4)),t.data.color){let e=new Uint8Array(t.data.color);o.addAttribute("color",new THREE.BufferAttribute(e,4,!0))}if(t.data.intensity){let e=new Float32Array(t.data.intensity);o.addAttribute("intensity",new THREE.BufferAttribute(e,1))}if(t.data.classification){let e=new Uint8Array(t.data.classification);o.addAttribute("classification",new THREE.BufferAttribute(e,1))}if(t.data.returnNumber){let e=new Uint8Array(t.data.returnNumber);o.addAttribute("returnNumber",new THREE.BufferAttribute(e,1))}if(t.data.numberOfReturns){let e=new Uint8Array(t.data.numberOfReturns);o.addAttribute("numberOfReturns",new THREE.BufferAttribute(e,1))}if(t.data.pointSourceId){let e=new Uint16Array(t.data.pointSourceId);o.addAttribute("pointSourceID",new THREE.BufferAttribute(e,1))}o.attributes.indices.normalized=!0;let l=new THREE.Box3((new THREE.Vector3).fromArray(t.data.tightBoundingBox.min),(new THREE.Vector3).fromArray(t.data.tightBoundingBox.max));e.doneLoading(o,l,s,new THREE.Vector3(...t.data.mean)),Potree.workerPool.returnWorker(i,n)};let o={buffer:t,schema:e.ept.schema,scale:e.ept.eptScale,offset:e.ept.eptOffset,mins:(e=>[e.x,e.y,e.z])(e.key.b.min)};n.postMessage(o,[o.buffer])}},Potree.Gradients={RAINBOW:[[0,new THREE.Color(.278,0,.714)],[1/6,new THREE.Color(0,0,1)],[2/6,new THREE.Color(0,1,1)],[.5,new THREE.Color(0,1,0)],[4/6,new THREE.Color(1,1,0)],[5/6,new THREE.Color(1,.64,0)],[1,new THREE.Color(1,0,0)]],SPECTRAL:[[0,new THREE.Color(.3686,.3098,.6353)],[.1,new THREE.Color(.1961,.5333,.7412)],[.2,new THREE.Color(.4,.7608,.6471)],[.3,new THREE.Color(.6706,.8667,.6431)],[.4,new THREE.Color(.902,.9608,.5961)],[.5,new THREE.Color(1,1,.749)],[.6,new THREE.Color(.9961,.8784,.5451)],[.7,new THREE.Color(.9922,.6824,.3804)],[.8,new THREE.Color(.9569,.4275,.2627)],[.9,new THREE.Color(.8353,.2431,.3098)],[1,new THREE.Color(.6196,.0039,.2588)]],PLASMA:[[0,new THREE.Color(.241,.015,.61)],[.1,new THREE.Color(.387,.001,.654)],[.2,new THREE.Color(.524,.025,.653)],[.3,new THREE.Color(.651,.125,.596)],[.4,new THREE.Color(.752,.227,.513)],[.5,new THREE.Color(.837,.329,.431)],[.6,new THREE.Color(.907,.435,.353)],[.7,new THREE.Color(.963,.554,.272)],[.8,new THREE.Color(.992,.681,.195)],[.9,new THREE.Color(.987,.822,.144)],[1,new THREE.Color(.94,.975,.131)]],YELLOW_GREEN:[[0,new THREE.Color(.1647,.2824,.3451)],[.1,new THREE.Color(.1338,.3555,.4227)],[.2,new THREE.Color(.061,.4319,.4864)],[.3,new THREE.Color(0,.5099,.5319)],[.4,new THREE.Color(0,.5881,.5569)],[.5,new THREE.Color(.137,.665,.5614)],[.6,new THREE.Color(.2906,.7395,.5477)],[.7,new THREE.Color(.4453,.8099,.5201)],[.8,new THREE.Color(.6102,.8748,.485)],[.9,new THREE.Color(.7883,.9323,.4514)],[1,new THREE.Color(.9804,.9804,.4314)]],VIRIDIS:[[0,new THREE.Color(.267,.005,.329)],[.1,new THREE.Color(.283,.141,.458)],[.2,new THREE.Color(.254,.265,.53)],[.3,new THREE.Color(.207,.372,.553)],[.4,new THREE.Color(.164,.471,.558)],[.5,new THREE.Color(.128,.567,.551)],[.6,new THREE.Color(.135,.659,.518)],[.7,new THREE.Color(.267,.749,.441)],[.8,new THREE.Color(.478,.821,.318)],[.9,new THREE.Color(.741,.873,.15)],[1,new THREE.Color(.993,.906,.144)]],INFERNO:[[0,new THREE.Color(.077,.042,.206)],[.1,new THREE.Color(.225,.036,.388)],[.2,new THREE.Color(.373,.074,.432)],[.3,new THREE.Color(.522,.128,.42)],[.4,new THREE.Color(.665,.182,.37)],[.5,new THREE.Color(.797,.255,.287)],[.6,new THREE.Color(.902,.364,.184)],[.7,new THREE.Color(.969,.516,.063)],[.8,new THREE.Color(.988,.683,.072)],[.9,new THREE.Color(.961,.859,.298)],[1,new THREE.Color(.988,.998,.645)]],GRAYSCALE:[[0,new THREE.Color(0,0,0)],[1,new THREE.Color(1,1,1)]]},Potree.Classification={DEFAULT:{0:new THREE.Vector4(.5,.5,.5,1),1:new THREE.Vector4(.5,.5,.5,1),2:new THREE.Vector4(.63,.32,.18,1),3:new THREE.Vector4(0,1,0,1),4:new THREE.Vector4(0,.8,0,1),5:new THREE.Vector4(0,.6,0,1),6:new THREE.Vector4(1,.66,0,1),7:new THREE.Vector4(1,0,1,1),8:new THREE.Vector4(1,0,0,1),9:new THREE.Vector4(0,0,1,1),12:new THREE.Vector4(1,1,0,1),DEFAULT:new THREE.Vector4(.3,.6,.6,.5)}},Potree.PointSizeType={FIXED:0,ATTENUATED:1,ADAPTIVE:2},Potree.PointShape={SQUARE:0,CIRCLE:1,PARABOLOID:2},Potree.PointColorType={RGB:0,COLOR:1,DEPTH:2,HEIGHT:3,ELEVATION:3,INTENSITY:4,INTENSITY_GRADIENT:5,LOD:6,LEVEL_OF_DETAIL:6,POINT_INDEX:7,CLASSIFICATION:8,RETURN_NUMBER:9,SOURCE:10,NORMAL:11,PHONG:12,RGB_HEIGHT:13,RGB_HIGHLIGHT:14,COMPOSITE:50},Potree.TreeType={OCTREE:0,KDTREE:1},Potree.PointCloudMaterial=class extends THREE.RawShaderMaterial{constructor(e={}){super(),this.visibleNodesTexture=Potree.utils.generateDataTexture(2048,1,new THREE.Color(16777215)),this.visibleNodesTexture.minFilter=THREE.NearestFilter,this.visibleNodesTexture.magFilter=THREE.NearestFilter;let t=(e,t)=>void 0!==e?e:t,i=t(e.size,1),n=t(e.minSize,2),o=t(e.maxSize,50),s=t(e.treeType,Potree.TreeType.OCTREE);this._pointSizeType=Potree.PointSizeType.FIXED,this._shape=Potree.PointShape.SQUARE,this._pointColorType=Potree.PointColorType.RGB,this._useClipBox=!1,this.clipBoxes=[],this.numClipBoxes=0,this.clipPolygons=[],this._weighted=!1,this._gradient=Potree.Gradients.SPECTRAL,this.gradientTexture=Potree.PointCloudMaterial.generateGradientTexture(this._gradient),this.lights=!1,this.fog=!1,this._treeType=s,this._useEDL=!1,this._snapEnabled=!1,this._numSnapshots=0,this.defines=new Map,this._defaultIntensityRangeChanged=!1,this._defaultElevationRangeChanged=!1,this.attributes={position:{type:"fv",value:[]},color:{type:"fv",value:[]},normal:{type:"fv",value:[]},intensity:{type:"f",value:[]},classification:{type:"f",value:[]},returnNumber:{type:"f",value:[]},numberOfReturns:{type:"f",value:[]},pointSourceID:{type:"f",value:[]},indices:{type:"fv",value:[]}},this.uniforms={level:{type:"f",value:0},vnStart:{type:"f",value:0},spacing:{type:"f",value:1},blendHardness:{type:"f",value:2},blendDepthSupplement:{type:"f",value:0},fov:{type:"f",value:1},screenWidth:{type:"f",value:1},screenHeight:{type:"f",value:1},near:{type:"f",value:.1},far:{type:"f",value:1},uColor:{type:"c",value:new THREE.Color(16777215)},uOpacity:{type:"f",value:1},size:{type:"f",value:i},minSize:{type:"f",value:n},maxSize:{type:"f",value:o},octreeSize:{type:"f",value:0},bbSize:{type:"fv",value:[0,0,0]},elevationRange:{type:"2fv",value:[0,0]},clipBoxCount:{type:"f",value:0},clipPolygonCount:{type:"i",value:0},visibleNodes:{type:"t",value:this.visibleNodesTexture},pcIndex:{type:"f",value:0},gradient:{type:"t",value:this.gradientTexture},classificationLUT:{type:"t",value:this.classificationTexture},uHQDepthMap:{type:"t",value:null},clipBoxes:{type:"Matrix4fv",value:[]},clipPolygons:{type:"3fv",value:[]},clipPolygonVCount:{type:"iv",value:[]},clipPolygonVP:{type:"Matrix4fv",value:[]},toModel:{type:"Matrix4f",value:[]},diffuse:{type:"fv",value:[1,1,1]},transition:{type:"f",value:.5},intensityRange:{type:"fv",value:[0,65e3]},intensityGamma:{type:"f",value:1},intensityContrast:{type:"f",value:0},intensityBrightness:{type:"f",value:0},rgbGamma:{type:"f",value:1},rgbContrast:{type:"f",value:0},rgbBrightness:{type:"f",value:0},wRGB:{type:"f",value:1},wIntensity:{type:"f",value:0},wElevation:{type:"f",value:0},wClassification:{type:"f",value:0},wReturnNumber:{type:"f",value:0},wSourceID:{type:"f",value:0},useOrthographicCamera:{type:"b",value:!1},clipTask:{type:"i",value:1},clipMethod:{type:"i",value:1},uSnapshot:{type:"tv",value:[]},uSnapshotDepth:{type:"tv",value:[]},uSnapView:{type:"Matrix4fv",value:[]},uSnapProj:{type:"Matrix4fv",value:[]},uSnapProjInv:{type:"Matrix4fv",value:[]},uSnapViewInv:{type:"Matrix4fv",value:[]},uShadowColor:{type:"3fv",value:[0,0,0]}},this.classification=Potree.Classification.DEFAULT,this.defaultAttributeValues.normal=[0,0,0],this.defaultAttributeValues.classification=[0,0,0],this.defaultAttributeValues.indices=[0,0,0,0],this.vertexShader=this.getDefines()+Potree.Shaders["pointcloud.vs"],this.fragmentShader=this.getDefines()+Potree.Shaders["pointcloud.fs"],this.vertexColors=THREE.VertexColors}setDefine(e,t){void 0!==t&&null!==t?this.defines.get(e)!==t&&(this.defines.set(e,t),this.updateShaderSource()):this.removeDefine(e)}removeDefine(e){this.defines.delete(e)}updateShaderSource(){this.vertexShader=this.getDefines()+Potree.Shaders["pointcloud.vs"],this.fragmentShader=this.getDefines()+Potree.Shaders["pointcloud.fs"],1===this.opacity?(this.blending=THREE.NoBlending,this.transparent=!1,this.depthTest=!0,this.depthWrite=!0,this.depthFunc=THREE.LessEqualDepth):this.opacity<1&&!this.useEDL&&(this.blending=THREE.AdditiveBlending,this.transparent=!0,this.depthTest=!1,this.depthWrite=!0,this.depthFunc=THREE.AlwaysDepth),this.weighted&&(this.blending=THREE.AdditiveBlending,this.transparent=!0,this.depthTest=!0,this.depthWrite=!1),this.needsUpdate=!0}getDefines(){let e=[];this.pointSizeType===Potree.PointSizeType.FIXED?e.push("#define fixed_point_size"):this.pointSizeType===Potree.PointSizeType.ATTENUATED?e.push("#define attenuated_point_size"):this.pointSizeType===Potree.PointSizeType.ADAPTIVE&&e.push("#define adaptive_point_size"),this.shape===Potree.PointShape.SQUARE?e.push("#define square_point_shape"):this.shape===Potree.PointShape.CIRCLE?e.push("#define circle_point_shape"):this.shape===Potree.PointShape.PARABOLOID&&e.push("#define paraboloid_point_shape"),this._useEDL&&e.push("#define use_edl"),this._snapEnabled&&e.push("#define snap_enabled"),this._pointColorType===Potree.PointColorType.RGB?e.push("#define color_type_rgb"):this._pointColorType===Potree.PointColorType.COLOR?e.push("#define color_type_color"):this._pointColorType===Potree.PointColorType.DEPTH?e.push("#define color_type_depth"):this._pointColorType===Potree.PointColorType.HEIGHT?e.push("#define color_type_height"):this._pointColorType===Potree.PointColorType.INTENSITY?e.push("#define color_type_intensity"):this._pointColorType===Potree.PointColorType.INTENSITY_GRADIENT?e.push("#define color_type_intensity_gradient"):this._pointColorType===Potree.PointColorType.LOD?e.push("#define color_type_lod"):this._pointColorType===Potree.PointColorType.POINT_INDEX?e.push("#define color_type_point_index"):this._pointColorType===Potree.PointColorType.CLASSIFICATION?e.push("#define color_type_classification"):this._pointColorType===Potree.PointColorType.RETURN_NUMBER?e.push("#define color_type_return_number"):this._pointColorType===Potree.PointColorType.SOURCE?e.push("#define color_type_source"):this._pointColorType===Potree.PointColorType.NORMAL?e.push("#define color_type_normal"):this._pointColorType===Potree.PointColorType.PHONG?e.push("#define color_type_phong"):this._pointColorType===Potree.PointColorType.RGB_HEIGHT?e.push("#define color_type_rgb_height"):this._pointColorType===Potree.PointColorType.COMPOSITE?e.push("#define color_type_composite"):this._pointColorType===Potree.PointColorType.RGB_HIGHLIGHT&&e.push("#define color_type_rgb_highlight"),this._treeType===Potree.TreeType.OCTREE?e.push("#define tree_type_octree"):this._treeType===Potree.TreeType.KDTREE&&e.push("#define tree_type_kdtree"),this.weighted&&e.push("#define weighted_splats"),this.numClipBoxes>0&&e.push("#define use_clip_box"),this.clipPolygons.length>0&&e.push("#define use_clip_polygon");for(let[t,i]of this.defines)e.push(i);return e.join("\n")}setClipBoxes(e){if(!e)return;this.clipBoxes=e;let t=this.numClipBoxes!==e.length&&(0===e.length||0===this.numClipBoxes);this.numClipBoxes=e.length,this.uniforms.clipBoxCount.value=this.numClipBoxes,t&&this.updateShaderSource(),this.uniforms.clipBoxes.value=new Float32Array(16*this.numClipBoxes);for(let t=0;t<this.numClipBoxes;t++){let i=e[t];this.uniforms.clipBoxes.value.set(i.inverse.elements,16*t)}for(let e=0;e<this.uniforms.clipBoxes.value.length;e++)Number.isNaN(this.uniforms.clipBoxes.value[e])&&(this.uniforms.clipBoxes.value[e]=1/0)}setClipPolygons(e,t){if(!e)return;this.clipPolygons=e,this.clipPolygons.length!==e.length&&this.updateShaderSource()}get gradient(){return this._gradient}set gradient(e){this._gradient!==e&&(this._gradient=e,this.gradientTexture=Potree.PointCloudMaterial.generateGradientTexture(this._gradient),this.uniforms.gradient.value=this.gradientTexture)}get useOrthographicCamera(){return this.uniforms.useOrthographicCamera.value}set useOrthographicCamera(e){this.uniforms.useOrthographicCamera.value!==e&&(this.uniforms.useOrthographicCamera.value=e)}get classification(){return this._classification}set classification(e){let t={};for(let i of Object.keys(e))t[i]=e[i].clone();let i=!1;if(void 0===this._classification)i=!1;else{i=Object.keys(t).length===Object.keys(this._classification).length;for(let e of Object.keys(t))i=(i=i&&void 0!==this._classification[e])&&t[e].equals(this._classification[e])}i||(this._classification=t,this.recomputeClassification())}recomputeClassification(){this.classificationTexture=Potree.PointCloudMaterial.generateClassificationTexture(this._classification),this.uniforms.classificationLUT.value=this.classificationTexture,this.dispatchEvent({type:"material_property_changed",target:this})}get numSnapshots(){return this._numSnapshots}set numSnapshots(e){this._numSnapshots=e}get snapEnabled(){return this._snapEnabled}set snapEnabled(e){this._snapEnabled!==e&&(this._snapEnabled=e,this.updateShaderSource())}get spacing(){return this.uniforms.spacing.value}set spacing(e){this.uniforms.spacing.value!==e&&(this.uniforms.spacing.value=e)}get useClipBox(){return this._useClipBox}set useClipBox(e){this._useClipBox!==e&&(this._useClipBox=e,this.updateShaderSource())}get clipTask(){return this.uniforms.clipTask.value}set clipTask(e){this.uniforms.clipTask.value=e}get clipMethod(){return this.uniforms.clipMethod.value}set clipMethod(e){this.uniforms.clipMethod.value=e}get weighted(){return this._weighted}set weighted(e){this._weighted!==e&&(this._weighted=e,this.updateShaderSource())}get fov(){return this.uniforms.fov.value}set fov(e){this.uniforms.fov.value!==e&&(this.uniforms.fov.value=e)}get screenWidth(){return this.uniforms.screenWidth.value}set screenWidth(e){this.uniforms.screenWidth.value!==e&&(this.uniforms.screenWidth.value=e)}get screenHeight(){return this.uniforms.screenHeight.value}set screenHeight(e){this.uniforms.screenHeight.value!==e&&(this.uniforms.screenHeight.value=e)}get near(){return this.uniforms.near.value}set near(e){this.uniforms.near.value!==e&&(this.uniforms.near.value=e)}get far(){return this.uniforms.far.value}set far(e){this.uniforms.far.value!==e&&(this.uniforms.far.value=e)}get opacity(){return this.uniforms.uOpacity.value}set opacity(e){this.uniforms&&this.uniforms.uOpacity&&this.uniforms.uOpacity.value!==e&&(this.uniforms.uOpacity.value=e,this.updateShaderSource(),this.dispatchEvent({type:"opacity_changed",target:this}),this.dispatchEvent({type:"material_property_changed",target:this}))}get pointColorType(){return this._pointColorType}set pointColorType(e){this._pointColorType!==e&&(this._pointColorType=e,this.updateShaderSource(),this.dispatchEvent({type:"point_color_type_changed",target:this}),this.dispatchEvent({type:"material_property_changed",target:this}))}get pointSizeType(){return this._pointSizeType}set pointSizeType(e){this._pointSizeType!==e&&(this._pointSizeType=e,this.updateShaderSource(),this.dispatchEvent({type:"point_size_type_changed",target:this}),this.dispatchEvent({type:"material_property_changed",target:this}))}get useEDL(){return this._useEDL}set useEDL(e){this._useEDL!==e&&(this._useEDL=e,this.updateShaderSource())}get color(){return this.uniforms.uColor.value}set color(e){this.uniforms.uColor.value.equals(e)||(this.uniforms.uColor.value.copy(e),this.dispatchEvent({type:"color_changed",target:this}),this.dispatchEvent({type:"material_property_changed",target:this}))}get shape(){return this._shape}set shape(e){this._shape!==e&&(this._shape=e,this.updateShaderSource(),this.dispatchEvent({type:"point_shape_changed",target:this}),this.dispatchEvent({type:"material_property_changed",target:this}))}get treeType(){return this._treeType}set treeType(e){this._treeType!==e&&(this._treeType=e,this.updateShaderSource())}get bbSize(){return this.uniforms.bbSize.value}set bbSize(e){this.uniforms.bbSize.value=e}get size(){return this.uniforms.size.value}set size(e){this.uniforms.size.value!==e&&(this.uniforms.size.value=e,this.dispatchEvent({type:"point_size_changed",target:this}),this.dispatchEvent({type:"material_property_changed",target:this}))}get elevationRange(){return this.uniforms.elevationRange.value}set elevationRange(e){(this.uniforms.elevationRange.value[0]!==e[0]||this.uniforms.elevationRange.value[1]!==e[1])&&(this.uniforms.elevationRange.value=e,this._defaultElevationRangeChanged=!0,this.dispatchEvent({type:"material_property_changed",target:this}))}get heightMin(){return this.uniforms.elevationRange.value[0]}set heightMin(e){this.elevationRange=[e,this.elevationRange[1]]}get heightMax(){return this.uniforms.elevationRange.value[1]}set heightMax(e){this.elevationRange=[this.elevationRange[0],e]}get transition(){return this.uniforms.transition.value}set transition(e){this.uniforms.transition.value=e}get intensityRange(){return this.uniforms.intensityRange.value}set intensityRange(e){e instanceof Array&&2===e.length&&(e[0]===this.uniforms.intensityRange.value[0]&&e[1]===this.uniforms.intensityRange.value[1]||(this.uniforms.intensityRange.value=e,this._defaultIntensityRangeChanged=!0,this.dispatchEvent({type:"material_property_changed",target:this})))}get intensityGamma(){return this.uniforms.intensityGamma.value}set intensityGamma(e){this.uniforms.intensityGamma.value!==e&&(this.uniforms.intensityGamma.value=e,this.dispatchEvent({type:"material_property_changed",target:this}))}get intensityContrast(){return this.uniforms.intensityContrast.value}set intensityContrast(e){this.uniforms.intensityContrast.value!==e&&(this.uniforms.intensityContrast.value=e,this.dispatchEvent({type:"material_property_changed",target:this}))}get intensityBrightness(){return this.uniforms.intensityBrightness.value}set intensityBrightness(e){this.uniforms.intensityBrightness.value!==e&&(this.uniforms.intensityBrightness.value=e,this.dispatchEvent({type:"material_property_changed",target:this}))}get rgbGamma(){return this.uniforms.rgbGamma.value}set rgbGamma(e){this.uniforms.rgbGamma.value!==e&&(this.uniforms.rgbGamma.value=e,this.dispatchEvent({type:"material_property_changed",target:this}))}get rgbContrast(){return this.uniforms.rgbContrast.value}set rgbContrast(e){this.uniforms.rgbContrast.value!==e&&(this.uniforms.rgbContrast.value=e,this.dispatchEvent({type:"material_property_changed",target:this}))}get rgbBrightness(){return this.uniforms.rgbBrightness.value}set rgbBrightness(e){this.uniforms.rgbBrightness.value!==e&&(this.uniforms.rgbBrightness.value=e,this.dispatchEvent({type:"material_property_changed",target:this}))}get weightRGB(){return this.uniforms.wRGB.value}set weightRGB(e){this.uniforms.wRGB.value!==e&&(this.uniforms.wRGB.value=e,this.dispatchEvent({type:"material_property_changed",target:this}))}get weightIntensity(){return this.uniforms.wIntensity.value}set weightIntensity(e){this.uniforms.wIntensity.value!==e&&(this.uniforms.wIntensity.value=e,this.dispatchEvent({type:"material_property_changed",target:this}))}get weightElevation(){return this.uniforms.wElevation.value}set weightElevation(e){this.uniforms.wElevation.value!==e&&(this.uniforms.wElevation.value=e,this.dispatchEvent({type:"material_property_changed",target:this}))}get weightClassification(){return this.uniforms.wClassification.value}set weightClassification(e){this.uniforms.wClassification.value!==e&&(this.uniforms.wClassification.value=e,this.dispatchEvent({type:"material_property_changed",target:this}))}get weightReturnNumber(){return this.uniforms.wReturnNumber.value}set weightReturnNumber(e){this.uniforms.wReturnNumber.value!==e&&(this.uniforms.wReturnNumber.value=e,this.dispatchEvent({type:"material_property_changed",target:this}))}get weightSourceID(){return this.uniforms.wSourceID.value}set weightSourceID(e){this.uniforms.wSourceID.value!==e&&(this.uniforms.wSourceID.value=e,this.dispatchEvent({type:"material_property_changed",target:this}))}static generateGradientTexture(e){let t=document.createElement("canvas");t.width=64,t.height=64;let i=t.getContext("2d");i.rect(0,0,64,64);let n=i.createLinearGradient(0,0,64,64);for(let t=0;t<e.length;t++){let i=e[t];n.addColorStop(i[0],"#"+i[1].getHexString())}i.fillStyle=n,i.fill();let o=new THREE.CanvasTexture(t);return o.needsUpdate=!0,o.minFilter=THREE.LinearFilter,o}static generateClassificationTexture(e){let t=new Uint8Array(262144);for(let i=0;i<256;i++)for(let n=0;n<256;n++){let o,s=i+256*n;o=e[i]?e[i]:e[i%32]?e[i%32]:e.DEFAULT,t[4*s+0]=255*o.x,t[4*s+1]=255*o.y,t[4*s+2]=255*o.z,t[4*s+3]=255*o.w}let i=new THREE.DataTexture(t,256,256,THREE.RGBAFormat);return i.magFilter=THREE.NearestFilter,i.needsUpdate=!0,i}disableEvents(){void 0===this._hiddenListeners&&(this._hiddenListeners=this._listeners,this._listeners={})}enableEvents(){this._listeners=this._hiddenListeners,this._hiddenListeners=void 0}copyFrom(e){for(let t of this.uniforms)this.uniforms[t].value=e.uniforms[t].value}},Potree.EyeDomeLightingMaterial=class extends THREE.ShaderMaterial{constructor(e={}){super();this.setValues({uniforms:{screenWidth:{type:"f",value:0},screenHeight:{type:"f",value:0},edlStrength:{type:"f",value:1},radius:{type:"f",value:1},neighbours:{type:"2fv",value:[]},depthMap:{type:"t",value:null},uRegularColor:{type:"t",value:null},uRegularDepth:{type:"t",value:null},uEDLColor:{type:"t",value:null},uEDLDepth:{type:"t",value:null},opacity:{type:"f",value:1}},vertexShader:this.getDefines()+Potree.Shaders["edl.vs"],fragmentShader:this.getDefines()+Potree.Shaders["edl.fs"],lights:!1}),this.neighbourCount=8}getDefines(){let e="";return e+="#define NEIGHBOUR_COUNT "+this.neighbourCount+"\n"}updateShaderSource(){let e=this.getDefines()+Potree.Shaders["edl.vs"],t=this.getDefines()+Potree.Shaders["edl.fs"];this.setValues({vertexShader:e,fragmentShader:t}),this.uniforms.neighbours.value=this.neighbours,this.needsUpdate=!0}get neighbourCount(){return this._neighbourCount}set neighbourCount(e){if(this._neighbourCount!==e){this._neighbourCount=e,this.neighbours=new Float32Array(2*this._neighbourCount);for(let e=0;e<this._neighbourCount;e++)this.neighbours[2*e+0]=Math.cos(2*e*Math.PI/this._neighbourCount),this.neighbours[2*e+1]=Math.sin(2*e*Math.PI/this._neighbourCount);this.updateShaderSource()}}},Potree.BlurMaterial=class extends THREE.ShaderMaterial{constructor(e={}){super();this.setValues({uniforms:{near:{type:"f",value:0},far:{type:"f",value:0},screenWidth:{type:"f",value:0},screenHeight:{type:"f",value:0},map:{type:"t",value:null}},vertexShader:Potree.Shaders["blur.vs"],fragmentShader:Potree.Shaders["blur.fs"]})}},Potree.NormalizationMaterial=class extends THREE.RawShaderMaterial{constructor(e={}){super();this.setValues({uniforms:{uDepthMap:{type:"t",value:null},uWeightMap:{type:"t",value:null}},vertexShader:this.getDefines()+Potree.Shaders["normalize.vs"],fragmentShader:this.getDefines()+Potree.Shaders["normalize.fs"]})}getDefines(){return""}updateShaderSource(){let e=this.getDefines()+Potree.Shaders["normalize.vs"],t=this.getDefines()+Potree.Shaders["normalize.fs"];this.setValues({vertexShader:e,fragmentShader:t}),this.needsUpdate=!0}},Potree.NormalizationEDLMaterial=class extends THREE.RawShaderMaterial{constructor(e={}){super();this.setValues({uniforms:{screenWidth:{type:"f",value:0},screenHeight:{type:"f",value:0},edlStrength:{type:"f",value:1},radius:{type:"f",value:1},neighbours:{type:"2fv",value:[]},uEDLMap:{type:"t",value:null},uDepthMap:{type:"t",value:null},uWeightMap:{type:"t",value:null}},vertexShader:this.getDefines()+Potree.Shaders["normalize.vs"],fragmentShader:this.getDefines()+Potree.Shaders["normalize_and_edl.fs"]}),this.neighbourCount=8}getDefines(){let e="";return e+="#define NEIGHBOUR_COUNT "+this.neighbourCount+"\n"}updateShaderSource(){let e=this.getDefines()+Potree.Shaders["normalize.vs"],t=this.getDefines()+Potree.Shaders["normalize_and_edl.fs"];this.setValues({vertexShader:e,fragmentShader:t}),this.uniforms.neighbours.value=this.neighbours,this.needsUpdate=!0}get neighbourCount(){return this._neighbourCount}set neighbourCount(e){if(this._neighbourCount!==e){this._neighbourCount=e,this.neighbours=new Float32Array(2*this._neighbourCount);for(let e=0;e<this._neighbourCount;e++)this.neighbours[2*e+0]=Math.cos(2*e*Math.PI/this._neighbourCount),this.neighbours[2*e+1]=Math.sin(2*e*Math.PI/this._neighbourCount);this.updateShaderSource()}}},Potree.InputHandler=class extends THREE.EventDispatcher{constructor(e,t){super(),this.viewer=e,this.domElement=t.domElement,this.enabled=!0,this.scene=null,this.interactiveScenes=[],this.interactiveObjects=new Set,this.inputListeners=[],this.blacklist=new Set,this.drag=null,this.mouse=new THREE.Vector2(0,0),this.selection=[],this.hoveredElements=[],this.pressedKeys={},this.wheelDelta=0,this.speed=1,this.logMessages=!1,-1===this.domElement.tabIndex&&(this.domElement.tabIndex=2222),this.domElement.addEventListener("contextmenu",e=>{e.preventDefault()},!1),this.domElement.addEventListener("click",this.onMouseClick.bind(this),!1),this.domElement.addEventListener("mousedown",this.onMouseDown.bind(this),!1),this.domElement.addEventListener("mouseup",this.onMouseUp.bind(this),!1),this.domElement.addEventListener("mousemove",this.onMouseMove.bind(this),!1),this.domElement.addEventListener("mousewheel",this.onMouseWheel.bind(this),!1),this.domElement.addEventListener("DOMMouseScroll",this.onMouseWheel.bind(this),!1),this.domElement.addEventListener("dblclick",this.onDoubleClick.bind(this)),this.domElement.addEventListener("keydown",this.onKeyDown.bind(this)),this.domElement.addEventListener("keyup",this.onKeyUp.bind(this)),this.domElement.addEventListener("touchstart",this.onTouchStart.bind(this)),this.domElement.addEventListener("touchend",this.onTouchEnd.bind(this)),this.domElement.addEventListener("touchmove",this.onTouchMove.bind(this))}addInputListener(e){Array.isArray(e)?this.inputListeners.push(...e):this.inputListeners.push(e)}removeInputListener(e){Array.isArray(e)?this.inputListeners=this.inputListeners.filter(t=>!e.includes(t)):this.inputListeners=this.inputListeners.filter(t=>t!==e)}getSortedListeners(){return this.inputListeners.sort((e,t)=>{let i=void 0!==e.importance?e.importance:0;return(void 0!==t.importance?t.importance:0)-i})}onTouchStart(e){if(this.logMessages&&console.log(this.constructor.name+": onTouchStart"),e.preventDefault(),1===e.touches.length){let t=this.domElement.getBoundingClientRect(),i=e.touches[0].pageX-t.left,n=e.touches[0].pageY-t.top;this.mouse.set(i,n),this.startDragging(null)}for(let t of this.getSortedListeners())t.dispatchEvent({type:e.type,touches:e.touches,changedTouches:e.changedTouches})}onTouchEnd(e){this.logMessages&&console.log(this.constructor.name+": onTouchEnd"),e.preventDefault();for(let e of this.getSortedListeners())e.dispatchEvent({type:"drop",drag:this.drag,viewer:this.viewer});this.drag=null;for(let t of this.getSortedListeners())t.dispatchEvent({type:e.type,touches:e.touches,changedTouches:e.changedTouches})}onTouchMove(e){if(this.logMessages&&console.log(this.constructor.name+": onTouchMove"),e.preventDefault(),1===e.touches.length){let t=this.domElement.getBoundingClientRect(),i=e.touches[0].pageX-t.left,n=e.touches[0].pageY-t.top;if(this.mouse.set(i,n),this.drag){this.drag.mouse=1,this.drag.lastDrag.x=i-this.drag.end.x,this.drag.lastDrag.y=n-this.drag.end.y,this.drag.end.set(i,n),this.logMessages&&console.log(this.constructor.name+": drag: ");for(let e of this.getSortedListeners())e.dispatchEvent({type:"drag",drag:this.drag,viewer:this.viewer})}}for(let t of this.getSortedListeners())t.dispatchEvent({type:e.type,touches:e.touches,changedTouches:e.changedTouches})}onKeyDown(e){this.logMessages&&console.log(this.constructor.name+": onKeyDown"),e.keyCode===Potree.KeyCodes.DELETE&&this.selection.length>0&&(this.dispatchEvent({type:"delete",selection:this.selection}),this.deselectAll()),this.dispatchEvent({type:"keydown",keyCode:e.keyCode,event:e}),this.pressedKeys[e.keyCode]=!0}onKeyUp(e){this.logMessages&&console.log(this.constructor.name+": onKeyUp"),delete this.pressedKeys[e.keyCode],e.preventDefault()}onDoubleClick(e){this.logMessages&&console.log(this.constructor.name+": onDoubleClick");let t=!1;for(let e of this.hoveredElements)if(e._listeners&&e._listeners.dblclick){e.object.dispatchEvent({type:"dblclick",mouse:this.mouse,object:e.object}),t=!0;break}if(!t)for(let e of this.getSortedListeners())e.dispatchEvent({type:"dblclick",mouse:this.mouse,object:null});e.preventDefault()}onMouseClick(e){this.logMessages&&console.log(this.constructor.name+": onMouseClick"),e.preventDefault()}onMouseDown(e){this.logMessages&&console.log(this.constructor.name+": onMouseDown"),e.preventDefault();let t=!1,i=()=>t=!0;if(0===this.hoveredElements.length)for(let e of this.getSortedListeners())e.dispatchEvent({type:"mousedown",viewer:this.viewer,mouse:this.mouse});else for(let e of this.hoveredElements){if(e.object.dispatchEvent({type:"mousedown",viewer:this.viewer,consume:i}),t)break}if(!this.drag){let e=this.hoveredElements.find(e=>e.object._listeners&&e.object._listeners.drag&&e.object._listeners.drag.length>0);e?this.startDragging(e.object,{location:e.point}):this.startDragging(null)}this.scene&&(this.viewStart=this.scene.view.clone())}onMouseUp(e){this.logMessages&&console.log(this.constructor.name+": onMouseUp"),e.preventDefault();let t=0===this.getNormalizedDrag().length(),i=!1,n=()=>i=!0;if(0===this.hoveredElements.length){for(let e of this.getSortedListeners())if(e.dispatchEvent({type:"mouseup",viewer:this.viewer,mouse:this.mouse,consume:n}),i)break}else{let e=this.hoveredElements.map(e=>e.object).find(e=>e._listeners&&e._listeners.mouseup);e&&e.dispatchEvent({type:"mouseup",viewer:this.viewer,consume:n})}if(this.drag){if(this.drag.object)this.logMessages&&console.log(`${this.constructor.name}: drop ${this.drag.object.name}`),this.drag.object.dispatchEvent({type:"drop",drag:this.drag,viewer:this.viewer});else for(let e of this.getSortedListeners())e.dispatchEvent({type:"drop",drag:this.drag,viewer:this.viewer});void 0!==this.hoveredElements.map(e=>e.object).find(e=>e===this.drag.object)&&(this.logMessages&&console.log(`${this.constructor.name}: click ${this.drag.object.name}`),this.drag.object.dispatchEvent({type:"click",viewer:this.viewer,consume:n})),this.drag=null}if(!i)if(e.button===THREE.MOUSE.LEFT){if(t){let e=this.hoveredElements.find(e=>e.object._listeners&&e.object._listeners.select);e?(e=e.object,this.isSelected(e)?this.selection.filter(t=>t!==e).forEach(e=>this.toggleSelection(e)):(this.deselectAll(),this.toggleSelection(e))):this.deselectAll()}}else e.button===THREE.MOUSE.RIGHT&&t&&this.deselectAll()}onMouseMove(e){e.preventDefault();let t=this.domElement.getBoundingClientRect(),i=e.clientX-t.left,n=e.clientY-t.top;this.mouse.set(i,n);let o=this.getHoveredElements();if(o.length>0){let e=o.map(e=>e.object.name).join(", ");this.logMessages&&console.log(`${this.constructor.name}: onMouseMove; hovered: '${e}'`)}if(this.drag)if(this.drag.mouse=e.buttons,this.drag.lastDrag.x=i-this.drag.end.x,this.drag.lastDrag.y=n-this.drag.end.y,this.drag.end.set(i,n),this.drag.object)this.logMessages&&console.log(this.constructor.name+": drag: "+this.drag.object.name),this.drag.object.dispatchEvent({type:"drag",drag:this.drag,viewer:this.viewer});else{this.logMessages&&console.log(this.constructor.name+": drag: ");let e=!1;for(let t of this.getSortedListeners())if(t.dispatchEvent({type:"drag",drag:this.drag,viewer:this.viewer,consume:()=>{e=!0}}),e)break}else{let e=o.map(e=>e.object).find(e=>!0),t=this.hoveredElements.map(e=>e.object).find(e=>!0);if(e!==t&&(e&&(this.logMessages&&console.log(`${this.constructor.name}: mouseover: ${e.name}`),e.dispatchEvent({type:"mouseover",object:e})),t&&(this.logMessages&&console.log(`${this.constructor.name}: mouseleave: ${t.name}`),t.dispatchEvent({type:"mouseleave",object:t}))),o.length>0){let e=o.map(e=>e.object).find(e=>e._listeners&&e._listeners.mousemove);e&&e.dispatchEvent({type:"mousemove",object:e})}}this.hoveredElements=o}onMouseWheel(e){if(!this.enabled)return;this.logMessages&&console.log(this.constructor.name+": onMouseWheel"),e.preventDefault();let t=0;void 0!==e.wheelDelta?t=e.wheelDelta:void 0!==e.detail&&(t=-e.detail);let i=Math.sign(t);if(this.hoveredElement)this.hoveredElement.object.dispatchEvent({type:"mousewheel",delta:i,object:this.hoveredElement.object});else for(let e of this.getSortedListeners())e.dispatchEvent({type:"mousewheel",delta:i,object:null})}startDragging(e,t=null){let i=e?e.name:"no name";if(this.logMessages&&console.log(`${this.constructor.name}: startDragging: '${i}'`),this.drag={start:this.mouse.clone(),end:this.mouse.clone(),lastDrag:new THREE.Vector2(0,0),startView:this.scene.view.clone(),object:e},t)for(let e of Object.keys(t))this.drag[e]=t[e]}getMousePointCloudIntersection(e){return Potree.utils.getMousePointCloudIntersection(this.mouse,this.scene.getActiveCamera(),this.viewer,this.scene.pointclouds)}toggleSelection(e){let t=this.selection,i=this.selection.indexOf(e);-1===i?(this.selection.push(e),e.dispatchEvent({type:"select"})):(this.selection.splice(i,1),e.dispatchEvent({type:"deselect"})),this.dispatchEvent({type:"selection_changed",oldSelection:t,selection:this.selection})}deselect(e){let t=this.selection,i=this.selection.indexOf(e);i>=0&&(this.selection.splice(i,1),e.dispatchEvent({type:"deselect"}),this.dispatchEvent({type:"selection_changed",oldSelection:t,selection:this.selection}))}deselectAll(){for(let e of this.selection)e.dispatchEvent({type:"deselect"});let e=this.selection;this.selection.length>0&&(this.selection=[],this.dispatchEvent({type:"selection_changed",oldSelection:e,selection:this.selection}))}isSelected(e){return-1!==this.selection.indexOf(e)}registerInteractiveObject(e){this.interactiveObjects.add(e)}removeInteractiveObject(e){this.interactiveObjects.delete(e)}registerInteractiveScene(e){-1===this.interactiveScenes.indexOf(e)&&this.interactiveScenes.push(e)}unregisterInteractiveScene(e){let t=this.interactiveScenes.indexOf(e);t>-1&&this.interactiveScenes.splice(t,1)}getHoveredElement(){let e=this.getHoveredElements();return e.length>0?e[0]:null}getHoveredElements(){let e=this.interactiveScenes.concat(this.scene.scene),t=["mouseup","mousemove","mouseover","mouseleave","drag","drop","click","select","deselect"],i=[];for(let n of e)n.traverseVisible(e=>{if(e._listeners&&e.visible&&!this.blacklist.has(e)){t.filter(t=>void 0!==e._listeners[t]).length>0&&i.push(e)}});let n=this.scene.getActiveCamera(),o=Potree.utils.mouseToRay(this.mouse,n,this.domElement.clientWidth,this.domElement.clientHeight),s=new THREE.Raycaster;return s.ray.set(o.origin,o.direction),s.linePrecision=.2,s.intersectObjects(i.filter(e=>e.visible),!1)}setScene(e){this.deselectAll(),this.scene=e}update(e){}getNormalizedDrag(){if(!this.drag)return new THREE.Vector2(0,0);let e=(new THREE.Vector2).subVectors(this.drag.end,this.drag.start);return e.x=e.x/this.domElement.clientWidth,e.y=e.y/this.domElement.clientHeight,e}getNormalizedLastDrag(){if(!this.drag)return new THREE.Vector2(0,0);let e=this.drag.lastDrag.clone();return e.x=e.x/this.domElement.clientWidth,e.y=e.y/this.domElement.clientHeight,e}},Potree.RotationControls=class extends THREE.EventDispatcher{constructor(e){super(),this.viewer=e,this.renderer=e.renderer,this.scene=null,this.sceneControls=new THREE.Scene,this.rotationSpeed=5,this.fadeFactor=10,this.yawDelta=0,this.radiusDelta=0,this.panDelta=new THREE.Vector2(0,0),this.minRadius=5,this.maxRadius=300,this.enabled=!0,this.tweens=[];let t=null;this.addEventListener("touchstart",e=>{t=e}),this.addEventListener("touchend",e=>{t=e}),this.addEventListener("touchmove",e=>{if(2===e.touches.length&&2===t.touches.length){let i=t,n=e,o=i.touches[0].pageX-i.touches[1].pageX,s=i.touches[0].pageY-i.touches[1].pageY,r=Math.sqrt(o*o+s*s),a=n.touches[0].pageX-n.touches[1].pageX,l=n.touches[0].pageY-n.touches[1].pageY,h=Math.sqrt(a*a+l*l)/r,d=this.scene.views[0].radius+this.radiusDelta,c=d/h;this.radiusDelta=c-d,this.navigationCallback(),this.stopTweens()}t=e}),this.addEventListener("drag",e=>{if(null!==e.drag.object)return;void 0===e.drag.startHandled&&(e.drag.startHandled=!0,this.dispatchEvent({type:"start"}));let t=e.drag.lastDrag.x/this.renderer.domElement.clientWidth,i=e.drag.lastDrag.y/this.renderer.domElement.clientHeight;e.drag.mouse===Potree.MOUSE.LEFT?(this.yawDelta+=t*this.rotationSpeed,this.radiusDelta=0,this.navigationCallback(),this.stopTweens()):e.drag.mouse===Potree.MOUSE.RIGHT&&(this.panDelta.x+=t,this.panDelta.y+=i,this.navigationCallback(),this.stopTweens())}),this.addEventListener("drop",e=>{this.dispatchEvent({type:"end"})}),this.addEventListener("mousewheel",e=>{let t=this.scene.views[0].radius+this.radiusDelta;this.radiusDelta+=-e.delta*t*.1,this.yawDelta=0,this.panDelta.set(0,0),this.navigationCallback(),this.stopTweens()})}setScene(e){this.scene=e}stop(){this.yawDelta=0,this.radiusDelta=0,this.panDelta.set(0,0)}stopTweens(){this.tweens.forEach(e=>e.stop()),this.tweens=[]}navigationCallback(){if(this.viewer.navigationCallback&&(0!==this.yawDelta||0!==this.radiusDelta||0!==this.panDelta.x)){const{radiusDelta:e,yawDelta:t}=this;this.viewer.navigationCallback({radiusDelta:e,yawDelta:t})}}updateYaw(e){const t=this.scene.views[0],i=t.yaw-e;this.pivot=this.scene.pointclouds[0].boundingBox.getCenter(),e<-Math.PI?e+=2*Math.PI:e>Math.PI&&(e-=2*Math.PI),t.yaw=e;let n=(new THREE.Vector3).subVectors(t.position,this.pivot),o=(new THREE.Vector3).subVectors(t.getPivot(),this.pivot);n.applyAxisAngle(new THREE.Vector3(0,0,1),-i),o.applyAxisAngle(new THREE.Vector3(0,0,1),-i);let s=(new THREE.Vector3).addVectors(this.pivot,n);t.position.copy(s)}update(e){let t=this.scene.views[0];if(!this.enabled)return!1;const i=e=>+e.toFixed(3),n=i(this.radiusDelta),o=i(this.yawDelta),s=new THREE.Vector3(i(this.panDelta.x),i(this.panDelta.y));if(0!==n?(this.panDelta.set(0,0),this.yawDelta=0):0!==o?(this.panDelta.set(0,0),this.radiusDelta=0):0===s.x&&0===s.y||(this.radiusDelta=0,this.yawDelta=0),o){let i=Math.min(1,this.fadeFactor*e);this.updateYaw(t.yaw-i*o)}if(s.x||s.y){let i=Math.min(1,this.fadeFactor*e)*t.radius*2,n=-s.x*i,o=s.y*(.2*i);t.pan(n,o),this.viewerToSync&&this.viewerToSync.scene.view.pan(n,0)}{let i=Math.min(1,this.fadeFactor*e),n=t.radius+i*this.radiusDelta;n=(n=n<this.minRadius?this.minRadius:n)>this.maxRadius?this.maxRadius:n,t.radius=n}{let e=t.radius/2.5;this.viewer.setMoveSpeed(e)}{let t=Math.min(1,this.fadeFactor*e),i=Math.max(0,1-this.fadeFactor*e);this.panDelta.multiplyScalar(i),this.yawDelta*=i,this.radiusDelta-=t*this.radiusDelta}}},Potree.FirstPersonControls=class extends THREE.EventDispatcher{constructor(e){super(),this.viewer=e,this.renderer=e.renderer,this.scene=null,this.sceneControls=new THREE.Scene,this.rotationSpeed=200,this.moveSpeed=10,this.lockElevation=!1,this.keys={FORWARD:["W".charCodeAt(0),38],BACKWARD:["S".charCodeAt(0),40],LEFT:["A".charCodeAt(0),37],RIGHT:["D".charCodeAt(0),39],UP:["R".charCodeAt(0),33],DOWN:["F".charCodeAt(0),34]},this.fadeFactor=50,this.yawDelta=0,this.pitchDelta=0,this.translationDelta=new THREE.Vector3(0,0,0),this.translationWorldDelta=new THREE.Vector3(0,0,0),this.tweens=[];this.addEventListener("drag",e=>{if(null!==e.drag.object)return;void 0===e.drag.startHandled&&(e.drag.startHandled=!0,this.dispatchEvent({type:"start"}));let t=this.viewer.getMoveSpeed(),i=e.drag.lastDrag.x/this.renderer.domElement.clientWidth,n=e.drag.lastDrag.y/this.renderer.domElement.clientHeight;e.drag.mouse===Potree.MOUSE.LEFT?(this.yawDelta+=i*this.rotationSpeed,this.pitchDelta+=n*this.rotationSpeed):e.drag.mouse===Potree.MOUSE.RIGHT&&(this.translationDelta.x-=i*t*100,this.translationDelta.z+=n*t*100)}),this.addEventListener("drop",e=>{this.dispatchEvent({type:"end"})}),this.addEventListener("mousewheel",e=>{let t=this.viewer.getMoveSpeed();e.delta<0?t*=.9:e.delta>0&&(t/=.9),t=Math.max(t,.1),this.viewer.setMoveSpeed(t)}),this.addEventListener("dblclick",e=>{this.zoomToLocation(e.mouse)})}setScene(e){this.scene=e}stop(){this.yawDelta=0,this.pitchDelta=0,this.translationDelta.set(0,0,0)}zoomToLocation(e){let t=this.scene.getActiveCamera(),i=Potree.utils.getMousePointCloudIntersection(e,t,this.viewer,this.scene.pointclouds);if(null===i)return;let n=0;{let o=.2,s=this.renderer.domElement,r=Potree.utils.mouseToRay(e,t,s.clientWidth,s.clientHeight),a=i.pointcloud.nodesOnRay(i.pointcloud.visibleNodes,r),l=a[a.length-1].getBoundingSphere().radius;n=Math.min(this.scene.view.radius,l),n=Math.max(o,n)}let o=this.scene.view.direction.multiplyScalar(-1),s=(new THREE.Vector3).addVectors(i.location,o.multiplyScalar(n)),r=TWEEN.Easing.Quartic.Out;{let e={x:0},t=new TWEEN.Tween(e).to({x:1},600);t.easing(r),this.tweens.push(t);let n=this.scene.view.position.clone(),o=s.clone(),a=this.scene.view.radius,l=s.distanceTo(i.location);t.onUpdate(()=>{let t=e.x;this.scene.view.position.x=(1-t)*n.x+t*o.x,this.scene.view.position.y=(1-t)*n.y+t*o.y,this.scene.view.position.z=(1-t)*n.z+t*o.z,this.scene.view.radius=(1-t)*a+t*l,this.viewer.setMoveSpeed(this.scene.view.radius/2.5)}),t.onComplete(()=>{this.tweens=this.tweens.filter(e=>e!==t)}),t.start()}}update(e){let t=this.scene.view;[this.yawDelta,this.pitchDelta,this.translationDelta.length(),this.translationWorldDelta.length()].some(e=>Math.abs(e)>.001)&&this.tweens.length>0&&(this.tweens.forEach(e=>e.stop()),this.tweens=[]);{let e=this.viewer.inputHandler,i=this.keys.FORWARD.some(t=>e.pressedKeys[t]),n=this.keys.BACKWARD.some(t=>e.pressedKeys[t]),o=this.keys.LEFT.some(t=>e.pressedKeys[t]),s=this.keys.RIGHT.some(t=>e.pressedKeys[t]),r=this.keys.UP.some(t=>e.pressedKeys[t]),a=this.keys.DOWN.some(t=>e.pressedKeys[t]);if(this.lockElevation){let e=t.direction;e.z=0,e.normalize(),i&&n?this.translationWorldDelta.set(0,0,0):i?this.translationWorldDelta.copy(e.multiplyScalar(this.viewer.getMoveSpeed())):n&&this.translationWorldDelta.copy(e.multiplyScalar(-this.viewer.getMoveSpeed()))}else i&&n?this.translationDelta.y=0:i?this.translationDelta.y=this.viewer.getMoveSpeed():n&&(this.translationDelta.y=-this.viewer.getMoveSpeed());o&&s?this.translationDelta.x=0:o?this.translationDelta.x=-this.viewer.getMoveSpeed():s&&(this.translationDelta.x=this.viewer.getMoveSpeed()),r&&a?this.translationWorldDelta.z=0:r?this.translationWorldDelta.z=this.viewer.getMoveSpeed():a&&(this.translationWorldDelta.z=-this.viewer.getMoveSpeed())}{let i=t.yaw,n=t.pitch;i-=this.yawDelta*e,n-=this.pitchDelta*e,t.yaw=i,t.pitch=n}t.translate(this.translationDelta.x*e,this.translationDelta.y*e,this.translationDelta.z*e),t.translateWorld(this.translationWorldDelta.x*e,this.translationWorldDelta.y*e,this.translationWorldDelta.z*e),t.radius=3*this.viewer.getMoveSpeed();{let t=Math.max(0,1-this.fadeFactor*e);this.yawDelta*=t,this.pitchDelta*=t,this.translationDelta.multiplyScalar(t),this.translationWorldDelta.multiplyScalar(t)}}},Potree.GeoControls=class extends THREE.EventDispatcher{constructor(e,t){super(),console.log("deprecated?"),this.object=e,this.domElement=void 0!==t?t:document,this.enabled=!0,this.track=null,this.trackPos=0,this.rotateSpeed=1,this.moveSpeed=10,this.keys={LEFT:37,UP:38,RIGHT:39,BOTTOM:40,A:"A".charCodeAt(0),S:"S".charCodeAt(0),D:"D".charCodeAt(0),W:"W".charCodeAt(0),Q:"Q".charCodeAt(0),E:"E".charCodeAt(0),R:"R".charCodeAt(0),F:"F".charCodeAt(0)};new THREE.Vector2,new THREE.Vector2,new THREE.Vector2,new THREE.Vector2,new THREE.Vector2,new THREE.Vector2,new THREE.Vector3,new THREE.Vector3;this.shiftDown=!1;new THREE.Vector3;this.position0=this.object.position.clone();this.domElement.addEventListener("contextmenu",e=>{e.preventDefault()},!1),this.domElement.addEventListener("mousedown",this.onMouseDown.bind(this),!1),this.domElement.addEventListener("mousewheel",this.onMouseWheel.bind(this),!1),this.domElement.addEventListener("DOMMouseScroll",this.onMouseWheel.bind(this),!1),this.domElement.addEventListener("mousemove",this.onMouseMove.bind(this),!1),this.domElement.addEventListener("mouseup",this.onMouseUp.bind(this),!1),-1===this.domElement.tabIndex&&(this.domElement.tabIndex=2222),this.domElement.addEventListener("keydown",this.onKeyDown.bind(this),!1),this.domElement.addEventListener("keyup",this.onKeyUp.bind(this),!1)}setTrack(e){this.track!==e&&(this.track=e,this.trackPos=null)}setTrackPos(e,t){let i=Math.max(0,Math.min(1,e)),n=this.trackPos||i,o=this.track.getTangentAt(i),s=this.track.getTangentAt(n);if(o.equals(s));else{let e=(new THREE.Vector3).crossVectors(s,o).normalize(),t=s.angleTo(o),i=(new THREE.Matrix4).makeRotationAxis(e,t),n=this.object.getWorldDirection().clone();n=n.applyMatrix4(i);let r=(new THREE.Vector3).addVectors(this.object.position,n);this.object.lookAt(r),this.object.updateMatrixWorld();let a={type:"path_relative_rotation",angle:t,axis:e,controls:this};this.dispatchEvent(a)}if(null===this.trackPos){let e=(new THREE.Vector3).addVectors(this.object.position,o);this.object.lookAt(e)}if(this.trackPos=i,i!==n){let e={type:"move",translation:pan.clone()};this.dispatchEvent(e)}}stop(){}getTrackPos(){return this.trackPos}rotateLeft(e){thetaDelta-=e}rotateUp(e){phiDelta-=e}panLeft(e){let t=this.object.matrix.elements;panOffset.set(t[0],t[1],t[2]),panOffset.multiplyScalar(-e),pan.add(panOffset)}panUp(e){let t=this.object.matrix.elements;panOffset.set(t[4],t[5],t[6]),panOffset.multiplyScalar(e),pan.add(panOffset)}panForward(e){if(this.track)this.setTrackPos(this.getTrackPos()-e/this.track.getLength());else{let t=this.object.matrix.elements;panOffset.set(t[8],t[9],t[10]),panOffset.multiplyScalar(e),pan.add(panOffset)}}pan(e,t){let i=this.domElement===document?this.domElement.body:this.domElement;if(void 0!==this.object.fov){let n=this.object.position.clone().length();n*=Math.tan(this.object.fov/2*Math.PI/180),this.panLeft(2*e*n/i.clientHeight),this.panUp(2*t*n/i.clientHeight)}else void 0!==this.object.top?(this.panLeft(e*(this.object.right-this.object.left)/i.clientWidth),this.panUp(t*(this.object.top-this.object.bottom)/i.clientHeight)):console.warn("WARNING: GeoControls.js encountered an unknown camera type - pan disabled.")}update(e){this.object.rotation.order="ZYX";let t=this.object;this.object=new THREE.Object3D,this.object.position.copy(t.position),this.object.rotation.copy(t.rotation),this.object.updateMatrix(),this.object.updateMatrixWorld();let i=this.object.position;if(void 0!==e){let t=this.shiftDown?4:1;this.moveRight&&this.panLeft(-e*this.moveSpeed*t),this.moveLeft&&this.panLeft(e*this.moveSpeed*t),(this.moveForward||this.moveForwardMouse)&&this.panForward(-e*this.moveSpeed*t),this.moveBackward&&this.panForward(e*this.moveSpeed*t),this.rotLeft&&this.rotateLeft(-.5*Math.PI*e/this.rotateSpeed),this.rotRight&&this.rotateLeft(.5*Math.PI*e/this.rotateSpeed),this.raiseCamera&&this.panUp(e*this.moveSpeed*t),this.lowerCamera&&this.panUp(-e*this.moveSpeed*t)}if(!pan.equals(new THREE.Vector3(0,0,0))){let e={type:"move",translation:pan.clone()};this.dispatchEvent(e)}if(i.add(pan),0!==thetaDelta||0!==phiDelta){let e={type:"rotate",thetaDelta:thetaDelta,phiDelta:phiDelta};this.dispatchEvent(e)}this.object.updateMatrix();let n=(new THREE.Matrix4).makeRotationY(thetaDelta),o=(new THREE.Matrix4).multiplyMatrices(n,this.object.matrix);this.object.quaternion.setFromRotationMatrix(o),this.object.rotation.x+=phiDelta,this.object.updateMatrixWorld();let s={type:"proposeTransform",oldPosition:t.position,newPosition:this.object.position,objections:0,counterProposals:[]};if(this.dispatchEvent(s),s.objections>0&&s.counterProposals.length>0){let e=s.counterProposals;this.object.position.copy(e[0]),s.objections=0,s.counterProposals=[]}if(s.objections>0||t.position.copy(this.object.position),t.rotation.copy(this.object.rotation),this.object=t,thetaDelta=0,phiDelta=0,pan.set(0,0,0),lastPosition.distanceTo(this.object.position)>0&&(this.dispatchEvent(changeEvent),lastPosition.copy(this.object.position)),this.track){let e=this.track.getPointAt(this.trackPos);t.position.copy(e)}}reset(){state=STATE.NONE,this.object.position.copy(this.position0)}onMouseDown(){!1!==this.enabled&&(event.preventDefault(),0===event.button?(state=STATE.ROTATE,rotateStart.set(event.clientX,event.clientY)):1===event.button?(state=STATE.PAN,panStart.set(event.clientX,event.clientY)):2===event.button&&(this.moveForwardMouse=!0),this.dispatchEvent(startEvent))}onMouseMove(e){if(!1===this.enabled)return;e.preventDefault();let t=this.domElement===document?this.domElement.body:this.domElement;state===STATE.ROTATE?(rotateEnd.set(e.clientX,e.clientY),rotateDelta.subVectors(rotateEnd,rotateStart),this.rotateLeft(2*Math.PI*rotateDelta.x/t.clientWidth*this.rotateSpeed),this.rotateUp(2*Math.PI*rotateDelta.y/t.clientHeight*this.rotateSpeed),rotateStart.copy(rotateEnd)):state===STATE.PAN&&(panEnd.set(e.clientX,e.clientY),panDelta.subVectors(panEnd,panStart),panDelta.multiplyScalar(.002).multiplyScalar(this.moveSpeed),this.pan(panDelta.x,panDelta.y),panStart.copy(panEnd))}onMouseUp(e){!1!==this.enabled&&(2===e.button?this.moveForwardMouse=!1:(this.dispatchEvent(endEvent),state=STATE.NONE))}onMouseWheel(e){if(!1===this.enabled||!0===this.noZoom)return;e.preventDefault();let t=e.detail<0||e.wheelDelta>0?1:-1,i=this.moveSpeed+.1*this.moveSpeed*t;i=Math.max(.1,i),this.setMoveSpeed(i),this.dispatchEvent(startEvent),this.dispatchEvent(endEvent)}setMoveSpeed(e){this.moveSpeed!==e&&(this.moveSpeed=e,this.dispatchEvent({type:"move_speed_changed",controls:this}))}onKeyDown(e){if(!1!==this.enabled)switch(this.shiftDown=e.shiftKey,e.keyCode){case this.keys.UP:this.moveForward=!0;break;case this.keys.BOTTOM:this.moveBackward=!0;break;case this.keys.LEFT:this.moveLeft=!0;break;case this.keys.RIGHT:this.moveRight=!0;break;case this.keys.W:this.moveForward=!0;break;case this.keys.S:this.moveBackward=!0;break;case this.keys.A:this.moveLeft=!0;break;case this.keys.D:this.moveRight=!0;break;case this.keys.Q:this.rotLeft=!0;break;case this.keys.E:this.rotRight=!0;break;case this.keys.R:this.raiseCamera=!0;break;case this.keys.F:this.lowerCamera=!0}}onKeyUp(e){switch(this.shiftDown=e.shiftKey,e.keyCode){case this.keys.W:this.moveForward=!1;break;case this.keys.S:this.moveBackward=!1;break;case this.keys.A:this.moveLeft=!1;break;case this.keys.D:this.moveRight=!1;break;case this.keys.UP:this.moveForward=!1;break;case this.keys.BOTTOM:this.moveBackward=!1;break;case this.keys.LEFT:this.moveLeft=!1;break;case this.keys.RIGHT:this.moveRight=!1;break;case this.keys.Q:this.rotLeft=!1;break;case this.keys.E:this.rotRight=!1;break;case this.keys.R:this.raiseCamera=!1;break;case this.keys.F:this.lowerCamera=!1}}},Potree.OrbitControls=class extends THREE.EventDispatcher{constructor(e,t){super(),this.viewer=e,this.index=t,this.renderer=e.renderers[t],this.scene=null,this.sceneControls=new THREE.Scene,this.rotationSpeed=2,this.panSpeed=.3,this.fadeFactor=10,this.yawDelta=0,this.pitchDelta=0,this.panDelta=new THREE.Vector2(0,0),this.radiusDelta=0,this.tweens=[];let i=null;this.addEventListener("touchstart",e=>{i=e}),this.addEventListener("touchend",e=>{i=e}),this.addEventListener("touchmove",e=>{if(2===e.touches.length&&2===i.touches.length){let n=i,o=e,s=n.touches[0].pageX-n.touches[1].pageX,r=n.touches[0].pageY-n.touches[1].pageY,a=Math.sqrt(s*s+r*r),l=o.touches[0].pageX-o.touches[1].pageX,h=o.touches[0].pageY-o.touches[1].pageY,d=Math.sqrt(l*l+h*h)/a,c=this.scene.views[t].radius+this.radiusDelta,p=c/d;this.radiusDelta=p-c,this.stopTweens()}else if(3===e.touches.length&&3===i.touches.length){let t=i,n=e,o=(t.touches[0].pageX+t.touches[1].pageX+t.touches[2].pageX)/3,s=(t.touches[0].pageY+t.touches[1].pageY+t.touches[2].pageY)/3,r=(n.touches[0].pageX+n.touches[1].pageX+n.touches[2].pageX)/3,a=(n.touches[0].pageY+n.touches[1].pageY+n.touches[2].pageY)/3,l={x:(r-o)/this.renderer.domElement.clientWidth,y:(a-s)/this.renderer.domElement.clientHeight};this.panDelta.x+=l.x,this.panDelta.y+=l.y,this.stopTweens()}i=e}),this.addEventListener("drag",e=>{if(null!==e.drag.object)return;void 0===e.drag.startHandled&&(e.drag.startHandled=!0,this.dispatchEvent({type:"start"}));let t=e.drag.lastDrag.x/this.renderer.domElement.clientWidth,i=e.drag.lastDrag.y/this.renderer.domElement.clientHeight;e.drag.mouse===Potree.MOUSE.LEFT?(this.yawDelta-=t*this.rotationSpeed,this.pitchDelta-=i*this.rotationSpeed,this.stopTweens()):e.drag.mouse===Potree.MOUSE.RIGHT&&(this.panDelta.x+=t*this.panSpeed,this.panDelta.y+=i*this.panSpeed,this.stopTweens())}),this.addEventListener("drop",e=>{this.dispatchEvent({type:"end"})}),this.addEventListener("mousewheel",e=>{let i=this.scene.views[t].radius+this.radiusDelta;this.radiusDelta+=-e.delta*i*.1,this.stopTweens()}),this.addEventListener("dblclick",e=>{this.zoomToLocation(e.mouse)})}setScene(e){this.scene=e}stop(){this.yawDelta=0,this.pitchDelta=0,this.radiusDelta=0,this.panDelta.set(0,0)}zoomToLocation(e){let t=this.scene.getActiveCamera(),i=Potree.utils.getMousePointCloudIntersection(e,t,this.viewer,this.scene.pointclouds,{pickClipped:!0});if(null===i)return;let n=0;{let o=.2,s=this.renderer.domElement,r=Potree.utils.mouseToRay(e,t,s.clientWidth,s.clientHeight),a=i.pointcloud.nodesOnRay(i.pointcloud.visibleNodes,r),l=a[a.length-1].getBoundingSphere().radius;n=Math.min(this.scene.views[this.index].radius,l),n=Math.max(o,n)}let o=this.scene.views[this.index].direction.multiplyScalar(-1),s=(new THREE.Vector3).addVectors(i.location,o.multiplyScalar(n)),r=TWEEN.Easing.Quartic.Out;{let e={x:0},t=new TWEEN.Tween(e).to({x:1},600);t.easing(r),this.tweens.push(t);let n=this.scene.views[this.index].position.clone(),o=s.clone(),a=this.scene.views[this.index].radius,l=s.distanceTo(i.location);t.onUpdate(()=>{let t=e.x;this.scene.views[this.index].position.x=(1-t)*n.x+t*o.x,this.scene.views[this.index].position.y=(1-t)*n.y+t*o.y,this.scene.views[this.index].position.z=(1-t)*n.z+t*o.z,this.scene.views[this.index].radius=(1-t)*a+t*l,this.viewer.setMoveSpeed(this.scene.views[this.index].radius/2.5)}),t.onComplete(()=>{this.tweens=this.tweens.filter(e=>e!==t)}),t.start()}}stopTweens(){this.tweens.forEach(e=>e.stop()),this.tweens=[]}update(e){let t=this.scene.views[this.index];{if(!this.scene.pointclouds.length)return;const e=this.scene.volumes.find(e=>e.clip);this.pivot=e?e.position.clone():t.getPivot();let i=t.pitch,n=t.clone();n.pitch=n.pitch+this.pitchDelta,this.pitchDelta=n.pitch-i;let o=(new THREE.Vector3).subVectors(t.position,this.pivot),s=t.getSide();o.applyAxisAngle(s,this.pitchDelta),o.applyAxisAngle(new THREE.Vector3(0,0,1),this.yawDelta);let r=(new THREE.Vector3).addVectors(this.pivot,o);t.position.copy(r),t.yaw+=this.yawDelta,t.pitch+=this.pitchDelta}{let i=Math.min(1,this.fadeFactor*e)*t.radius*3,n=-this.panDelta.x*i,o=this.panDelta.y*i;t.pan(n,o)}{let i=Math.min(1,this.fadeFactor*e),n=t.radius+i*this.radiusDelta,o=t.direction.multiplyScalar(-n),s=(new THREE.Vector3).addVectors(t.getPivot(),o);t.radius=n,t.position.copy(s)}{let e=t.radius/2.5;this.viewer.setMoveSpeed(e)}{let t=Math.min(1,this.fadeFactor*e),i=Math.max(0,1-this.fadeFactor*e);this.yawDelta*=i,this.pitchDelta*=i,this.panDelta.multiplyScalar(i),this.radiusDelta-=t*this.radiusDelta}}},Potree.ExtractorControls=class extends THREE.EventDispatcher{constructor(e,t){super(),this.viewer=e,this.index=t,this.renderer=e.renderers[t],this.scene=null,this.sceneControls=new THREE.Scene,this.rotationSpeed=5,this.panSpeed=.3,this.minRadius=.3,this.maxRadius=1e3,this.fadeFactor=10,this.yawDelta=0,this.pitchDelta=0,this.panDelta=new THREE.Vector2(0,0),this.radiusDelta=0,this.view=e.scene.views[this.index],this.oppositeIndex=1===t?0:1,this.oppositeView=e.scene.views[this.oppositeIndex],this.callback=(()=>{}),this.onYawChange=(()=>{}),this.tweens=[];let i=null;this.addEventListener("touchstart",e=>{i=e}),this.addEventListener("touchend",e=>{i=e}),this.addEventListener("touchmove",e=>{if(2===e.touches.length&&2===i.touches.length){let n=i,o=e,s=n.touches[0].pageX-n.touches[1].pageX,r=n.touches[0].pageY-n.touches[1].pageY,a=Math.sqrt(s*s+r*r),l=o.touches[0].pageX-o.touches[1].pageX,h=o.touches[0].pageY-o.touches[1].pageY,d=Math.sqrt(l*l+h*h)/a,c=this.scene.views[t].radius+this.radiusDelta,p=c/d;this.radiusDelta=p-c,this.stopTweens()}else if(3===e.touches.length&&3===i.touches.length){let t=i,n=e,o=(t.touches[0].pageX+t.touches[1].pageX+t.touches[2].pageX)/3,s=(t.touches[0].pageY+t.touches[1].pageY+t.touches[2].pageY)/3,r=(n.touches[0].pageX+n.touches[1].pageX+n.touches[2].pageX)/3,a=(n.touches[0].pageY+n.touches[1].pageY+n.touches[2].pageY)/3,l={x:(r-o)/this.renderer.domElement.clientWidth,y:(a-s)/this.renderer.domElement.clientHeight};this.panDelta.x+=l.x,this.panDelta.y+=l.y,this.stopTweens()}i=e}),this.addEventListener("drag",e=>{if(null!==e.drag.object)return;void 0===e.drag.startHandled&&(e.drag.startHandled=!0,this.dispatchEvent({type:"start"}));let t=e.drag.lastDrag.x/this.renderer.domElement.clientWidth,i=e.drag.lastDrag.y/this.renderer.domElement.clientHeight;e.drag.mouse===Potree.MOUSE.LEFT?(this.yawDelta+=t*this.rotationSpeed,this.viewer.activeControls[this.oppositeIndex].yawDelta=this.yawDelta,this.stopTweens()):e.drag.mouse===Potree.MOUSE.RIGHT&&(this.panDelta.x+=t*this.panSpeed,this.panDelta.y+=i*this.panSpeed,this.viewer.activeControls[this.oppositeIndex].panDelta.x=this.panDelta.x,this.stopTweens())}),this.addEventListener("drop",e=>{this.dispatchEvent({type:"end"})}),this.addEventListener("mousewheel",e=>{let i=this.scene.views[t].radius+this.radiusDelta;this.radiusDelta+=-e.delta*i*.1,this.viewer.activeControls[this.oppositeIndex].radiusDelta=this.radiusDelta,this.stopTweens()}),this.addEventListener("dblclick",e=>{this.zoomToLocation(e.mouse)})}setScene(e){this.scene=e}stop(){this.yawDelta=0,this.pitchDelta=0,this.radiusDelta=0,this.panDelta.set(0,0)}zoomToLocation(e){let t=this.scene.getActiveCamera(),i=Potree.utils.getMousePointCloudIntersection(e,t,this.viewer,this.scene.pointclouds,{pickClipped:!0});if(null===i)return;const n=this.view;let o=0;{let s=.2,r=this.renderer.domElement,a=Potree.utils.mouseToRay(e,t,r.clientWidth,r.clientHeight),l=i.pointcloud.nodesOnRay(i.pointcloud.visibleNodes,a),h=l[l.length-1].getBoundingSphere().radius;o=Math.min(n.radius,h),o=Math.max(s,o)}let s=n.direction.multiplyScalar(-1),r=(new THREE.Vector3).addVectors(i.location,s.multiplyScalar(o)),a=TWEEN.Easing.Quartic.Out;{let e={x:0},t=new TWEEN.Tween(e).to({x:1},600);t.easing(a),this.tweens.push(t);let o=n.position.clone(),s=r.clone(),l=n.radius,h=r.distanceTo(i.location);t.onUpdate(()=>{let t=e.x;n.position.x=(1-t)*o.x+t*s.x,n.position.y=(1-t)*o.y+t*s.y,n.position.z=(1-t)*o.z+t*s.z,n.radius=(1-t)*l+t*h,this.viewer.setMoveSpeed(n.radius/2.5)}),t.onComplete(()=>{this.tweens=this.tweens.filter(e=>e!==t)}),t.start()}}stopTweens(){this.tweens.forEach(e=>e.stop()),this.tweens=[]}updateYaw(e){const t=this.view,i=t.yaw-e;this.pivot=this.scene.pointclouds[0].boundingBox.getCenter(),e<-Math.PI?e+=2*Math.PI:e>Math.PI&&(e-=2*Math.PI),t.yaw=e;let n=(new THREE.Vector3).subVectors(t.position,this.pivot),o=(new THREE.Vector3).subVectors(t.getPivot(),this.pivot);n.applyAxisAngle(new THREE.Vector3(0,0,1),-i),o.applyAxisAngle(new THREE.Vector3(0,0,1),-i);let s=(new THREE.Vector3).addVectors(this.pivot,n);t.position.copy(s)}isViewMoving(){return this.yawDelta||this.radiusDelta||this.panDelta.x||this.panDelta.y}update(e){let t=this.view;const i=e=>+e.toFixed(3),n=i(this.radiusDelta),o=i(this.yawDelta),s=new THREE.Vector3(i(this.panDelta.x),i(this.panDelta.y));0!==n?(this.panDelta.set(0,0),this.yawDelta=0):0!==o?(this.panDelta.set(0,0),this.radiusDelta=0):0===s.x&&0===s.y||(this.radiusDelta=0,this.yawDelta=0);{if(!this.scene.pointclouds.length)return;let i=Math.min(1,this.fadeFactor*e);this.updateYaw(t.yaw-i*this.yawDelta)}{let i=Math.min(1,this.fadeFactor*e)*t.radius*3,n=-this.panDelta.x*i,o=this.panDelta.y*i;t.pan(n,o)}{let i=Math.min(1,this.fadeFactor*e),n=t.radius+i*this.radiusDelta;n=(n=n<this.minRadius?this.minRadius:n)>this.maxRadius?this.maxRadius:n,t.radius=n}{let e=t.radius/2.5;this.viewer.setMoveSpeed(e)}this.isViewMoving()&&this.callback(),this.yawDelta&&this.onYawChange();{let t=Math.min(1,this.fadeFactor*e),i=Math.max(0,1-this.fadeFactor*e);this.yawDelta*=i,this.pitchDelta*=i,this.panDelta.multiplyScalar(i),this.radiusDelta-=t*this.radiusDelta}}},Potree.EarthControls=class extends THREE.EventDispatcher{constructor(e){super(e),this.viewer=e,this.renderer=e.renderer,this.scene=null,this.sceneControls=new THREE.Scene,this.rotationSpeed=10,this.fadeFactor=20,this.wheelDelta=0,this.zoomDelta=new THREE.Vector3,this.camStart=null,this.tweens=[];{let e=new THREE.SphereGeometry(1,16,16),t=new THREE.MeshNormalMaterial;this.pivotIndicator=new THREE.Mesh(e,t),this.pivotIndicator.visible=!1,this.sceneControls.add(this.pivotIndicator)}this.addEventListener("drag",e=>{if(null!==e.drag.object)return;if(!this.pivot)return;void 0===e.drag.startHandled&&(e.drag.startHandled=!0,this.dispatchEvent({type:"start"}));let t=this.camStart,i=this.viewer.scene.view,n=e.drag.end,o=this.viewer.renderer.domElement;if(e.drag.mouse===Potree.MOUSE.LEFT){let e=Potree.utils.mouseToRay(n,t,o.clientWidth,o.clientHeight),s=(new THREE.Plane).setFromNormalAndCoplanarPoint(new THREE.Vector3(0,0,1),this.pivot),r=e.distanceToPlane(s);if(r>0){let n=(new THREE.Vector3).addVectors(t.position,e.direction.clone().multiplyScalar(r)),o=(new THREE.Vector3).subVectors(n,this.pivot),s=t.position.clone().sub(o);i.position.copy(s);{let e=s.distanceTo(this.pivot);i.radius=e;let t=i.radius/2.5;this.viewer.setMoveSpeed(t)}}}else if(e.drag.mouse===Potree.MOUSE.RIGHT){let t={x:e.drag.lastDrag.x/this.renderer.domElement.clientWidth,y:e.drag.lastDrag.y/this.renderer.domElement.clientHeight},n=-t.x*this.rotationSpeed*.5,o=-t.y*this.rotationSpeed*.2,s=i.pitch,r=i.clone();r.pitch=r.pitch+o,o=r.pitch-s;let a=(new THREE.Vector3).subVectors(i.position,this.pivot),l=(new THREE.Vector3).subVectors(i.getPivot(),this.pivot),h=i.getSide();a.applyAxisAngle(h,o),l.applyAxisAngle(h,o),a.applyAxisAngle(new THREE.Vector3(0,0,1),n),l.applyAxisAngle(new THREE.Vector3(0,0,1),n);let d=(new THREE.Vector3).addVectors(this.pivot,a);i.position.copy(d),i.yaw+=n,i.pitch+=o}}),this.addEventListener("drop",e=>{this.dispatchEvent({type:"end"})}),this.addEventListener("mousewheel",e=>{this.wheelDelta+=e.delta}),this.addEventListener("mousedown",e=>{let t=Potree.utils.getMousePointCloudIntersection(e.mouse,this.scene.getActiveCamera(),this.viewer,this.scene.pointclouds,{pickClipped:!1});t&&(this.pivot=t.location,this.camStart=this.scene.getActiveCamera().clone(),this.pivotIndicator.visible=!0,this.pivotIndicator.position.copy(t.location))}),this.addEventListener("mouseup",e=>{this.camStart=null,this.pivot=null,this.pivotIndicator.visible=!1}),this.addEventListener("dblclick",e=>{this.zoomToLocation(e.mouse)})}setScene(e){this.scene=e}stop(){this.wheelDelta=0,this.zoomDelta.set(0,0,0)}zoomToLocation(e){let t=this.scene.getActiveCamera(),i=Potree.utils.getMousePointCloudIntersection(e,t,this.viewer,this.scene.pointclouds);if(null===i)return;let n=0;{let o=.2,s=this.renderer.domElement,r=Potree.utils.mouseToRay(e,t,s.clientWidth,s.clientHeight),a=i.pointcloud.nodesOnRay(i.pointcloud.visibleNodes,r),l=a[a.length-1].getBoundingSphere().radius;n=Math.min(this.scene.view.radius,l),n=Math.max(o,n)}let o=this.scene.view.direction.multiplyScalar(-1),s=(new THREE.Vector3).addVectors(i.location,o.multiplyScalar(n)),r=TWEEN.Easing.Quartic.Out;{let e={x:0},t=new TWEEN.Tween(e).to({x:1},600);t.easing(r),this.tweens.push(t);let n=this.scene.view.position.clone(),o=s.clone(),a=this.scene.view.radius,l=s.distanceTo(i.location);t.onUpdate(()=>{let t=e.x;this.scene.view.position.x=(1-t)*n.x+t*o.x,this.scene.view.position.y=(1-t)*n.y+t*o.y,this.scene.view.position.z=(1-t)*n.z+t*o.z,this.scene.view.radius=(1-t)*a+t*l,this.viewer.setMoveSpeed(this.scene.view.radius/2.5)}),t.onComplete(()=>{this.tweens=this.tweens.filter(e=>e!==t)}),t.start()}}update(e){let t=this.scene.view,i=Math.pow(.5,this.fadeFactor*e),n=1-i,o=this.scene.getActiveCamera();if(0!==this.wheelDelta){let e=Potree.utils.getMousePointCloudIntersection(this.viewer.inputHandler.mouse,this.scene.getActiveCamera(),this.viewer,this.scene.pointclouds);if(e){let i=(new THREE.Vector3).addVectors(t.position,this.zoomDelta),n=.2*e.location.distanceTo(i)*this.wheelDelta,o=(new THREE.Vector3).subVectors(e.location,t.position);o.normalize(),i.add(o.multiplyScalar(n)),this.zoomDelta.subVectors(i,t.position);{let n=i.distanceTo(e.location);t.radius=n;let o=t.radius/2.5;this.viewer.setMoveSpeed(o)}}}if(0!==this.zoomDelta.length()){let e=this.zoomDelta.clone().multiplyScalar(n),i=(new THREE.Vector3).addVectors(t.position,e);t.position.copy(i)}if(this.pivotIndicator.visible){let e=this.pivotIndicator.position.distanceTo(t.position),i=this.renderer.domElement.clientwidth,n=this.renderer.domElement.clientHeight,s=10/Potree.utils.projectedRadius(1,o,e,i,n);this.pivotIndicator.scale.set(s,s,s)}this.zoomDelta.multiplyScalar(i),this.wheelDelta=0}},LRU.prototype.size=function(){return this.elements},LRU.prototype.contains=function(e){return null==this.items[e.id]},LRU.prototype.touch=function(e){if(!e.loaded)return;let t;null==this.items[e.id]?((t=new LRUItem(e)).previous=this.last,this.last=t,null!==t.previous&&(t.previous.next=t),this.items[e.id]=t,this.elements++,null===this.first&&(this.first=t),this.numPoints+=e.numPoints):null===(t=this.items[e.id]).previous?null!==t.next&&(this.first=t.next,this.first.previous=null,t.previous=this.last,t.next=null,this.last=t,t.previous.next=t):null===t.next||(t.previous.next=t.next,t.next.previous=t.previous,t.previous=this.last,t.next=null,this.last=t,t.previous.next=t)},LRU.prototype.remove=function(e){let t=this.items[e.id];t&&(1===this.elements?(this.first=null,this.last=null):(t.previous||(this.first=t.next,this.first.previous=null),t.next||(this.last=t.previous,this.last.next=null),t.previous&&t.next&&(t.previous.next=t.next,t.next.previous=t.previous)),delete this.items[e.id],this.elements--,this.numPoints-=e.numPoints)},LRU.prototype.getLRUItem=function(){if(null===this.first)return null;return this.first.node},LRU.prototype.toString=function(){let e="{ ",t=this.first;for(;null!==t;)e+=t.node.id,null!==t.next&&(e+=", "),t=t.next;return e+="}",e+="("+this.size()+")"},LRU.prototype.freeMemory=function(){if(!(this.elements<=1))for(;this.numPoints>Potree.pointLoadLimit;){let e=this.first.node;this.disposeDescendants(e)}},LRU.prototype.disposeDescendants=function(e){let t=[];for(t.push(e);t.length>0;){let e=t.pop();e.dispose(),this.remove(e);for(let i in e.children)if(e.children.hasOwnProperty(i)){e.children[i].loaded&&t.push(e.children[i])}}},Potree.Annotation=class extends THREE.EventDispatcher{constructor(e={}){super();this.scene=null,this._title=e.title||"No Title",this._description=e.description||"",e.position?e.position instanceof THREE.Vector3?this.position=e.position:this.position=new THREE.Vector3(...e.position):this.position=null,this.cameraPosition=e.cameraPosition instanceof Array?(new THREE.Vector3).fromArray(e.cameraPosition):e.cameraPosition,this.cameraTarget=e.cameraTarget instanceof Array?(new THREE.Vector3).fromArray(e.cameraTarget):e.cameraTarget,this.radius=e.radius,this.view=e.view||null,this.keepOpen=!1,this.descriptionVisible=!1,this.showDescription=!0,this.actions=e.actions||[],this.isHighlighted=!1,this._visible=!0,this.__visible=!0,this._display=!0,this._expand=!1,this.collapseThreshold=[e.collapseThreshold,100].find(e=>void 0!==e),this.children=[],this.parent=null,this.boundingBox=new THREE.Box3;let t=Potree.resourcePath+"/icons/close.svg";this.domElement=$(`\n\t\t\t<div class="annotation" oncontextmenu="return false;">\n\t\t\t\t<div class="annotation-titlebar">\n\t\t\t\t\t<span class="annotation-label"></span>\n\t\t\t\t</div>\n\t\t\t\t<div class="annotation-description">\n\t\t\t\t\t<span class="annotation-description-close">\n\t\t\t\t\t\t<img src="${t}" width="16px">\n\t\t\t\t\t</span>\n\t\t\t\t\t<span class="annotation-description-content">${this._description}</span>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t`),this.elTitlebar=this.domElement.find(".annotation-titlebar"),this.elTitle=this.elTitlebar.find(".annotation-label"),this.elTitle.append(this._title),this.elDescription=this.domElement.find(".annotation-description"),this.elDescriptionClose=this.elDescription.find(".annotation-description-close"),this.clickTitle=(()=>{this.hasView()&&this.moveHere(this.scene.getActiveCamera()),this.dispatchEvent({type:"click",target:this})}),this.elTitle.click(this.clickTitle),this.actions=this.actions.map(e=>e instanceof Potree.Action?e:new Potree.Action(e));for(let e of this.actions)e.pairWith(this);let i=this.actions.filter(e=>void 0===e.showIn||e.showIn.includes("scene"));for(let e of i){let t=$(`<img src="${e.icon}" class="annotation-action-icon">`);this.elTitlebar.append(t),t.click(()=>e.onclick({annotation:this}))}this.elDescriptionClose.hover(e=>this.elDescriptionClose.css("opacity","1"),e=>this.elDescriptionClose.css("opacity","0.5")),this.elDescriptionClose.click(e=>this.setHighlighted(!1)),this.domElement.mouseenter(e=>this.setHighlighted(!0)),this.domElement.mouseleave(e=>this.setHighlighted(!1)),this.domElement.on("touchstart",e=>{this.setHighlighted(!this.isHighlighted)}),this.display=!1}get visible(){return this._visible}set visible(e){this._visible!==e&&(this._visible=e,this.dispatchEvent({type:"visibility_changed",annotation:this}))}get display(){return this._display}set display(e){this._display!==e&&(this._display=e,e?this.domElement.show():this.domElement.hide())}get expand(){return this._expand}set expand(e){this._expand!==e&&(e?this.display=!1:(this.display=!0,this.traverseDescendants(e=>{e.display=!1})),this._expand=e)}get title(){return this._title}set title(e){this._title!==e&&(this._title=e,this.elTitle.empty(),this.elTitle.append(this._title))}get description(){return this._description}set description(e){if(this._description===e)return;this._description=e;const t=this.elDescription.find(".annotation-description-content");t.empty(),t.append(this._description)}add(e){if(!this.children.includes(e)){this.children.push(e),e.parent=this;let t=[];e.traverse(e=>{t.push(e)});for(let e of t){let t=this;for(;null!==t;)t.dispatchEvent({type:"annotation_added",annotation:e}),t=t.parent}}}level(){return null===this.parent?0:this.parent.level()+1}hasChild(e){return this.children.includes(e)}remove(e){this.hasChild(e)&&(e.removeAllChildren(),e.dispose(),this.children=this.children.filter(t=>t!==e),e.parent=null)}removeAllChildren(){this.children.forEach(e=>{e.children.length>0&&e.removeAllChildren(),this.remove(e)})}updateBounds(){let e=new THREE.Box3;this.position&&e.expandByPoint(this.position);for(let t of this.children)t.updateBounds(),e.union(t.boundingBox);this.boundingBox.copy(e)}traverse(e){let t=e(this);if(void 0===t||!0===t)for(let t of this.children)t.traverse(e)}traverseDescendants(e){for(let t of this.children)t.traverse(e)}flatten(){let e=[];return this.traverse(t=>{e.push(t)}),e}descendants(){let e=[];return this.traverse(t=>{t!==this&&e.push(t)}),e}setHighlighted(e){e?(this.domElement.css("opacity","0.8"),this.elTitlebar.css("box-shadow","0 0 5px #fff"),this.domElement.css("z-index","1000"),this._description&&(this.descriptionVisible=!0,this.elDescription.fadeIn(200),this.elDescription.css("position","relative"))):(this.domElement.css("opacity","0.5"),this.elTitlebar.css("box-shadow",""),this.domElement.css("z-index","100"),this.descriptionVisible=!1,this.elDescription.css("display","none")),this.isHighlighted=e}hasView(){let e=this.cameraTarget instanceof THREE.Vector3;e=e&&this.cameraPosition instanceof THREE.Vector3;let t=void 0!==this.radius;return e||t}moveHere(e){if(!this.hasView())return;let t,i=this.scene.view,n=TWEEN.Easing.Quartic.Out;if(t=this.cameraTarget?this.cameraTarget:this.position?this.position:this.boundingBox.getCenter(),this.cameraPosition){let e=this.cameraPosition;Potree.utils.moveTo(this.scene,e,t)}else if(this.radius){let e=i.direction,o=t.clone().add(e.multiplyScalar(-this.radius)),s=i.radius,r=this.radius;{let e=new TWEEN.Tween(i.position).to(o,500);e.easing(n),e.start()}{let e={x:0},t=new TWEEN.Tween(e).to({x:1},500).onUpdate(function(){i.radius=this.x*r+(1-this.x)*s});t.easing(n),t.start()}}}dispose(){this.domElement.parentElement&&this.domElement.parentElement.removeChild(this.domElement)}toString(){return"Annotation: "+this._title}},Potree.Action=class extends THREE.EventDispatcher{constructor(e={}){super(),this.icon=e.icon||"",this.tooltip=e.tooltip,void 0!==e.onclick&&(this.onclick=e.onclick)}onclick(e){}pairWith(e){}setIcon(e){let t=this.icon;e!==t&&(this.icon=e,this.dispatchEvent({type:"icon_changed",action:this,icon:e,oldIcon:t}))}},Potree.Actions={},Potree.Actions.ToggleAnnotationVisibility=class extends Potree.Action{constructor(e={}){super(e),this.icon=Potree.resourcePath+"/icons/eye.svg",this.showIn="sidebar",this.tooltip="toggle visibility"}pairWith(e){e.visible?this.setIcon(Potree.resourcePath+"/icons/eye.svg"):this.setIcon(Potree.resourcePath+"/icons/eye_crossed.svg"),e.addEventListener("visibility_changed",e=>{e.annotation.visible?this.setIcon(Potree.resourcePath+"/icons/eye.svg"):this.setIcon(Potree.resourcePath+"/icons/eye_crossed.svg")})}onclick(e){let t=e.annotation;t.visible=!t.visible,t.visible?this.setIcon(Potree.resourcePath+"/icons/eye.svg"):this.setIcon(Potree.resourcePath+"/icons/eye_crossed.svg")}},Potree.ProfileData=class{constructor(e){this.profile=e,this.segments=[],this.boundingBox=new THREE.Box3;for(let t=0;t<e.points.length-1;t++){let i=e.points[t],n=e.points[t+1],o=new THREE.Vector3(i.x,i.y,0),s=new THREE.Vector3(n.x,n.y,0),r=(new THREE.Vector3).addVectors(s,o).multiplyScalar(.5),a=o.distanceTo(s),l=(new THREE.Vector3).subVectors(s,o).normalize(),h=new THREE.Vector3(0,0,1),d=(new THREE.Vector3).crossVectors(l,h).normalize(),c={start:i,end:n,cutPlane:(new THREE.Plane).setFromNormalAndCoplanarPoint(d,o),halfPlane:(new THREE.Plane).setFromNormalAndCoplanarPoint(l,r),length:a,points:new Potree.Points};this.segments.push(c)}}size(){let e=0;for(let t of this.segments)e+=t.points.numPoints;return e}},Potree.ProfileRequest=class{constructor(e,t,i,n){this.pointcloud=e,this.profile=t,this.maxDepth=i||Number.MAX_VALUE,this.callback=n,this.temporaryResult=new Potree.ProfileData(this.profile),this.pointsServed=0,this.highestLevelServed=0,this.priorityQueue=new BinaryHeap(function(e){return 1/e.weight}),this.initialize()}initialize(){this.priorityQueue.push({node:this.pointcloud.pcoGeometry.root,weight:1/0})}traverse(e){let t=[];for(let i=0;i<8;i++){let n=e.children[i];n&&this.pointcloud.nodeIntersectsProfile(n,this.profile)&&t.push(n)}for(;t.length>0;){let e=t.pop(),i=e.boundingSphere.radius;if(this.priorityQueue.push({node:e,weight:i}),e.level<this.maxDepth)for(let i=0;i<8;i++){let n=e.children[i];n&&this.pointcloud.nodeIntersectsProfile(n,this.profile)&&t.push(n)}}}update(){this.updateGeneratorInstance||(this.updateGeneratorInstance=this.updateGenerator()),this.updateGeneratorInstance.next().done&&(this.updateGeneratorInstance=null)}*updateGenerator(){performance.now();let e=[];for(let t=0;t<Math.min(1,this.priorityQueue.size());t++){let t=this.priorityQueue.pop(),i=t.node;if(!(i.level>this.maxDepth))if(i.loaded){e.push(i),Potree.getLRU().touch(i),this.highestLevelServed=Math.max(i.getLevel(),this.highestLevelServed);let t=i.level%i.pcoGeometry.hierarchyStepSize==0&&i.hasChildren;(t=t||0===i.getLevel())&&this.traverse(i)}else i.load(),this.priorityQueue.push(t)}if(e.length>0){for(let t of this.getPointsInsideProfile(e,this.temporaryResult))t||(yield!1);this.temporaryResult.size()>100&&(this.pointsServed+=this.temporaryResult.size(),this.callback.onProgress({request:this,points:this.temporaryResult}),this.temporaryResult=new Potree.ProfileData(this.profile))}if(0===this.priorityQueue.size()){this.temporaryResult.size()>0&&(this.pointsServed+=this.temporaryResult.size(),this.callback.onProgress({request:this,points:this.temporaryResult}),this.temporaryResult=new Potree.ProfileData(this.profile)),this.callback.onFinish({request:this});let e=this.pointcloud.profileRequests.indexOf(this);e>=0&&this.pointcloud.profileRequests.splice(e,1)}yield!0}*getAccepted(e,t,i,n,o,s,r){let a=performance.now(),l=new Uint32Array(e),h=new Float64Array(e),d=new Float32Array(3*e),c=0,p=new THREE.Vector3,u=new THREE.Vector3,m=new Float32Array(t.geometry.attributes.position.array);for(let t=0;t<e;t++){p.set(m[3*t+0],m[3*t+1],m[3*t+2]),p.applyMatrix4(i);let e=Math.abs(n.cutPlane.distanceToPoint(p)),g=Math.abs(n.halfPlane.distanceToPoint(p));if(e<this.profile.width/2&&g<n.length/2){u.subVectors(p,n.start);let e=o.dot(u);l[c]=t,h[c]=e+r,s.boundingBox.expandByPoint(p),d[3*c+0]=p.x,d[3*c+1]=p.y,d[3*c+2]=p.z,c++}if(t%1e3==0){performance.now()-a>4&&(yield!1,a=performance.now())}}yield[l=l.subarray(0,c),h=h.subarray(0,c),d=d.subarray(0,3*c)]}*getPointsInsideProfile(e,t){let i=performance.now(),n=0,o=0;for(let s of t.segments){for(let r of e){let e=r.numPoints,a=r.geometry;if(!e)continue;{let e=r.boundingBox.clone().applyMatrix4(this.pointcloud.matrixWorld).getBoundingSphere(),i=new THREE.Vector3(s.start.x,s.start.y,e.center.z),n=new THREE.Vector3(s.end.x,s.end.y,e.center.z);if(!(new THREE.Line3(i,n).closestPointToPoint(e.center,!0).distanceTo(e.center)<e.radius+t.profile.width))continue}let l=(new THREE.Vector3).subVectors(s.end,s.start).setZ(0).clone().normalize(),h=new Potree.Points,d=(new THREE.Matrix4).makeTranslation(...r.boundingBox.min.toArray()),c=(new THREE.Matrix4).multiplyMatrices(this.pointcloud.matrixWorld,d);o+=e;let p=null,u=null,m=null;for(let t of this.getAccepted(e,r,c,s,l,h,n))if(t)[p,u,m]=t;else{performance.now();yield!1,i=performance.now()}performance.now()-i>4&&(yield!1,i=performance.now()),h.data.position=m;let g=Object.keys(a.attributes).filter(e=>!["position","indices"].includes(e));for(let t of g){let i=a.attributes[t],n=i.array.length/e;parseInt(n);let o=new(0,i.array.constructor)(n*p.length),s=i.array,r=o;for(let e=0;e<p.length;e++){let t=p[e]*n,i=t+n,o=s.subarray(t,i);r.set(o,e*n)}h.data[t]=o}h.data.mileage=u,h.numPoints=p.length,s.points.add(h)}n+=s.length}for(let e of t.segments)t.boundingBox.union(e.points.boundingBox);yield!0}finishLevelThenCancel(){this.cancelRequested||(this.maxDepth=this.highestLevelServed,this.cancelRequested=!0)}cancel(){this.callback.onCancel(),this.priorityQueue=new BinaryHeap(function(e){return 1/e.weight});let e=this.pointcloud.profileRequests.indexOf(this);e>=0&&this.pointcloud.profileRequests.splice(e,1)}},Potree.PointCloudOctreeNode=class extends Potree.PointCloudTreeNode{constructor(){super(),this.children={},this.sceneNode=null,this.octree=null}getNumPoints(){return this.geometryNode.numPoints}isLoaded(){return!0}isTreeNode(){return!0}isGeometryNode(){return!1}getLevel(){return this.geometryNode.level}getBoundingSphere(){return this.geometryNode.boundingSphere}getBoundingBox(){return this.geometryNode.boundingBox}getChildren(){let e=[];for(let t=0;t<8;t++)this.children[t]&&e.push(this.children[t]);return e}getPointsInBox(e){if(!this.sceneNode)return null;let t=this.geometryNode.buffer,i=t.offset("position"),n=t.stride,o=new DataView(t.data),s=(new THREE.Matrix4).getInverse(e.matrixWorld),r=(new THREE.Matrix4).multiplyMatrices(s,this.sceneNode.matrixWorld),a=[],l=new THREE.Vector4;for(let e=0;e<t.numElements;e++){let t=o.getFloat32(e*n+i+0,!0),s=o.getFloat32(e*n+i+4,!0),h=o.getFloat32(e*n+i+8,!0);l.set(t,s,h,1),l.applyMatrix4(r),-.5<l.x&&l.x<.5&&-.5<l.y&&l.y<.5&&-.5<l.z&&l.z<.5&&(l.set(t,s,h,1).applyMatrix4(this.sceneNode.matrixWorld),a.push(new THREE.Vector3(l.x,l.y,l.z)))}return a}get name(){return this.geometryNode.name}},Potree.PointCloudOctree=class extends Potree.PointCloudTree{constructor(e,t){super(),this.pointBudget=1/0,this.pcoGeometry=e,this.boundingBox=this.pcoGeometry.boundingBox,this.boundingSphere=this.boundingBox.getBoundingSphere(),this.material=t||new Potree.PointCloudMaterial,this.visiblePointsTarget=2e6,this.minimumNodePixelSize=150,this.level=0,this.position.copy(e.offset),this.updateMatrix(),this.showBoundingBox=!1,this.boundingBoxNodes=[],this.loadQueue=[],this.visibleBounds=new THREE.Box3,this.visibleNodes=[],this.visibleGeometry=[],this.generateDEM=!1,this.profileRequests=[],this.name="";{let e=[this.pcoGeometry.tightBoundingBox,this.getBoundingBoxWorld()].find(e=>void 0!==e);this.updateMatrixWorld(!0);let t=(e=Potree.utils.computeTransformedBoundingBox(e,this.matrixWorld)).min.z,i=e.max.z;this.material.heightMin=t,this.material.heightMax=i}this.projection=e.projection,this.root=this.pcoGeometry.root}setName(e){this.name!==e&&(this.name=e,this.dispatchEvent({type:"name_changed",name:e,pointcloud:this}))}getName(){return this.name}toTreeNode(e,t){let i=new Potree.PointCloudOctreeNode,n=new THREE.Points(e.geometry,this.material);n.name=e.name,n.position.copy(e.boundingBox.min),n.frustumCulled=!1,n.onBeforeRender=((t,n,o,s,r,a)=>{if(r.program){if(t.getContext().useProgram(r.program.program),r.program.getUniforms().map.level){let i=e.getLevel();r.uniforms.level.value=i,r.program.getUniforms().map.level.setValue(t.getContext(),i)}if(this.visibleNodeTextureOffsets&&r.program.getUniforms().map.vnStart){let e=this.visibleNodeTextureOffsets.get(i);r.uniforms.vnStart.value=e,r.program.getUniforms().map.vnStart.setValue(t.getContext(),e)}if(r.program.getUniforms().map.pcIndex){let e=i.pcIndex?i.pcIndex:this.visibleNodes.indexOf(i);r.uniforms.pcIndex.value=e,r.program.getUniforms().map.pcIndex.setValue(t.getContext(),e)}}}),i.geometryNode=e,i.sceneNode=n,i.pointcloud=this,i.children={};for(let t in e.children)i.children[t]=e.children[t];if(t){let o=parseInt(e.name[e.name.length-1]);t.sceneNode.add(n),t.children[o]=i}else this.root=i,this.add(n);return e.oneTimeDisposeHandlers.push(function(){let n=parseInt(e.name[e.name.length-1]);t.sceneNode.remove(i.sceneNode),t.children[n]=e}),i}updateVisibleBounds(){let e=[];for(let t=0;t<this.visibleNodes.length;t++){let i=this.visibleNodes[t],n=!0;for(let e=0;e<i.children.length;e++){let t=i.children[e];t instanceof Potree.PointCloudOctreeNode?n=n&&!t.sceneNode.visible:t instanceof Potree.PointCloudOctreeGeometryNode&&(n=!0)}n&&e.push(i)}this.visibleBounds.min=new THREE.Vector3(1/0,1/0,1/0),this.visibleBounds.max=new THREE.Vector3(-1/0,-1/0,-1/0);for(let t=0;t<e.length;t++){let i=e[t];this.visibleBounds.expandByPoint(i.getBoundingBox().min),this.visibleBounds.expandByPoint(i.getBoundingBox().max)}}updateMaterial(e,t,i,n){n.domElement&&(e.fov=i.fov*(Math.PI/180),e.screenWidth=n.domElement.clientWidth,e.screenHeight=n.domElement.clientHeight,e.spacing=this.pcoGeometry.spacing*Math.max(this.scale.x,this.scale.y,this.scale.z),e.near=i.near,e.far=i.far,e.uniforms.octreeSize.value=this.pcoGeometry.boundingBox.getSize().x)}computeVisibilityTextureData(e,t){Potree.measureTimings&&performance.mark("computeVisibilityTextureData-start");let i=new Uint8Array(4*e.length),n=new Map;(e=e.slice()).sort(function(e,t){let i=e.geometryNode.name,n=t.geometryNode.name;return i.length!==n.length?i.length-n.length:i<n?-1:i>n?1:0});let o=new THREE.Vector3,s=(e,t)=>{o.subVectors(t.center,e.origin);let i=o.dot(e.direction),n=o.dot(o)-i*i,s=t.radius*t.radius;if(n>s)return null;let r=i+Math.sqrt(s-n);return r<0?null:r},r=new Map,a=new Map;for(let o=0;o<e.length;o++){let l=e[o];n.set(l,o);let h=[];for(let t=0;t<8;t++){let i=l.children[t];i&&i.constructor===Potree.PointCloudOctreeNode&&e.includes(i,o)&&h.push(i)}l.geometryNode.estimatedSpacing;i[4*o+0]=0,i[4*o+1]=0,i[4*o+2]=0,i[4*o+3]=l.getLevel();for(let t=0;t<h.length;t++){let n=h[t],s=parseInt(n.geometryNode.name.substr(-1));if(i[4*o+0]+=Math.pow(2,s),0===t){let t=e.indexOf(n,o);i[4*o+1]=t-o>>8,i[4*o+2]=(t-o)%256}}{let e=l.getBoundingBox().clone().getBoundingSphere();e.applyMatrix4(l.sceneNode.matrixWorld),e.applyMatrix4(t.matrixWorldInverse);let i=s(new THREE.Ray(t.position,t.getWorldDirection()),e),n=e.center.distanceTo(t.position)+e.radius;if(null===i&&(i=n),i=Math.max(i,n),r.has(l.getLevel())){let e=r.get(l.getLevel()),t=Math.max(e,i);r.set(l.getLevel(),t)}else r.set(l.getLevel(),i);if(!l.geometryNode.hasChildren){let e={distance:i,i:o};a.set(l,e)}}}for(let[e,t]of a){let n=e.getLevel(),o=t.distance,s=t.i;if(!(n<4))for(let[e,t]of r)o<1.2*t&&(i[4*s+3]=e)}return Potree.measureTimings&&(performance.mark("computeVisibilityTextureData-end"),performance.measure("render.computeVisibilityTextureData","computeVisibilityTextureData-start","computeVisibilityTextureData-end")),{data:i,offsets:n}}nodeIntersectsProfile(e,t){let i=e.boundingBox.clone().applyMatrix4(this.matrixWorld).getBoundingSphere(),n=!1;for(let e=0;e<t.points.length-1;e++){let o=new THREE.Vector3(t.points[e+0].x,t.points[e+0].y,i.center.z),s=new THREE.Vector3(t.points[e+1].x,t.points[e+1].y,i.center.z),r=new THREE.Line3(o,s).closestPointToPoint(i.center,!0).distanceTo(i.center);n=n||r<i.radius+t.width}return n}nodesOnRay(e,t){let i=[],n=t.clone();for(let t=0;t<e.length;t++){let o=e[t],s=o.getBoundingSphere().clone().applyMatrix4(this.matrixWorld);n.intersectsSphere(s)&&i.push(o)}return i}updateMatrixWorld(e){!0===this.matrixAutoUpdate&&this.updateMatrix(),!0!==this.matrixWorldNeedsUpdate&&!0!==e||(this.parent?this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix):this.matrixWorld.copy(this.matrix),this.matrixWorldNeedsUpdate=!1,e=!0)}hideDescendants(e){let t=[];for(let i=0;i<e.children.length;i++){let n=e.children[i];n.visible&&t.push(n)}for(;t.length>0;){let e=t.shift();e.visible=!1;for(let i=0;i<e.children.length;i++){let n=e.children[i];n.visible&&t.push(n)}}}moveToOrigin(){this.position.set(0,0,0),this.updateMatrixWorld(!0);let e=this.boundingBox,t=this.matrixWorld,i=Potree.utils.computeTransformedBoundingBox(e,t);this.position.set(0,0,0).sub(i.getCenter())}moveToGroundPlane(){this.updateMatrixWorld(!0);let e=this.boundingBox,t=this.matrixWorld,i=Potree.utils.computeTransformedBoundingBox(e,t);this.position.y+=-i.min.y}getBoundingBoxWorld(){this.updateMatrixWorld(!0);let e=this.boundingBox,t=this.matrixWorld;return Potree.utils.computeTransformedBoundingBox(e,t)}getPointsInProfile(e,t,i){if(i){let n=new Potree.ProfileRequest(this,e,t,i);return this.profileRequests.push(n),n}let n={segments:[],boundingBox:new THREE.Box3,projectedBoundingBox:new THREE.Box2};for(let i=0;i<e.points.length-1;i++){let o=e.points[i],s=e.points[i+1],r=this.getProfile(o,s,e.width,t),a={start:o,end:s,points:r,project:null};n.segments.push(a),n.boundingBox.expandByPoint(r.boundingBox.min),n.boundingBox.expandByPoint(r.boundingBox.max)}let o=new THREE.Vector3;for(let e=0;e<n.segments.length;e++){let t=n.segments[e],i=t.start,s=t.end,r=function(e,t,i,o){let s=e,r=t,a=i,l=n.boundingBox.clone(),h=new THREE.Vector3(1,0,0),d=(new THREE.Vector3).subVectors(r,s);d.y=0,d.normalize();let c=Math.acos(h.dot(d));return d.z>0&&(c=-c),function(e){let t=(new THREE.Matrix4).makeTranslation(-s.x,-l.min.y,-s.z),i=(new THREE.Matrix4).makeRotationY(-c),n=(new THREE.Matrix4).makeTranslation(a.x,0,0),o=e.clone();return o.applyMatrix4(t),o.applyMatrix4(i),o.applyMatrix4(n),o}}(i,s,o.clone());t.project=r,o.x+=new THREE.Vector3(i.x,0,i.z).distanceTo(new THREE.Vector3(s.x,0,s.z)),o.y+=s.y-i.y}return n.projectedBoundingBox.min.x=0,n.projectedBoundingBox.min.y=n.boundingBox.min.y,n.projectedBoundingBox.max.x=o.x,n.projectedBoundingBox.max.y=n.boundingBox.max.y,n}getProfile(e,t,i,n,o){let s=new Potree.ProfileRequest(e,t,i,n,o);this.profileRequests.push(s)}getVisibleExtent(){return this.visibleBounds.applyMatrix4(this.matrixWorld)}pick(e,t,i,n={}){let o=e.renderer;performance.mark("pick-start");let s=(e,t)=>void 0!==e?e:t,r=s(n.pickWindowSize,17),a=(s(n.pickOutsideClipRegion,!1),o.getSize()),l=Math.ceil(s(n.width,a.width)),h=Math.ceil(s(n.height,a.height)),d=s(n.pointSizeType,this.material.pointSizeType),c=s(n.pointSize,this.material.size),p=this.nodesOnRay(this.visibleNodes,i);if(0===p.length)return null;if(!this.pickState){let e=new THREE.Scene,t=new Potree.PointCloudMaterial;t.pointColorType=Potree.PointColorType.POINT_INDEX;let i=new THREE.WebGLRenderTarget(1,1,{minFilter:THREE.LinearFilter,magFilter:THREE.NearestFilter,format:THREE.RGBAFormat});this.pickState={renderTarget:i,material:t,scene:e}}let u=this.pickState,m=u.material;m.pointSizeType=d,m.shape=this.material.shape,m.size=c,m.uniforms.minSize.value=this.material.uniforms.minSize.value,m.uniforms.maxSize.value=this.material.uniforms.maxSize.value,m.classification=this.material.classification,n.pickClipped?(m.clipBoxes=this.material.clipBoxes,this.material.clipTask===Potree.ClipTask.HIGHLIGHT?m.clipTask=Potree.ClipTask.NONE:m.clipTask=this.material.clipTask):m.clipBoxes=[],this.updateMaterial(m,p,t,o),u.renderTarget.setSize(l,h);let g=new THREE.Vector2(n.x,n.y),f=o.getContext();f.enable(f.SCISSOR_TEST),f.scissor(parseInt(g.x-(r-1)/2),parseInt(g.y-(r-1)/2),parseInt(r),parseInt(r)),o.state.buffers.depth.setTest(m.depthTest),o.state.buffers.depth.setMask(m.depthWrite),o.state.setBlending(THREE.NoBlending);{o.setRenderTarget(u.renderTarget),f.clearColor(0,0,0,0),o.clearTarget(u.renderTarget,!0,!0,!0);let i=this.material;this.material=m,e.pRenderers.forEach(e=>{e.renderOctree(this,p,t,u.renderTarget)}),this.material=i}let E=(e,t,i)=>Math.min(Math.max(t,e),i),v=parseInt(E(g.x-(r-1)/2,0,l)),y=parseInt(E(g.y-(r-1)/2,0,h)),w=parseInt(Math.min(v+r,l)-v),T=parseInt(Math.min(y+r,h)-y),b=new Uint8Array(4*(w*T));f.readPixels(v,y,r,r,f.RGBA,f.UNSIGNED_BYTE,b),o.setRenderTarget(null),o.resetGLState(),o.setScissorTest(!1),f.disable(f.SCISSOR_TEST);let P=b,x=new Uint32Array(b.buffer),R=(Number.MAX_VALUE,[]);for(let e=0;e<r;e++)for(let t=0;t<r;t++){let i=e+t*r,o=Math.pow(e-(r-1)/2,2)+Math.pow(t-(r-1)/2,2),s=P[4*i+3];P[4*i+3]=0;let a=x[i];if((0!==s||0!==a)&&void 0!==s&&void 0!==a){let e={pIndex:a,pcIndex:s,distanceToCenter:o};n.all?R.push(e):R.length>0?o<R[0].distanceToCenter&&(R[0]=e):R.push(e)}}for(let e of R){let t={};if(!p[e.pcIndex])return null;let i=p[e.pcIndex],n=i.sceneNode,o=i.geometryNode.geometry;for(let i in o.attributes){let s=o.attributes[i];if("position"===i){let o=s.array[3*e.pIndex+0],r=s.array[3*e.pIndex+1],a=s.array[3*e.pIndex+2],l=new THREE.Vector3(o,r,a);l.applyMatrix4(n.matrixWorld),t[i]=l}}e.point=t}return performance.mark("pick-end"),performance.measure("pick","pick-start","pick-end"),n.all?R.map(e=>e.point):0===R.length?null:R[0].point}*getFittedBoxGen(e){let t=performance.now(),i=new THREE.Box3,n=(new THREE.Matrix4).getInverse(e.matrixWorld);for(let e of this.visibleNodes){if(!e.sceneNode)continue;let t=e.geometryNode.buffer,o=t.offset("position"),s=t.stride,r=new DataView(t.data),a=(new THREE.Matrix4).multiplyMatrices(n,e.sceneNode.matrixWorld),l=new THREE.Vector4;for(let e=0;e<t.numElements;e++){let t=r.getFloat32(e*s+o+0,!0),n=r.getFloat32(e*s+o+4,!0),h=r.getFloat32(e*s+o+8,!0);l.set(t,n,h,1),l.applyMatrix4(a),-.5<l.x&&l.x<.5&&-.5<l.y&&l.y<.5&&-.5<l.z&&l.z<.5&&i.expandByPoint(l)}yield}let o=i.getCenter().applyMatrix4(e.matrixWorld),s=new THREE.Object3D;s.position.copy(o),s.scale.copy(e.scale),s.rotation.copy(e.rotation);let r=(new THREE.Vector3).subVectors(i.max,i.min);s.scale.multiply(r);let a=performance.now()-t;console.log("duration: ",a),yield s}getFittedBox(e,t=1/0){let i=performance.now(),n=new THREE.Box3,o=(new THREE.Matrix4).getInverse(e.matrixWorld);for(let e of this.visibleNodes){if(!e.sceneNode||e.getLevel()>1/0)continue;let t=e.geometryNode.buffer,i=t.offset("position"),s=t.stride,r=new DataView(t.data),a=(new THREE.Matrix4).multiplyMatrices(o,e.sceneNode.matrixWorld),l=new THREE.Vector4;for(let e=0;e<t.numElements;e++){let t=r.getFloat32(e*s+i+0,!0),o=r.getFloat32(e*s+i+4,!0),h=r.getFloat32(e*s+i+8,!0);l.set(t,o,h,1),l.applyMatrix4(a),-.5<l.x&&l.x<.5&&-.5<l.y&&l.y<.5&&-.5<l.z&&l.z<.5&&n.expandByPoint(l)}}let s=n.getCenter().applyMatrix4(e.matrixWorld),r=new THREE.Object3D;r.position.copy(s),r.scale.copy(e.scale),r.rotation.copy(e.rotation);let a=(new THREE.Vector3).subVectors(n.max,n.min);r.scale.multiply(a);let l=performance.now()-i;return console.log("duration: ",l),r}get progress(){return this.visibleNodes.length/this.visibleGeometry.length}},Potree.PointCloudOctreeGeometry=class{constructor(){this.url=null,this.octreeDir=null,this.spacing=0,this.boundingBox=null,this.root=null,this.nodes=null,this.pointAttributes=null,this.hierarchyStepSize=-1,this.loader=null}},Potree.PointCloudOctreeGeometryNode=class extends Potree.PointCloudTreeNode{constructor(e,t,i){super(),this.id=Potree.PointCloudOctreeGeometryNode.IDCount++,this.name=e,this.index=parseInt(e.charAt(e.length-1)),this.pcoGeometry=t,this.geometry=null,this.boundingBox=i,this.boundingSphere=i.getBoundingSphere(),this.children={},this.numPoints=0,this.level=null,this.loaded=!1,this.oneTimeDisposeHandlers=[]}isGeometryNode(){return!0}getLevel(){return this.level}isTreeNode(){return!1}isLoaded(){return this.loaded}getBoundingSphere(){return this.boundingSphere}getBoundingBox(){return this.boundingBox}getChildren(){let e=[];for(let t=0;t<8;t++)this.children[t]&&e.push(this.children[t]);return e}getURL(){let e="",t=this.pcoGeometry.loader.version;return t.equalOrHigher("1.5")?e=this.pcoGeometry.octreeDir+"/"+this.getHierarchyPath()+"/"+this.name:t.equalOrHigher("1.4")?e=this.pcoGeometry.octreeDir+"/"+this.name:t.upTo("1.3")&&(e=this.pcoGeometry.octreeDir+"/"+this.name),e}getHierarchyPath(){let e="r/",t=this.pcoGeometry.hierarchyStepSize,i=this.name.substr(1),n=Math.floor(i.length/t);for(let o=0;o<n;o++)e+=i.substr(o*t,t)+"/";return e=e.slice(0,-1)}addChild(e){this.children[e.index]=e,e.parent=this}load(){!0===this.loading||!0===this.loaded||Potree.numNodesLoading>=Potree.maxNodesLoading||(this.loading=!0,Potree.numNodesLoading++,this.pcoGeometry.loader.version.equalOrHigher("1.5")&&this.level%this.pcoGeometry.hierarchyStepSize==0&&this.hasChildren?this.loadHierachyThenPoints():this.loadPoints())}loadPoints(){this.pcoGeometry.loader.load(this)}loadHierachyThenPoints(){let e=this;if(e.level%e.pcoGeometry.hierarchyStepSize==0){const t=e.getHierarchyPath()+"/"+e.name+".hrc";let i=e.pcoGeometry.octreeDir+"/"+t+Potree.getSignatureKeyForPath(t),n=Potree.XHRFactory.createXMLHttpRequest();n.open("GET",i,!0),n.responseType="arraybuffer",n.overrideMimeType("text/plain; charset=x-user-defined"),n.onreadystatechange=(()=>{if(4===n.readyState)if(200===n.status||0===n.status){let t=n.response;!function(e,t){let i=new DataView(t),n=[],o=i.getUint8(0),s=i.getUint32(1,!0);e.numPoints=s,n.push({children:o,numPoints:s,name:e.name});let r=[],a=5;for(;n.length>0;){let e=n.shift(),o=1;for(let t=0;t<8;t++){if(0!=(e.children&o)){let o=e.name+t,s=i.getUint8(a),l=i.getUint32(a+1,!0);n.push({children:s,numPoints:l,name:o}),r.push({children:s,numPoints:l,name:o}),a+=5}o*=2}if(a===t.byteLength)break}let l={};l[e.name]=e;let h=e.pcoGeometry;for(let e=0;e<r.length;e++){let t=r[e].name,i=r[e].numPoints,n=parseInt(t.charAt(t.length-1)),o=l[t.substring(0,t.length-1)],s=t.length-1,a=Potree.POCLoader.createChildAABB(o.boundingBox,n),d=new Potree.PointCloudOctreeGeometryNode(t,h,a);d.level=s,d.numPoints=i,d.hasChildren=r[e].children>0,d.spacing=h.spacing/Math.pow(2,s),o.addChild(d),l[t]=d}e.loadPoints()}(e,t)}else console.log("Failed to load file! HTTP status: "+n.status+", file: "+i),Potree.numNodesLoading--});try{n.send(null)}catch(e){console.log("fehler beim laden der punktwolke: "+e)}}}getNumPoints(){return this.numPoints}dispose(){if(this.geometry&&null!=this.parent){this.geometry.dispose(),this.geometry=null,this.loaded=!1;for(let e=0;e<this.oneTimeDisposeHandlers.length;e++){(0,this.oneTimeDisposeHandlers[e])()}this.oneTimeDisposeHandlers=[]}}},Potree.PointCloudOctreeGeometryNode.IDCount=0,Object.assign(Potree.PointCloudOctreeGeometryNode.prototype,THREE.EventDispatcher.prototype),Potree.PointCloudGreyhoundGeometry=function(){this.spacing=0,this.boundingBox=null,this.root=null,this.nodes=null,this.pointAttributes={},this.hierarchyStepSize=-1,this.loader=null,this.schema=null,this.baseDepth=null,this.offset=null,this.projection=null,this.boundingSphere=null,this.serverURL=null,this.normalize={color:!1,intensity:!1}},Potree.PointCloudGreyhoundGeometryNode=function(e,t,i,n,o){this.id=Potree.PointCloudGreyhoundGeometryNode.IDCount++,this.name=e,this.index=parseInt(e.charAt(e.length-1)),this.pcoGeometry=t,this.geometry=null,this.boundingBox=i,this.boundingSphere=i.getBoundingSphere(),this.scale=n,this.offset=o,this.children={},this.numPoints=0,this.level=null,this.loaded=!1,this.oneTimeDisposeHandlers=[],this.baseLoaded=!1;let s=this.boundingBox.clone();s.min.sub(this.pcoGeometry.boundingBox.getCenter()),s.max.sub(this.pcoGeometry.boundingBox.getCenter()),this.scale&&(s.min.multiplyScalar(1/this.scale),s.max.multiplyScalar(1/this.scale)),this.greyhoundBounds=s,this.greyhoundOffset=this.pcoGeometry.offset.clone().add(this.pcoGeometry.boundingBox.getSize().multiplyScalar(.5))},Potree.PointCloudGreyhoundGeometryNode.IDCount=0,Potree.PointCloudGreyhoundGeometryNode.prototype=Object.create(Potree.PointCloudTreeNode.prototype),Potree.PointCloudGreyhoundGeometryNode.prototype.isGeometryNode=function(){return!0},Potree.PointCloudGreyhoundGeometryNode.prototype.isTreeNode=function(){return!1},Potree.PointCloudGreyhoundGeometryNode.prototype.isLoaded=function(){return this.loaded},Potree.PointCloudGreyhoundGeometryNode.prototype.getBoundingSphere=function(){return this.boundingSphere},Potree.PointCloudGreyhoundGeometryNode.prototype.getBoundingBox=function(){return this.boundingBox},Potree.PointCloudGreyhoundGeometryNode.prototype.getLevel=function(){return this.level},Potree.PointCloudGreyhoundGeometryNode.prototype.getChildren=function(){let e=[];for(let t=0;t<8;++t)this.children[t]&&e.push(this.children[t]);return e},Potree.PointCloudGreyhoundGeometryNode.prototype.getURL=function(){let e=this.pcoGeometry.schema,t=this.greyhoundBounds,i=t.min.x+","+t.min.y+","+t.min.z+","+t.max.x+","+t.max.y+","+t.max.z,n=this.pcoGeometry.serverURL+"read?depthBegin="+(this.baseLoaded?this.level+this.pcoGeometry.baseDepth:0)+"&depthEnd="+(this.level+this.pcoGeometry.baseDepth+1)+"&bounds=["+i+"]&schema="+JSON.stringify(e)+"&compress=true";if(this.scale&&(n+="&scale="+this.scale),this.greyhoundOffset){let e=this.greyhoundOffset;n+="&offset=["+e.x+","+e.y+","+e.z+"]"}return this.baseLoaded||(this.baseLoaded=!0),n},Potree.PointCloudGreyhoundGeometryNode.prototype.addChild=function(e){this.children[e.index]=e,e.parent=this},Potree.PointCloudGreyhoundGeometryNode.prototype.load=function(){!0===this.loading||!0===this.loaded||Potree.numNodesLoading>=Potree.maxNodesLoading||(this.loading=!0,Potree.numNodesLoading++,this.level%this.pcoGeometry.hierarchyStepSize==0&&this.hasChildren?this.loadHierarchyThenPoints():this.loadPoints())},Potree.PointCloudGreyhoundGeometryNode.prototype.loadPoints=function(){this.pcoGeometry.loader.load(this)},Potree.PointCloudGreyhoundGeometryNode.prototype.loadHierarchyThenPoints=function(){let e=[0,2,1,3,4,6,5,7],t=function(i,n,o){let s,r;Object.keys(i).forEach(function(a){if("n"!==a){switch(a){case"swd":s=i.swd,r=n+e[0];break;case"nwd":s=i.nwd,r=n+e[1];break;case"swu":s=i.swu,r=n+e[2];break;case"nwu":s=i.nwu,r=n+e[3];break;case"sed":s=i.sed,r=n+e[4];break;case"ned":s=i.ned,r=n+e[5];break;case"seu":s=i.seu,r=n+e[6];break;case"neu":s=i.neu,r=n+e[7]}o.push({children:function(t){let i=0;return Object.keys(t).forEach(function(t){"swd"===t?i+=1<<e[0]:"nwd"===t?i+=1<<e[1]:"swu"===t?i+=1<<e[2]:"nwu"===t?i+=1<<e[3]:"sed"===t?i+=1<<e[4]:"ned"===t?i+=1<<e[5]:"seu"===t?i+=1<<e[6]:"neu"===t&&(i+=1<<e[7])}),i}(s),numPoints:s.n,name:r}),t(s,r,o)}})};if(this.level%this.pcoGeometry.hierarchyStepSize==0){let e=this.level+this.pcoGeometry.baseDepth,i=e+this.pcoGeometry.hierarchyStepSize+2,n=this.greyhoundBounds,o=n.min.x+","+n.min.y+","+n.min.z+","+n.max.x+","+n.max.y+","+n.max.z,s=this.pcoGeometry.serverURL+"hierarchy?bounds=["+o+"]&depthBegin="+e+"&depthEnd="+i;if(this.scale&&(s+="&scale="+this.scale),this.greyhoundOffset){let e=this.greyhoundOffset;s+="&offset=["+e.x+","+e.y+","+e.z+"]"}let r=Potree.XHRFactory.createXMLHttpRequest();r.open("GET",s,!0);let a=this;r.onreadystatechange=function(){if(4===r.readyState)if(200===r.status||0===r.status){let e=JSON.parse(r.responseText)||{};!function(e,i){let n=[];e.numPoints=i.n,t(i,e.name,n);let o={};o[e.name]=e;let s=e.pcoGeometry;for(let t=0;t<n.length;t++){let i=n[t].name,r=n[t].numPoints,a=parseInt(i.charAt(i.length-1)),l=o[i.substring(0,i.length-1)],h=i.length-1,d=Potree.GreyhoundLoader.createChildAABB(l.boundingBox,a),c=new Potree.PointCloudGreyhoundGeometryNode(i,s,d,e.scale,e.offset);c.level=h,c.numPoints=r,c.hasChildren=n[t].children>0,c.spacing=s.spacing/Math.pow(2,h),l.addChild(c),o[i]=c}e.loadPoints()}(a,e)}else console.log("Failed to load file! HTTP status:",r.status,"file:",s)};try{r.send(null)}catch(e){console.log("fehler beim laden der punktwolke: "+e)}}},Potree.PointCloudGreyhoundGeometryNode.prototype.getNumPoints=function(){return this.numPoints},Potree.PointCloudGreyhoundGeometryNode.prototype.dispose=function(){if(this.geometry&&null!=this.parent){this.geometry.dispose(),this.geometry=null,this.loaded=!1;for(let e=0;e<this.oneTimeDisposeHandlers.length;e++){(0,this.oneTimeDisposeHandlers[e])()}this.oneTimeDisposeHandlers=[]}},Object.assign(Potree.PointCloudGreyhoundGeometryNode.prototype,THREE.EventDispatcher.prototype),Potree.utils=class{static loadShapefileFeatures(e,t){let i=[];shapefile.open(e).then(e=>{e.read().then(function n(o){if(!o.done)return o.value&&"Feature"===o.value.type&&void 0!==o.value.geometry&&i.push(o.value),e.read().then(n);t(i)})})}static toString(e){return e instanceof THREE.Vector3?e.x.toFixed(2)+", "+e.y.toFixed(2)+", "+e.z.toFixed(2):""+e}static normalizeURL(e){let t=new URL(e);return t.protocol+"//"+t.hostname+t.pathname.replace(/\/+/g,"/")}static pathExists(e){let t=Potree.XHRFactory.createXMLHttpRequest();return t.open("GET",e,!1),t.send(null),200===t.status}static debugSphere(e,t,i,n){let o,s=new THREE.SphereGeometry(1,8,8);o=void 0!==n?new THREE.MeshBasicMaterial({color:n}):new THREE.MeshNormalMaterial;let r=new THREE.Mesh(s,o);r.position.copy(t),r.scale.set(i,i,i),e.add(r)}static debugLine(e,t,i,n){let o=new THREE.LineBasicMaterial({color:n}),s=new THREE.Geometry;s.vertices.push(t,i);let r=new THREE.Line(s,o);e.add(r)}static computeTransformedBoundingBox(e,t){let i=[new THREE.Vector3(e.min.x,e.min.y,e.min.z).applyMatrix4(t),new THREE.Vector3(e.min.x,e.min.y,e.min.z).applyMatrix4(t),new THREE.Vector3(e.max.x,e.min.y,e.min.z).applyMatrix4(t),new THREE.Vector3(e.min.x,e.max.y,e.min.z).applyMatrix4(t),new THREE.Vector3(e.min.x,e.min.y,e.max.z).applyMatrix4(t),new THREE.Vector3(e.min.x,e.max.y,e.max.z).applyMatrix4(t),new THREE.Vector3(e.max.x,e.max.y,e.min.z).applyMatrix4(t),new THREE.Vector3(e.max.x,e.min.y,e.max.z).applyMatrix4(t),new THREE.Vector3(e.max.x,e.max.y,e.max.z).applyMatrix4(t)],n=new THREE.Box3;return n.setFromPoints(i),n}static addCommas(e){let t=(e+="").split("."),i=t[0],n=t.length>1?"."+t[1]:"",o=/(\d+)(\d{3})/;for(;o.test(i);)i=i.replace(o,"$1,$2");return i+n}static removeCommas(e){return e.replace(/,/g,"")}static createWorker(e){let t=new Blob([e],{type:"application/javascript"});return new Worker(URL.createObjectURL(t))}static moveTo(e,t,i){let n=e.view,o=e.getActiveCamera(),s=TWEEN.Easing.Quartic.Out;{let e=new TWEEN.Tween(n.position).to(t,500);e.easing(s),e.start()}{let e=o.position.distanceTo(i),t=(new THREE.Vector3).addVectors(o.position,o.getWorldDirection().clone().multiplyScalar(e)),r=new TWEEN.Tween(t).to(i,500);r.easing(s),r.onUpdate(()=>{n.lookAt(t)}),r.onComplete(()=>{n.lookAt(t)}),r.start()}}static loadSkybox(e){let t=new THREE.PerspectiveCamera(75,window.innerWidth/window.innerHeight,1,1e5);t.up.set(0,0,1);let i=new THREE.Scene,n=[e+"px.jpg",e+"nx.jpg",e+"py.jpg",e+"ny.jpg",e+"pz.jpg",e+"nz.jpg"],o=[];for(let e=0;e<6;e++){let t=new THREE.MeshBasicMaterial({map:null,side:THREE.BackSide,depthTest:!1,depthWrite:!1,color:4343126});o.push(t),(new THREE.TextureLoader).load(n[e],function(e){t.map=e,t.needsUpdate=!0,t.color.setHex(16777215)},function(e){},function(e){console.log("An error happened",e)})}let s=new THREE.CubeGeometry(5e3,5e3,5e3),r=new THREE.Mesh(s,o);return i.add(r),i.rotation.x=Math.PI/2,{camera:t,scene:i}}static createGrid(e,t,i,n){let o=new THREE.LineBasicMaterial({color:n||8947848}),s=new THREE.Geometry;for(let n=0;n<=t;n++)s.vertices.push(new THREE.Vector3(-i*e/2,n*i-i*t/2,0)),s.vertices.push(new THREE.Vector3(+i*e/2,n*i-i*t/2,0));for(let n=0;n<=e;n++)s.vertices.push(new THREE.Vector3(n*i-i*e/2,-i*t/2,0)),s.vertices.push(new THREE.Vector3(n*i-i*e/2,+i*t/2,0));let r=new THREE.LineSegments(s,o,THREE.LinePieces);return r.receiveShadow=!0,r}static createBackgroundTexture(e,t){function i(e,t){return 1/(2*Math.PI)*Math.exp(-(e*e+t*t)/2)}let n=new Uint8Array(3*(e*t)),o=[1,1.5,1.7],s=i(0,0);for(let r=0;r<e;r++)for(let a=0;a<t;a++){let l=r+e*a,h=i(2*(r/e*2-1),2*(a/t*2-1))/s,d=(Math.random()+Math.random()+Math.random())/3;d=(.5*h+.5)*d*.03,d*=.4,n[3*l+0]=255*(h/15+.05+d)*o[0],n[3*l+1]=255*(h/15+.05+d)*o[1],n[3*l+2]=255*(h/15+.05+d)*o[2]}let r=new THREE.DataTexture(n,e,t,THREE.RGBFormat);return r.needsUpdate=!0,r}static get3dPointFrom2dCoords(e,t,i){const n={x:e.x/i.domElement.clientWidth*2-1,y:-e.y/i.domElement.clientHeight*2+1},o=new THREE.Raycaster;return o.setFromCamera(n,t),o.ray.origin}static get2dCoordsFrom3dPoint(e,t,i){return e.project(t),e.x=Math.round((e.x+1)*i.domElement.clientWidth/2),e.y=Math.round((1-e.y)*i.domElement.clientHeight/2),e.z=0,{x:e.x,y:e.y}}static getMousePointCloudIntersection(e,t,i,n,o={}){let s=i.renderer,r={x:e.x/s.domElement.clientWidth*2-1,y:-e.y/s.domElement.clientHeight*2+1},a={};o.pickClipped&&(a.pickClipped=o.pickClipped),a.x=e.x,a.y=s.domElement.clientHeight-e.y;let l=new THREE.Raycaster;l.setFromCamera(r,t);let h=l.ray,d=null,c=1/0,p=null,u=null;for(let e of n){let n=e.pick(i,t,h,a);if(!n)continue;let o=t.position.distanceTo(n.position);o<c&&(c=o,d=e,p=n.position,u=n)}return d?{location:p,distance:c,pointcloud:d,point:u}:null}static pixelsArrayToImage(e,t,i){let n=document.createElement("canvas");n.width=t,n.height=i;let o=n.getContext("2d");e=new e.constructor(e);for(let t=0;t<e.length;t++)e[4*t+3]=255;let s=o.createImageData(t,i);s.data.set(e),o.putImageData(s,0,0);let r=new Image;return r.src=n.toDataURL(),r}static pixelsArrayToDataUrl(e,t,i){let n=document.createElement("canvas");n.width=t,n.height=i;let o=n.getContext("2d");e=new e.constructor(e);for(let t=0;t<e.length;t++)e[4*t+3]=255;let s=o.createImageData(t,i);return s.data.set(e),o.putImageData(s,0,0),n.toDataURL()}static pixelsArrayToCanvas(e,t,i){let n=document.createElement("canvas");n.width=t,n.height=i;let o=n.getContext("2d");e=new e.constructor(e);let s=4*t;for(let t=0;t<parseInt(i/2);t++){let n=i-t-1,o=e.slice(t*s,t*s+s),r=e.slice(n*s,n*s+s);e.set(r,t*s),e.set(o,n*s)}let r=o.createImageData(t,i);return r.data.set(e),o.putImageData(r,0,0),n}static removeListeners(e,t){void 0!==e._listeners&&e._listeners[t]&&delete e._listeners[t]}static mouseToRay(e,t,i,n){let o={x:e.x/i*2-1,y:-e.y/n*2+1},s=new THREE.Vector3(o.x,o.y,.5),r=new THREE.Vector3(o.x,o.y,0);s.unproject(t),r.unproject(t);let a=(new THREE.Vector3).subVectors(s,r).normalize();return new THREE.Ray(r,a)}static projectedRadius(e,t,i,n,o){if(t instanceof THREE.OrthographicCamera)return Potree.utils.projectedRadiusOrtho(e,t.projectionMatrix,n,o);if(t instanceof THREE.PerspectiveCamera)return Potree.utils.projectedRadiusPerspective(e,t.fov*Math.PI/180,i,o);throw new Error("invalid parameters")}static projectedRadiusPerspective(e,t,i,n){let o=1/Math.tan(t/2)/i;return e*(o=o*n/2)}static projectedRadiusOrtho(e,t,i,n){let o=new THREE.Vector4(0),s=new THREE.Vector4(e);return o.applyMatrix4(t),s.applyMatrix4(t),o=new THREE.Vector3(o.x,o.y,o.z),s=new THREE.Vector3(s.x,s.y,s.z),o.x=.5*(o.x+1)*i,o.y=.5*(o.y+1)*n,s.x=.5*(s.x+1)*i,s.y=.5*(s.y+1)*n,o.distanceTo(s)}static topView(e,t){e.position.set(0,1,0),e.rotation.set(-Math.PI/2,0,0),e.zoomTo(t,1)}static frontView(e,t){e.position.set(0,0,1),e.rotation.set(0,0,0),e.zoomTo(t,1)}static leftView(e,t){e.position.set(-1,0,0),e.rotation.set(0,-Math.PI/2,0),e.zoomTo(t,1)}static rightView(e,t){e.position.set(1,0,0),e.rotation.set(0,Math.PI/2,0),e.zoomTo(t,1)}static frustumSphereIntersection(e,t){let i=e.planes,n=t.center,o=-t.radius,s=Number.MAX_VALUE;for(let e=0;e<6;e++){let t=i[e].distanceToPoint(n);if(t<o)return 0;s=Math.min(s,t)}return s>=t.radius?2:1}static generateDataTexture(e,t,i){let n=e*t,o=new Uint8Array(4*e*t),s=Math.floor(255*i.r),r=Math.floor(255*i.g),a=Math.floor(255*i.b);for(let e=0;e<n;e++)o[3*e]=s,o[3*e+1]=r,o[3*e+2]=a;let l=new THREE.DataTexture(o,e,t,THREE.RGBAFormat);return l.needsUpdate=!0,l.magFilter=THREE.NearestFilter,l}static getParameterByName(e){e=e.replace(/[[]/,"\\[").replace(/[\]]/,"\\]");let t=new RegExp("[\\?&]"+e+"=([^&#]*)").exec(document.location.search);return null===t?null:decodeURIComponent(t[1].replace(/\+/g," "))}static setParameter(e,t){e=e.replace(/[[]/,"\\[").replace(/[\]]/,"\\]");let i=new RegExp("([\\?&])("+e+"=([^&#]*))").exec(document.location.search),n=window.location.href;if(null===i)0===window.location.search.length?n+="?":n+="&",n=n+e+"="+t;else{let o=e+"="+t;n=n.replace(i[2],o)}window.history.replaceState({},"",n)}static clipboardCopy(e){let t=document.createElement("textarea");t.style.position="fixed",t.style.top=0,t.style.left=0,t.style.width="2em",t.style.height="2em",t.style.padding=0,t.style.border="none",t.style.outline="none",t.style.boxShadow="none",t.style.background="transparent",t.value=e,document.body.appendChild(t),t.select();try{document.execCommand("copy")?console.log("copied text to clipboard"):console.log("copy to clipboard failed")}catch(e){console.log("error while trying to copy to clipboard")}document.body.removeChild(t)}},Potree.utils.screenPass=new function(){this.screenScene=new THREE.Scene,this.screenQuad=new THREE.Mesh(new THREE.PlaneBufferGeometry(2,2,0)),this.screenQuad.material.depthTest=!0,this.screenQuad.material.depthWrite=!0,this.screenQuad.material.transparent=!0,this.screenScene.add(this.screenQuad),this.camera=new THREE.Camera,this.render=function(e,t,i){this.screenQuad.material=t,void 0===i?e.render(this.screenScene,this.camera):e.render(this.screenScene,this.camera,i)}},Potree.Features=function(){let e=document.createElement("canvas"),t=e.getContext("webgl")||e.getContext("experimental-webgl");if(null===t)return null;let i,n=t.getShaderPrecisionFormat(t.VERTEX_SHADER,t.HIGH_FLOAT),o=t.getShaderPrecisionFormat(t.VERTEX_SHADER,t.MEDIUM_FLOAT),s=t.getShaderPrecisionFormat(t.FRAGMENT_SHADER,t.HIGH_FLOAT),r=t.getShaderPrecisionFormat(t.FRAGMENT_SHADER,t.MEDIUM_FLOAT),a=n.precision>0&&s.precision>0,l=o.precision>0&&r.precision>0;return{SHADER_INTERPOLATION:{isSupported:function(){let e=!0;return e=(e=e&&t.getExtension("EXT_frag_depth"))&&t.getParameter(t.MAX_VARYING_VECTORS)>=8}},SHADER_SPLATS:{isSupported:function(){let e=!0;return e=(e=(e=e&&t.getExtension("EXT_frag_depth"))&&t.getExtension("OES_texture_float"))&&t.getParameter(t.MAX_VARYING_VECTORS)>=8}},SHADER_EDL:{isSupported:function(){let e=!0;return e=(e=e&&t.getExtension("OES_texture_float"))&&t.getParameter(t.MAX_VARYING_VECTORS)>=8}},precision:i=a?"highp":l?"mediump":"lowp"}}(),Potree.TextSprite=class extends THREE.Object3D{constructor(e){super();let t=new THREE.Texture;t.minFilter=THREE.LinearFilter,t.magFilter=THREE.LinearFilter;let i=new THREE.SpriteMaterial({map:t,depthTest:!1,depthWrite:!1});this.material=i,this.sprite=new THREE.Sprite(i),this.add(this.sprite),this.borderThickness=4,this.fontface="Arial",this.fontsize=28,this.borderColor={r:0,g:0,b:0,a:1},this.backgroundColor={r:255,g:255,b:255,a:1},this.textColor={r:255,g:255,b:255,a:1},this.text="",this.setText(e)}setText(e){this.text!==e&&(this.text=e,this.update())}setTextColor(e){this.textColor=e,this.update()}setBorderColor(e){this.borderColor=e,this.update()}setBackgroundColor(e){this.backgroundColor=e,this.update()}update(){let e=document.createElement("canvas"),t=e.getContext("2d");t.font="Bold "+this.fontsize+"px "+this.fontface;let i=t.measureText(this.text).width,n=10+i+2*this.borderThickness,o=1.4*this.fontsize+2*this.borderThickness;t.canvas.width=n,t.canvas.height=o,t.font="Bold "+this.fontsize+"px "+this.fontface,t.fillStyle="rgba("+this.backgroundColor.r+","+this.backgroundColor.g+","+this.backgroundColor.b+","+this.backgroundColor.a+")",t.strokeStyle="rgba("+this.borderColor.r+","+this.borderColor.g+","+this.borderColor.b+","+this.borderColor.a+")",t.lineWidth=this.borderThickness,this.roundRect(t,this.borderThickness/2,this.borderThickness/2,i+this.borderThickness+10,1.4*this.fontsize+this.borderThickness,6),t.strokeStyle="rgba(0, 0, 0, 1.0)",t.strokeText(this.text,this.borderThickness+5,this.fontsize+this.borderThickness),t.fillStyle="rgba("+this.textColor.r+","+this.textColor.g+","+this.textColor.b+","+this.textColor.a+")",t.fillText(this.text,this.borderThickness+5,this.fontsize+this.borderThickness);let s=new THREE.Texture(e);s.minFilter=THREE.LinearFilter,s.magFilter=THREE.LinearFilter,s.needsUpdate=!0,this.sprite.material.map=s,this.sprite.scale.set(.01*n,.01*o,1)}roundRect(e,t,i,n,o,s){e.beginPath(),e.moveTo(t+s,i),e.lineTo(t+n-s,i),e.quadraticCurveTo(t+n,i,t+n,i+s),e.lineTo(t+n,i+o-s),e.quadraticCurveTo(t+n,i+o,t+n-s,i+o),e.lineTo(t+s,i+o),e.quadraticCurveTo(t,i+o,t,i+o-s),e.lineTo(t,i+s),e.quadraticCurveTo(t,i,t+s,i),e.closePath(),e.fill(),e.stroke()}},Potree.PathAnimation=class{constructor(e,t,i,n,o){this.path=e,this.length=this.path.spline.getLength(),this.speed=n,this.callback=o,this.tween=null,this.startPoint=Math.max(t,0),this.endPoint=Math.min(i,this.length),this.t=0}start(e=!1){let t;this.tween&&(this.tween.stop(),this.tween=null),t=e?this.t:this.startPoint/this.length;let i=this.endPoint/this.length,n=(i-t)*this.length*1e3/this.speed,o={t:t};this.tween=new TWEEN.Tween(o).to({t:i},n),this.tween.easing(TWEEN.Easing.Linear.None),this.tween.onUpdate(e=>{this.t=o.t,this.callback(o.t)}),this.tween.onComplete(()=>{this.repeat&&this.start()}),setTimeout(()=>{this.tween.start()},0)}stop(){this.tween&&(this.tween.stop(),this.tween=null,this.t=0)}pause(){this.tween&&(this.tween.stop(),TWEEN.remove(this.tween),this.tween=null)}resume(){this.start(!0)}getPoint(e){return this.path.spline.getPoint(e)}},Potree.AnimationPath=class{constructor(e=[]){this.points=e,this.spline=new THREE.CatmullRomCurve3(e)}get(e){return this.spline.getPoint(e)}getLength(){return this.spline.getLength()}animate(e,t,i,n){let o=new Potree.PathAnimation(this,e,t,i,n);return o.start(),o}pause(){this.tween&&this.tween.stop()}resume(){this.tween&&this.tween.start()}getGeometry(){let e=new THREE.Geometry,t=0;for(let i=0;i<=1;i+=.002){let n=this.spline.getPoint(i);e.vertices[t]=new THREE.Vector3(n.x,n.y,n.z),t++}if(this.closed){let i=this.spline.getPoint(0);e.vertices[t]=new THREE.Vector3(i.x,i.y,i.z)}return e}get closed(){return this.spline.closed}set closed(e){this.spline.closed=e}},Potree.Version=function(e){this.version=e;let t=-1===e.indexOf(".")?e.length:e.indexOf(".");this.versionMajor=parseInt(e.substr(0,t)),this.versionMinor=parseInt(e.substr(t+1)),0===this.versionMinor.length&&(this.versionMinor=0)},Potree.Version.prototype.newerThan=function(e){let t=new Potree.Version(e);return this.versionMajor>t.versionMajor||this.versionMajor===t.versionMajor&&this.versionMinor>t.versionMinor},Potree.Version.prototype.equalOrHigher=function(e){let t=new Potree.Version(e);return this.versionMajor>t.versionMajor||this.versionMajor===t.versionMajor&&this.versionMinor>=t.versionMinor},Potree.Version.prototype.upTo=function(e){return!this.newerThan(e)},Potree.Measure=class extends THREE.Object3D{constructor(){super(),this.constructor.counter=void 0===this.constructor.counter?0:this.constructor.counter+1,this.name="Measure_"+this.constructor.counter,this.points=[],this._showDistances=!0,this._showCoordinates=!1,this._showArea=!1,this._closed=!0,this._showAngles=!1,this._showHeight=!1,this.maxMarkers=Number.MAX_SAFE_INTEGER,this.sphereGeometry=new THREE.SphereGeometry(.4,10,10),this.color=new THREE.Color(16711680),this.lengthUnit={code:"m"},this.spheres=[],this.edges=[],this.sphereLabels=[],this.edgeLabels=[],this.angleLabels=[],this.coordinateLabels=[];{let e=new THREE.Geometry;e.vertices.push(new THREE.Vector3,new THREE.Vector3,new THREE.Vector3,new THREE.Vector3),e.colors.push(this.color,this.color,this.color);let t=new THREE.LineDashedMaterial({color:16711680,dashSize:5,gapSize:2});t.depthTest=!1,this.heightEdge=new THREE.Line(e,t),this.heightEdge.visible=!1,this.add(this.heightEdge)}this.heightLabel=new Potree.TextSprite(""),this.heightLabel.setBorderColor({r:0,g:0,b:0,a:.8}),this.heightLabel.setBackgroundColor({r:0,g:0,b:0,a:.3}),this.heightLabel.setTextColor({r:180,g:220,b:180,a:1}),this.heightLabel.material.depthTest=!1,this.heightLabel.material.opacity=1,this.heightLabel.visible=!1,this.add(this.heightLabel),this.areaLabel=new Potree.TextSprite(""),this.areaLabel.setBorderColor({r:0,g:0,b:0,a:.8}),this.areaLabel.setBackgroundColor({r:0,g:0,b:0,a:.3}),this.areaLabel.setTextColor({r:180,g:220,b:180,a:1}),this.areaLabel.material.depthTest=!1,this.areaLabel.material.opacity=1,this.areaLabel.visible=!1,this.add(this.areaLabel)}createSphereMaterial(){return new THREE.MeshLambertMaterial({shading:THREE.SmoothShading,color:this.color,depthTest:!1,depthWrite:!1})}addMarker(e){e instanceof THREE.Vector3?e={position:e}:e instanceof Array&&(e={position:new THREE.Vector3(...e)}),this.points.push(e);let t=new THREE.Mesh(this.sphereGeometry,this.createSphereMaterial());this.add(t),this.spheres.push(t);{let e=new THREE.Geometry;e.vertices.push(new THREE.Vector3,new THREE.Vector3),e.colors.push(this.color,this.color,this.color);let t=new THREE.LineBasicMaterial({linewidth:1});t.depthTest=!1;let i=new THREE.Line(e,t);i.visible=!0,this.add(i),this.edges.push(i)}{let e=new Potree.TextSprite;e.setBorderColor({r:0,g:0,b:0,a:.8}),e.setBackgroundColor({r:0,g:0,b:0,a:.3}),e.material.depthTest=!1,e.visible=!1,this.edgeLabels.push(e),this.add(e)}{let e=new Potree.TextSprite;e.setBorderColor({r:0,g:0,b:0,a:.8}),e.setBackgroundColor({r:0,g:0,b:0,a:.3}),e.material.depthTest=!1,e.material.opacity=1,e.visible=!1,this.angleLabels.push(e),this.add(e)}{let e=new Potree.TextSprite;e.setBorderColor({r:0,g:0,b:0,a:.8}),e.setBackgroundColor({r:0,g:0,b:0,a:.3}),e.material.depthTest=!1,e.material.opacity=1,e.visible=!1,this.coordinateLabels.push(e),this.add(e)}{let e=e=>{let t=Potree.utils.getMousePointCloudIntersection(e.drag.end,e.viewer.scene.getActiveCamera(),e.viewer,e.viewer.scene.pointclouds,{pickClipped:!0});if(t){let i=this.spheres.indexOf(e.drag.object);if(-1!==i){let e=this.points[i];for(let i of Object.keys(t.point).filter(e=>"position"!==e))e[i]=t.point[i];this.setPosition(i,t.location)}}},i=e=>{let t=this.spheres.indexOf(e.drag.object);-1!==t&&this.dispatchEvent({type:"marker_dropped",measurement:this,index:t})},n=e=>e.object.material.emissive.setHex(8947848),o=e=>e.object.material.emissive.setHex(0);t.addEventListener("drag",e),t.addEventListener("drop",i),t.addEventListener("mouseover",n),t.addEventListener("mouseleave",o)}let i={type:"marker_added",measurement:this,sphere:t};this.dispatchEvent(i),this.setMarker(this.points.length-1,e)}removeMarker(e){this.points.splice(e,1),this.remove(this.spheres[e]);let t=0===e?0:e-1;this.remove(this.edges[t]),this.edges.splice(t,1),this.remove(this.edgeLabels[t]),this.edgeLabels.splice(t,1),this.coordinateLabels.splice(e,1),this.spheres.splice(e,1),this.update(),this.dispatchEvent({type:"marker_removed",measurement:this})}setMarker(e,t){this.points[e]=t;let i={type:"marker_moved",measure:this,index:e,position:t.position.clone()};this.dispatchEvent(i),this.update()}setPosition(e,t){this.points[e].position.copy(t);let i={type:"marker_moved",measure:this,index:e,position:t.clone()};this.dispatchEvent(i),this.update()}getArea(){let e=0,t=this.points.length-1;for(let i=0;i<this.points.length;i++){let n=this.points[i].position,o=this.points[t].position;e+=(o.x+n.x)*(n.y-o.y),t=i}return Math.abs(e/2)}getTotalDistance(){if(0===this.points.length)return 0;let e=0;for(let t=1;t<this.points.length;t++){let i=this.points[t-1].position,n=this.points[t].position;e+=i.distanceTo(n)}if(this.closed&&this.points.length>1){let t=this.points[0].position;e+=this.points[this.points.length-1].position.distanceTo(t)}return e}getAngleBetweenLines(e,t,i){let n=(new THREE.Vector3).subVectors(t.position,e.position),o=(new THREE.Vector3).subVectors(i.position,e.position);return n.angleTo(o)}getAngle(e){if(this.points.length<3||e>=this.points.length)return 0;let t=0===e?this.points[this.points.length-1]:this.points[e-1],i=this.points[e],n=this.points[(e+1)%this.points.length];return this.getAngleBetweenLines(i,t,n)}update(){if(0===this.points.length)return;if(1===this.points.length){let e=this.points[0].position;this.spheres[0].position.copy(e);{let t=this.coordinateLabels[0],i=e.toArray().map(e=>Potree.utils.addCommas(e.toFixed(2))).join(", ");t.setText(i),t.visible=this.showCoordinates}return}let e=this.points.length-1,t=new THREE.Vector3;for(let i=0;i<=e;i++){let e=this.points[i];t.add(e.position)}t.divideScalar(this.points.length);for(let t=0;t<=e;t++){let i=t,n=t+1>e?0:t+1,o=0===t?e:t-1,s=this.points[i],r=this.points[n],a=this.points[o],l=this.spheres[i];l.position.copy(s.position),l.material.color=this.color;{let t=this.edges[i];t.material.color=this.color,t.position.copy(s.position),t.geometry.vertices[0].set(0,0,0),t.geometry.vertices[1].copy(r.position).sub(s.position),t.geometry.verticesNeedUpdate=!0,t.geometry.computeBoundingSphere(),t.visible=i<e||this.closed}{let n=this.edgeLabels[t],o=(new THREE.Vector3).add(s.position);o.add(r.position),o=o.multiplyScalar(.5);let a=s.position.distanceTo(r.position);n.position.copy(o),n.setText(Potree.utils.addCommas(a.toFixed(2))+" "+this.lengthUnit.code),n.visible=this.showDistances&&(i<e||this.closed)&&this.points.length>=2&&a>0}{let n=this.angleLabels[t],o=this.getAngleBetweenLines(s,a,r),l=r.position.clone().sub(a.position);l.multiplyScalar(.5),l=a.position.clone().add(l).sub(s.position).normalize();let h=Math.min(s.position.distanceTo(a.position),s.position.distanceTo(r.position));h/=9;let d=s.position.clone().add(l.multiplyScalar(h));n.position.copy(d);let c=Potree.utils.addCommas((o*(180/Math.PI)).toFixed(1))+"°";n.setText(c),n.visible=this.showAngles&&(i<e||this.closed)&&this.points.length>=3&&o>0}}{let e=this.heightEdge;if(e.visible=this.showHeight,this.heightLabel.visible=this.showHeight,this.showHeight){let t=this.points.slice().sort((e,t)=>e.position.z-t.position.z),i=t[0].position.clone(),n=t[t.length-1].position.clone(),o=i.z,s=n.z,r=s-o,a=new THREE.Vector3(n.x,n.y,o),l=new THREE.Vector3(n.x,n.y,s);e.position.copy(i),e.geometry.vertices[0].set(0,0,0),e.geometry.vertices[1].copy(a).sub(i),e.geometry.vertices[2].copy(a).sub(i),e.geometry.vertices[3].copy(l).sub(i),e.geometry.verticesNeedUpdate=!0,e.geometry.computeBoundingSphere();let h=a.clone().add(l).multiplyScalar(.5);this.heightLabel.position.copy(h);let d=Potree.utils.addCommas(r.toFixed(2))+" "+this.lengthUnit.code;this.heightLabel.setText(d)}}{this.areaLabel.position.copy(t),this.areaLabel.visible=this.showArea&&this.points.length>=3;let e=Potree.utils.addCommas(this.getArea().toFixed(1))+" "+this.lengthUnit.code+"²";this.areaLabel.setText(e)}}raycast(e,t){for(let i=0;i<this.points.length;i++){this.spheres[i].raycast(e,t)}for(let i=0;i<t.length;i++){let n=t[i];n.distance=e.ray.origin.distanceTo(n.point)}t.sort(function(e,t){return e.distance-t.distance})}get showCoordinates(){return this._showCoordinates}set showCoordinates(e){this._showCoordinates=e,this.update()}get showAngles(){return this._showAngles}set showAngles(e){this._showAngles=e,this.update()}get showHeight(){return this._showHeight}set showHeight(e){this._showHeight=e,this.update()}get showArea(){return this._showArea}set showArea(e){this._showArea=e,this.update()}get closed(){return this._closed}set closed(e){this._closed=e,this.update()}get showDistances(){return this._showDistances}set showDistances(e){this._showDistances=e,this.update()}},Potree.MeasuringTool=class extends THREE.EventDispatcher{constructor(e){super(),this.viewer=e,this.renderer=e.renderer,this.addEventListener("start_inserting_measurement",e=>{this.viewer.dispatchEvent({type:"cancel_insertions"})}),this.scene=new THREE.Scene,this.scene.name="scene_measurement",this.light=new THREE.PointLight(16777215,1),this.scene.add(this.light),this.viewer.inputHandler.registerInteractiveScene(this.scene),this.onRemove=(e=>{this.scene.remove(e.measurement)}),this.onAdd=(e=>{this.scene.add(e.measurement)});for(let t of e.scene.measurements)this.onAdd({measurement:t});e.addEventListener("update",this.update.bind(this)),e.addEventListener("render.pass.perspective_overlay",this.render.bind(this)),e.addEventListener("scene_changed",this.onSceneChange.bind(this)),e.scene.addEventListener("measurement_added",this.onAdd),e.scene.addEventListener("measurement_removed",this.onRemove)}onSceneChange(e){e.oldScene&&(e.oldScene.removeEventListener("measurement_added",this.onAdd),e.oldScene.removeEventListener("measurement_removed",this.onRemove)),e.scene.addEventListener("measurement_added",this.onAdd),e.scene.addEventListener("measurement_removed",this.onRemove)}startInsertion(e={}){let t=this.viewer.renderer.domElement,i=new Potree.Measure;this.dispatchEvent({type:"start_inserting_measurement",measure:i}),i.showDistances=null===e.showDistances||e.showDistances,i.showArea=e.showArea||!1,i.showAngles=e.showAngles||!1,i.showCoordinates=e.showCoordinates||!1,i.showHeight=e.showHeight||!1,i.closed=e.closed||!1,i.maxMarkers=e.maxMarkers||1/0,i.name=e.name||"Measurement",this.scene.add(i);let n={removeLastMarker:i.maxMarkers>3,callback:null},o=e=>{e.button===THREE.MOUSE.LEFT?(i.addMarker(i.points[i.points.length-1].position.clone()),i.points.length>=i.maxMarkers&&n.callback(),this.viewer.inputHandler.startDragging(i.spheres[i.spheres.length-1])):e.button===THREE.MOUSE.RIGHT&&n.callback()};return n.callback=(e=>{n.removeLastMarker&&i.removeMarker(i.points.length-1),t.removeEventListener("mouseup",o,!0),this.viewer.removeEventListener("cancel_insertions",n.callback)}),i.maxMarkers>1&&(this.viewer.addEventListener("cancel_insertions",n.callback),t.addEventListener("mouseup",o,!0)),i.addMarker(new THREE.Vector3(0,0,0)),this.viewer.inputHandler.startDragging(i.spheres[i.spheres.length-1]),this.viewer.scene.addMeasurement(i),i}update(){let e=this.viewer.scene.getActiveCamera(),t=(this.renderer.domElement,this.viewer.scene.measurements),i=this.renderer.getSize().width,n=this.renderer.getSize().height;this.light.position.copy(e.position);for(let o of t){o.lengthUnit=this.viewer.lengthUnit,o.update();for(let t of o.spheres){let o=e.position.distanceTo(t.getWorldPosition()),s=15/Potree.utils.projectedRadius(1,e,o,i,n);t.scale.set(s,s,s)}let t=o.edgeLabels.concat(o.angleLabels);for(let o of t){let t=e.position.distanceTo(o.getWorldPosition()),s=70/Potree.utils.projectedRadius(1,e,t,i,n);o.scale.set(s,s,s)}for(let t=0;t<o.coordinateLabels.length;t++){let s=o.coordinateLabels[t],r=o.spheres[t],a=e.position.distanceTo(r.getWorldPosition()),l=r.getWorldPosition().clone().project(e);l.x=Math.round((l.x+1)*i/2),l.y=Math.round((1-l.y)*n/2),l.z=0,l.y-=30;let h=new THREE.Vector3(l.x/i*2-1,-l.y/n*2+1,.5);if(h.unproject(e),this.viewer.scene.cameraMode==Potree.CameraMode.PERSPECTIVE){let t=h.sub(e.position).normalize();h=(new THREE.Vector3).addVectors(e.position,t.multiplyScalar(a))}s.position.copy(h);let d=70/Potree.utils.projectedRadius(1,e,a,i,n);s.scale.set(d,d,d)}if(o.showHeight){let t=o.heightLabel;{let o=t.position.distanceTo(e.position),s=70/Potree.utils.projectedRadius(1,e,o,i,n);t.scale.set(s,s,s)}{let t=o.heightEdge,s=t.geometry.vertices[0].clone().add(t.position),r=t.geometry.vertices[2].clone().add(t.position),a=t.geometry.vertices[3].clone().add(t.position),l=s.clone().project(e),h=r.clone().project(e),d=a.clone().project(e),c=e=>{let t=e.clone().addScalar(1).divideScalar(2);return t.x=t.x*i,t.y=t.y*n,t.z=0,t},p=c(l),u=c(h),m=c(d),g=p.distanceTo(u),f=u.distanceTo(m);t.geometry.lineDistances=[0,g,g,g+f],t.geometry.lineDistancesNeedUpdate=!0,t.material.dashSize=10,t.material.gapSize=10}}{let t=o.areaLabel,s=t.position.distanceTo(e.position),r=70/Potree.utils.projectedRadius(1,e,s,i,n);t.scale.set(r,r,r)}}}render(){this.viewer.renderer.render(this.scene,this.viewer.scene.getActiveCamera())}},Potree.Profile=class extends THREE.Object3D{constructor(){super(),this.constructor.counter=void 0===this.constructor.counter?0:this.constructor.counter+1,this.name="Profile_"+this.constructor.counter,this.points=[],this.spheres=[],this.edges=[],this.boxes=[],this.width=1,this.height=20,this._modifiable=!0,this.sphereGeometry=new THREE.SphereGeometry(.4,10,10),this.color=new THREE.Color(16711680),this.lineColor=new THREE.Color(16711680)}createSphereMaterial(){return new THREE.MeshLambertMaterial({shading:THREE.SmoothShading,color:16711680,depthTest:!1,depthWrite:!1})}getSegments(){let e=[];for(let t=0;t<this.points.length-1;t++){let i=this.points[t].clone(),n=this.points[t+1].clone();e.push({start:i,end:n})}return e}getSegmentMatrices(){let e=this.getSegments(),t=[];for(let i of e){let{start:e,end:n}=i,o=new THREE.Object3D,s=e.clone().setZ(0).distanceTo(n.clone().setZ(0));o.scale.set(s,1e4,this.width),o.up.set(0,0,1);let r=(new THREE.Vector3).addVectors(e,n).multiplyScalar(.5),a=(new THREE.Vector3).subVectors(n,e),l=new THREE.Vector3(a.y,-a.x,0);o.position.set(0,0,0),o.lookAt(l),o.position.copy(r),o.updateMatrixWorld(),t.push(o.matrixWorld)}return t}addMarker(e){this.points.push(e);let t=new THREE.Mesh(this.sphereGeometry,this.createSphereMaterial());if(this.add(t),this.spheres.push(t),this.points.length>1){let e=new THREE.Geometry;e.vertices.push(new THREE.Vector3,new THREE.Vector3),e.colors.push(this.lineColor,this.lineColor,this.lineColor);let t=new THREE.LineBasicMaterial({vertexColors:THREE.VertexColors,linewidth:2,transparent:!0,opacity:.4});t.depthTest=!1;let i=new THREE.Line(e,t);i.visible=!1,this.add(i),this.edges.push(i);let n=new THREE.BoxGeometry(1,1,1),o=new THREE.MeshBasicMaterial({color:16711680,transparent:!0,opacity:.2}),s=new THREE.Mesh(n,o);s.visible=!1,this.add(s),this.boxes.push(s)}{let e=e=>{let t=Potree.utils.getMousePointCloudIntersection(e.drag.end,e.viewer.scene.getActiveCamera(),e.viewer,e.viewer.scene.pointclouds);if(t){let i=this.spheres.indexOf(e.drag.object);-1!==i&&this.setPosition(i,t.location)}},i=e=>{let t=this.spheres.indexOf(e.drag.object);-1!==t&&this.dispatchEvent({type:"marker_dropped",profile:this,index:t})},n=e=>e.object.material.emissive.setHex(8947848),o=e=>e.object.material.emissive.setHex(0);t.addEventListener("drag",e),t.addEventListener("drop",i),t.addEventListener("mouseover",n),t.addEventListener("mouseleave",o)}let i={type:"marker_added",profile:this,sphere:t};this.dispatchEvent(i),this.setPosition(this.points.length-1,e)}removeMarker(e){this.points.splice(e,1),this.remove(this.spheres[e]);let t=0===e?0:e-1;this.remove(this.edges[t]),this.edges.splice(t,1),this.remove(this.boxes[t]),this.boxes.splice(t,1),this.spheres.splice(e,1),this.update(),this.dispatchEvent({type:"marker_removed",profile:this})}setPosition(e,t){let i=this.points[e];i.copy(t);let n={type:"marker_moved",profile:this,index:e,position:i.clone()};this.dispatchEvent(n),this.update()}setWidth(e){this.width=e;let t={type:"width_changed",profile:this,width:e};this.dispatchEvent(t),this.update()}getWidth(){return this.width}update(){if(0===this.points.length)return;if(1===this.points.length){let e=this.points[0];return void this.spheres[0].position.copy(e)}let e=this.points[0].clone(),t=this.points[0].clone(),i=new THREE.Vector3,n=this.points.length-1;for(let o=0;o<=n;o++){let s=this.points[o],r=this.spheres[o],a=0===o?n:o-1,l=this.points[a],h=this.edges[a],d=this.edges[o],c=this.boxes[a];if(r.position.copy(s),this._modifiable?r.visible=!0:r.visible=!1,h&&(h.geometry.vertices[1].copy(s),h.geometry.verticesNeedUpdate=!0,h.geometry.computeBoundingSphere()),d&&(d.geometry.vertices[0].copy(s),d.geometry.verticesNeedUpdate=!0,d.geometry.computeBoundingSphere()),c){let e=l,t=s,i=e.clone().setZ(0).distanceTo(t.clone().setZ(0));c.scale.set(i,1e6,this.width),c.up.set(0,0,1);let n=(new THREE.Vector3).addVectors(e,t).multiplyScalar(.5),o=(new THREE.Vector3).subVectors(t,e),r=new THREE.Vector3(o.y,-o.x,0);c.position.set(0,0,0),c.lookAt(r),c.position.copy(n)}i.add(s),e.min(s),t.max(s)}i.multiplyScalar(1/this.points.length);for(let i=0;i<this.boxes.length;i++){this.boxes[i].position.z=e.z+(t.z-e.z)/2}}raycast(e,t){for(let i=0;i<this.points.length;i++){this.spheres[i].raycast(e,t)}for(let i=0;i<t.length;i++){let n=t[i];n.distance=e.ray.origin.distanceTo(n.point)}t.sort(function(e,t){return e.distance-t.distance})}get modifiable(){return this._modifiable}set modifiable(e){this._modifiable=e,this.update()}},Potree.ProfileTool=class extends THREE.EventDispatcher{constructor(e){super(),this.viewer=e,this.renderer=e.renderer,this.addEventListener("start_inserting_profile",e=>{this.viewer.dispatchEvent({type:"cancel_insertions"})}),this.scene=new THREE.Scene,this.scene.name="scene_profile",this.light=new THREE.PointLight(16777215,1),this.scene.add(this.light),this.viewer.inputHandler.registerInteractiveScene(this.scene),this.onRemove=(e=>this.scene.remove(e.profile)),this.onAdd=(e=>this.scene.add(e.profile));for(let t of e.scene.profiles)this.onAdd({profile:t});e.addEventListener("update",this.update.bind(this)),e.addEventListener("render.pass.perspective_overlay",this.render.bind(this)),e.addEventListener("scene_changed",this.onSceneChange.bind(this)),e.scene.addEventListener("profile_added",this.onAdd),e.scene.addEventListener("profile_removed",this.onRemove)}onSceneChange(e){e.oldScene&&(e.oldScene.removeEventListeners("profile_added",this.onAdd),e.oldScene.removeEventListeners("profile_removed",this.onRemove)),e.scene.addEventListener("profile_added",this.onAdd),e.scene.addEventListener("profile_removed",this.onRemove)}startInsertion(e={}){let t=this.viewer.renderer.domElement,i=new Potree.Profile;i.name=e.name||"Profile",this.dispatchEvent({type:"start_inserting_profile",profile:i}),this.scene.add(i);let n={callback:null},o=e=>{if(e.button===THREE.MOUSE.LEFT){if(i.points.length<=1){let e=this.viewer.scene.getActiveCamera(),t=e.position.distanceTo(i.points[0]),n=this.viewer.renderer.getSize(),o=10/Potree.utils.projectedRadius(1,e,t,n.width,n.height);i.setWidth(o)}i.addMarker(i.points[i.points.length-1].clone()),this.viewer.inputHandler.startDragging(i.spheres[i.spheres.length-1])}else e.button===THREE.MOUSE.RIGHT&&n.callback()};return n.callback=(e=>{i.removeMarker(i.points.length-1),t.removeEventListener("mouseup",o,!0),this.viewer.removeEventListener("cancel_insertions",n.callback)}),this.viewer.addEventListener("cancel_insertions",n.callback),t.addEventListener("mouseup",o,!0),i.addMarker(new THREE.Vector3(0,0,0)),this.viewer.inputHandler.startDragging(i.spheres[i.spheres.length-1]),this.viewer.scene.addProfile(i),i}update(){let e=this.viewer.scene.getActiveCamera(),t=this.viewer.scene.profiles,i=this.renderer.getSize().width,n=this.renderer.getSize().height;this.light.position.copy(e.position);for(let o of t)for(let t of o.spheres){let o=e.position.distanceTo(t.getWorldPosition()),s=15/Potree.utils.projectedRadius(1,e,o,i,n);t.scale.set(s,s,s)}}render(){this.viewer.renderer.render(this.scene,this.viewer.scene.getActiveCamera())}},Potree.TransformationTool=class{constructor(e){this.viewer=e,this.scene=new THREE.Scene,this.selection=[],this.pivot=new THREE.Vector3,this.dragging=!1,this.showPickVolumes=!1,this.viewer.inputHandler.registerInteractiveScene(this.scene),this.viewer.inputHandler.addEventListener("selection_changed",e=>{for(let e of this.selection)this.viewer.inputHandler.blacklist.delete(e);this.selection=e.selection;for(let e of this.selection)this.viewer.inputHandler.blacklist.add(e)});let t=15151360,i=2517479;this.activeHandle=null,this.scaleHandles={"scale.x+":{name:"scale.x+",node:new THREE.Object3D,color:t,alignment:[1,0,0]},"scale.x-":{name:"scale.x-",node:new THREE.Object3D,color:t,alignment:[-1,0,0]},"scale.y+":{name:"scale.y+",node:new THREE.Object3D,color:4497994,alignment:[0,1,0]},"scale.y-":{name:"scale.y-",node:new THREE.Object3D,color:4497994,alignment:[0,-1,0]},"scale.z+":{name:"scale.z+",node:new THREE.Object3D,color:i,alignment:[0,0,1]},"scale.z-":{name:"scale.z-",node:new THREE.Object3D,color:i,alignment:[0,0,-1]}},this.focusHandles={"focus.x+":{name:"focus.x+",node:new THREE.Object3D,color:t,alignment:[1,0,0]},"focus.x-":{name:"focus.x-",node:new THREE.Object3D,color:t,alignment:[-1,0,0]},"focus.y+":{name:"focus.y+",node:new THREE.Object3D,color:4497994,alignment:[0,1,0]},"focus.y-":{name:"focus.y-",node:new THREE.Object3D,color:4497994,alignment:[0,-1,0]},"focus.z+":{name:"focus.z+",node:new THREE.Object3D,color:i,alignment:[0,0,1]},"focus.z-":{name:"focus.z-",node:new THREE.Object3D,color:i,alignment:[0,0,-1]}},this.translationHandles={"translation.x":{name:"translation.x",node:new THREE.Object3D,color:t,alignment:[1,0,0]},"translation.y":{name:"translation.y",node:new THREE.Object3D,color:4497994,alignment:[0,1,0]},"translation.z":{name:"translation.z",node:new THREE.Object3D,color:i,alignment:[0,0,1]}},this.rotationHandles={"rotation.x":{name:"rotation.x",node:new THREE.Object3D,color:t,alignment:[1,0,0]},"rotation.y":{name:"rotation.y",node:new THREE.Object3D,color:4497994,alignment:[0,1,0]},"rotation.z":{name:"rotation.z",node:new THREE.Object3D,color:i,alignment:[0,0,1]}},this.handles=Object.assign({},this.scaleHandles,this.focusHandles,this.translationHandles,this.rotationHandles),this.pickVolumes=[],this.initializeScaleHandles(),this.initializeFocusHandles(),this.initializeTranslationHandles(),this.initializeRotationHandles();let n=new THREE.Geometry;n.vertices.push(new THREE.Vector3(-.5,-.5,.5)),n.vertices.push(new THREE.Vector3(.5,-.5,.5)),n.vertices.push(new THREE.Vector3(.5,-.5,.5)),n.vertices.push(new THREE.Vector3(.5,-.5,-.5)),n.vertices.push(new THREE.Vector3(.5,-.5,-.5)),n.vertices.push(new THREE.Vector3(-.5,-.5,-.5)),n.vertices.push(new THREE.Vector3(-.5,-.5,-.5)),n.vertices.push(new THREE.Vector3(-.5,-.5,.5)),n.vertices.push(new THREE.Vector3(-.5,.5,.5)),n.vertices.push(new THREE.Vector3(.5,.5,.5)),n.vertices.push(new THREE.Vector3(.5,.5,.5)),n.vertices.push(new THREE.Vector3(.5,.5,-.5)),n.vertices.push(new THREE.Vector3(.5,.5,-.5)),n.vertices.push(new THREE.Vector3(-.5,.5,-.5)),n.vertices.push(new THREE.Vector3(-.5,.5,-.5)),n.vertices.push(new THREE.Vector3(-.5,.5,.5)),n.vertices.push(new THREE.Vector3(-.5,-.5,.5)),n.vertices.push(new THREE.Vector3(-.5,.5,.5)),n.vertices.push(new THREE.Vector3(.5,-.5,.5)),n.vertices.push(new THREE.Vector3(.5,.5,.5)),n.vertices.push(new THREE.Vector3(.5,-.5,-.5)),n.vertices.push(new THREE.Vector3(.5,.5,-.5)),n.vertices.push(new THREE.Vector3(-.5,-.5,-.5)),n.vertices.push(new THREE.Vector3(-.5,.5,-.5)),this.frame=new THREE.LineSegments(n,new THREE.LineBasicMaterial({color:16776960})),this.scene.add(this.frame)}initializeScaleHandles(){let e=new THREE.SphereGeometry(1,32,32),t=new THREE.SphereGeometry(1,16,16);for(let i of Object.keys(this.scaleHandles)){let n=this.scaleHandles[i],o=n.node;this.scene.add(o),o.position.set(...n.alignment).multiplyScalar(.5);let s=new THREE.MeshBasicMaterial({color:n.color,opacity:.4,transparent:!0}),r=new THREE.MeshBasicMaterial({color:0,side:THREE.BackSide,opacity:.4,transparent:!0}),a=new THREE.MeshNormalMaterial({opacity:.2,transparent:!0,visible:this.showPickVolumes}),l=new THREE.Mesh(e,s);l.scale.set(1.3,1.3,1.3),l.name=`${i}.handle`,o.add(l);let h=new THREE.Mesh(e,r);h.scale.set(1.4,1.4,1.4),h.name=`${i}.outline`,l.add(h);let d=new THREE.Mesh(t,a);d.name=`${i}.pick_volume`,d.scale.set(3,3,3),l.add(d),d.handle=i,this.pickVolumes.push(d),o.setOpacity=(e=>{let t={x:s.opacity},i=new TWEEN.Tween(t).to({x:e},100);i.onUpdate(()=>{l.visible=t.x>0,d.visible=t.x>0,s.opacity=t.x,r.opacity=t.x,d.material.opacity=.5*t.x}),i.start()}),d.addEventListener("drag",e=>this.dragScaleHandle(e)),d.addEventListener("drop",e=>this.dropScaleHandle(e)),d.addEventListener("mouseover",e=>{}),d.addEventListener("click",e=>{e.consume()}),d.addEventListener("mouseleave",e=>{})}}initializeFocusHandles(){let e=new THREE.PlaneGeometry(4,4,1,1),t=new THREE.SphereGeometry(1,16,16),i=(new THREE.TextureLoader).load(`${Potree.resourcePath}/icons/eye_2.png`);for(let n of Object.keys(this.focusHandles)){let o=this.focusHandles[n],s=o.node;this.scene.add(s);let r=o.alignment;s.lookAt(new THREE.Vector3(...r));let a=.8;1===r[0]?(s.position.set(1,a,-a).multiplyScalar(.5),s.rotation.z=Math.PI/2):-1===r[0]?(s.position.set(-1,-a,-a).multiplyScalar(.5),s.rotation.z=Math.PI/2):1===r[1]?(s.position.set(-a,1,-a).multiplyScalar(.5),s.rotation.set(Math.PI/2,Math.PI,0)):-1===r[1]?(s.position.set(a,-1,-a).multiplyScalar(.5),s.rotation.set(Math.PI/2,0,0)):1===r[2]?s.position.set(a,a,1).multiplyScalar(.5):-1===r[2]&&s.position.set(-a,a,-1).multiplyScalar(.5);let l=new THREE.MeshBasicMaterial({color:o.color,opacity:0,transparent:!0,map:i}),h=new THREE.MeshNormalMaterial({transparent:!0,visible:this.showPickVolumes}),d=new THREE.Mesh(e,l);d.name=`${n}.handle`,d.scale.set(1.5,1.5,1.5),d.position.set(0,0,0),d.visible=!1,s.add(d);let c=new THREE.Mesh(t,h);c.name=`${n}.pick_volume`,c.scale.set(3,3,3),d.add(c),c.handle=n,this.pickVolumes.push(c),s.setOpacity=(e=>{let t={x:l.opacity},i=new TWEEN.Tween(t).to({x:e},100);i.onUpdate(()=>{c.visible=t.x>0,d.visible=t.x>0,l.opacity=t.x,c.material.opacity=.5*t.x}),i.start()}),c.addEventListener("drag",e=>{}),c.addEventListener("mouseup",e=>{e.consume()}),c.addEventListener("mousedown",e=>{e.consume()}),c.addEventListener("click",e=>{e.consume();let t=this.selection[0],i=Math.max(...t.scale.toArray()),n=(Math.min(...t.scale.toArray()),Math.abs(t.scale.dot(new THREE.Vector3(...o.alignment)))),s=new THREE.Vector3(...o.alignment).multiplyScalar(2*i/n);s.applyMatrix4(t.matrixWorld);let r=s,a=t.getWorldPosition();Potree.utils.moveTo(this.viewer.scene,r,a)}),c.addEventListener("mouseover",e=>{}),c.addEventListener("mouseleave",e=>{})}}initializeTranslationHandles(){let e=new THREE.BoxGeometry(1,1,1);for(let t of Object.keys(this.translationHandles)){let i=this.handles[t],n=i.node;this.scene.add(n);let o=new THREE.MeshBasicMaterial({color:i.color,opacity:.4,transparent:!0}),s=new THREE.MeshBasicMaterial({color:0,side:THREE.BackSide,opacity:.4,transparent:!0}),r=new THREE.MeshNormalMaterial({opacity:.2,transparent:!0,visible:this.showPickVolumes}),a=new THREE.Mesh(e,o);a.name=`${t}.handle`,a.scale.set(.2,.2,40),a.lookAt(new THREE.Vector3(...i.alignment)),a.renderOrder=10,n.add(a),i.translateNode=a;let l=new THREE.Mesh(e,s);l.name=`${t}.outline`,l.scale.set(3,3,1.03),l.renderOrder=0,a.add(l);let h=new THREE.Mesh(e,r);h.name=`${t}.pick_volume`,h.scale.set(12,12,1.1),h.handle=t,a.add(h),this.pickVolumes.push(h),n.setOpacity=(e=>{let t={x:o.opacity},i=new TWEEN.Tween(t).to({x:e},100);i.onUpdate(()=>{a.visible=t.x>0,h.visible=t.x>0,o.opacity=t.x,s.opacity=t.x,r.opacity=.5*t.x}),i.start()}),h.addEventListener("drag",e=>{this.dragTranslationHandle(e)}),h.addEventListener("drop",e=>{this.dropTranslationHandle(e)})}}initializeRotationHandles(){let e=new THREE.TorusGeometry(1,.0075,8,64,Math.PI/2),t=new THREE.TorusGeometry(1,.02,8,64,Math.PI/2),i=new THREE.TorusGeometry(1,.05,6,4,Math.PI/2);for(let n of Object.keys(this.rotationHandles)){let o=this.handles[n],s=o.node;this.scene.add(s);let r=new THREE.MeshBasicMaterial({color:o.color,opacity:.4,transparent:!0}),a=new THREE.MeshBasicMaterial({color:0,side:THREE.BackSide,opacity:.4,transparent:!0}),l=new THREE.MeshNormalMaterial({opacity:.2,transparent:!0,visible:this.showPickVolumes}),h=new THREE.Mesh(e,r);h.name=`${n}.handle`,h.scale.set(20,20,20),h.lookAt(new THREE.Vector3(...o.alignment)),s.add(h),o.translateNode=h;let d=new THREE.Mesh(t,a);d.name=`${n}.outline`,d.scale.set(1,1,1),d.renderOrder=0,h.add(d);let c=new THREE.Mesh(i,l);c.name=`${n}.pick_volume`,c.scale.set(1,1,1),c.handle=n,h.add(c),this.pickVolumes.push(c),s.setOpacity=(e=>{let t={x:r.opacity},i=new TWEEN.Tween(t).to({x:e},100);i.onUpdate(()=>{h.visible=t.x>0,c.visible=t.x>0,r.opacity=t.x,a.opacity=t.x,l.opacity=.5*t.x}),i.start()}),c.addEventListener("drag",e=>{this.dragRotationHandle(e)}),c.addEventListener("drop",e=>{this.dropRotationHandle(e)})}}dragRotationHandle(e){let t=e.drag,i=this.activeHandle,n=this.viewer.scene.getActiveCamera();if(!i)return;let o=new THREE.Vector3(...i.alignment),s=new THREE.Vector3;if(s.copy(new THREE.Vector4(...o.toArray(),0).applyMatrix4(i.node.matrixWorld)),s.normalize(),t.intersectionStart)i=t.handle;else{t.intersectionStart=t.location,t.objectStart=t.object.getWorldPosition(),t.handle=i;let e=(new THREE.Plane).setFromNormalAndCoplanarPoint(s,t.intersectionStart);t.dragPlane=e,t.pivot=t.intersectionStart}this.dragging=!0;let r=t.end,a=this.viewer.renderer.domElement,l=Potree.utils.mouseToRay(r,n,a.clientWidth,a.clientHeight).intersectPlane(t.dragPlane);if(l){let e=this.scene.getWorldPosition(),n=l,o=t.pivot.clone().sub(e).normalize(),r=n.clone().sub(e).normalize(),a=Math.acos(o.dot(r));if(a*=Math.sign(o.cross(r).dot(s)),Number.isNaN(a))return;let h=new THREE.Vector3(...i.alignment);for(let e of this.selection)e.rotateOnAxis(h,a),e.dispatchEvent({type:"orientation_changed",object:e});t.pivot=l}}dropRotationHandle(e){this.dragging=!1,this.setActiveHandle(null)}dragTranslationHandle(e){let t=e.drag,i=this.activeHandle,n=this.viewer.scene.getActiveCamera();if(!t.intersectionStart&&i){t.intersectionStart=t.location,t.objectStart=t.object.getWorldPosition();let e=t.intersectionStart,o=new THREE.Vector4(...i.alignment,0).applyMatrix4(this.scene.matrixWorld),s=(new THREE.Vector3).addVectors(e,o),r=new THREE.Line3(e.clone(),s.clone());t.line=r;let a=r.closestPointToPoint(n.position,!1),l=(new THREE.Vector3).subVectors(n.position,a),h=(new THREE.Plane).setFromNormalAndCoplanarPoint(l,t.intersectionStart);t.dragPlane=h,t.pivot=t.intersectionStart}else i=t.handle;this.dragging=!0;{let e=t.end,i=this.viewer.renderer.domElement,o=Potree.utils.mouseToRay(e,n,i.clientWidth,i.clientHeight).intersectPlane(t.dragPlane);if(o){let e=t.line.closestPointToPoint(o,!1),i=(new THREE.Vector3).subVectors(e,t.pivot);for(let e of this.selection)e.position.add(i),e.dispatchEvent({type:"position_changed",object:e});t.pivot=t.pivot.add(i)}}}dropTranslationHandle(e){this.dragging=!1,this.setActiveHandle(null)}dropScaleHandle(e){this.dragging=!1,this.setActiveHandle(null)}dragScaleHandle(e){let t=e.drag,i=this.activeHandle,n=this.viewer.scene.getActiveCamera();if(t.intersectionStart)i=t.handle;else{t.intersectionStart=t.location,t.objectStart=t.object.getWorldPosition(),t.handle=i;let e=t.intersectionStart,o=new THREE.Vector4(...i.alignment,0).applyMatrix4(this.scene.matrixWorld),s=(new THREE.Vector3).addVectors(e,o),r=new THREE.Line3(e.clone(),s.clone());t.line=r;let a=r.closestPointToPoint(n.position,!1),l=(new THREE.Vector3).subVectors(n.position,a),h=(new THREE.Plane).setFromNormalAndCoplanarPoint(l,t.intersectionStart);t.dragPlane=h,t.pivot=t.intersectionStart}this.dragging=!0;{let e=t.end,o=this.viewer.renderer.domElement,s=Potree.utils.mouseToRay(e,n,o.clientWidth,o.clientHeight).intersectPlane(t.dragPlane);if(s){let e=t.line.closestPointToPoint(s,!1),n=i.alignment.reduce((e,t)=>e+t,0),o=(new THREE.Matrix4).getInverse(this.selection[0].matrixWorld),r=e.clone().applyMatrix4(o),a=t.pivot.clone().applyMatrix4(o),l=(new THREE.Vector3).subVectors(r,a).clone().normalize();0===e.distanceTo(t.pivot)&&l.set(0,0,0);let h=l.dot(new THREE.Vector3(...i.alignment)),d=(new THREE.Vector3).subVectors(e,t.pivot),c=new THREE.Vector3(...i.alignment).multiplyScalar(d.length()*n*h),p=d.clone().multiplyScalar(.5);for(let e of this.selection)e.scale.add(c),e.scale.x=Math.max(.1,e.scale.x),e.scale.y=Math.max(.1,e.scale.y),e.scale.z=Math.max(.1,e.scale.z),e.position.add(p),e.dispatchEvent({type:"position_changed",object:e}),e.dispatchEvent({type:"scale_changed",object:e});t.pivot.copy(e)}}}setActiveHandle(e){if(!this.dragging&&this.activeHandle!==e){if(this.activeHandle=e,null===e)for(let e of Object.keys(this.handles)){this.handles[e].node.setOpacity(0)}for(let e of Object.keys(this.focusHandles)){let t=this.focusHandles[e];this.activeHandle===t?t.node.setOpacity(1):t.node.setOpacity(.4)}for(let e of Object.keys(this.translationHandles)){let t=this.translationHandles[e];this.activeHandle===t?t.node.setOpacity(1):t.node.setOpacity(.4)}for(let e of Object.keys(this.rotationHandles)){this.rotationHandles[e].node.setOpacity(.4)}for(let e of Object.keys(this.scaleHandles)){let t=this.scaleHandles[e];if(this.activeHandle===t){t.node.setOpacity(1),this.focusHandles[t.name.replace("scale","focus")].node.setOpacity(.4);for(let e of Object.keys(this.translationHandles)){this.translationHandles[e].node.setOpacity(.4)}}else t.node.setOpacity(.4)}e&&e.node.setOpacity(1)}}update(){if(1===this.selection.length){this.scene.visible=!0,this.scene.updateMatrix(),this.scene.updateMatrixWorld();let e=this.selection[0],t=(e.matrixWorld,this.viewer.scene.getActiveCamera()),i=this.viewer.renderer.domElement,n=this.viewer.inputHandler.mouse,o=e.boundingBox.getCenter().clone().applyMatrix4(e.matrixWorld);this.scene.scale.copy(e.boundingBox.getSize().multiply(e.scale)),this.scene.position.copy(o),this.scene.rotation.copy(e.rotation),this.scene.updateMatrixWorld();for(let e of Object.keys(this.handles)){let n=this.handles[e].node,o=n.getWorldPosition().distanceTo(t.position),s=Potree.utils.projectedRadius(1,t,o,i.clientWidth,i.clientHeight),r=n.parent.getWorldScale(),a=7/s,l=new THREE.Vector3(a,a,a).divide(r),h=(new THREE.Matrix4).makeRotationFromEuler(n.rotation),d=(new THREE.Matrix4).getInverse(h);l.applyMatrix4(d),l.x=Math.abs(l.x),l.y=Math.abs(l.y),l.z=Math.abs(l.z),n.scale.copy(l)}if(!this.dragging){let e=this.scene.matrixWorld,i=(new THREE.Matrix4).getInverse(e),n=t.getWorldPosition().applyMatrix4(i),o=this.rotationHandles["rotation.x"].node.rotation,s=this.rotationHandles["rotation.y"].node.rotation,r=this.rotationHandles["rotation.z"].node.rotation;o.order="ZYX",s.order="ZYX";let a=n.z>0,l=!a,h=Math.PI/2;a?n.x>0&&n.y>0?(o.x=1*h,s.y=3*h,r.z=0*h):n.x<0&&n.y>0?(o.x=1*h,s.y=2*h,r.z=1*h):n.x<0&&n.y<0?(o.x=2*h,s.y=2*h,r.z=2*h):n.x>0&&n.y<0&&(o.x=2*h,s.y=3*h,r.z=3*h):l&&(n.x>0&&n.y>0?(o.x=0*h,s.y=0*h,r.z=0*h):n.x<0&&n.y>0?(o.x=0*h,s.y=1*h,r.z=1*h):n.x<0&&n.y<0?(o.x=3*h,s.y=1*h,r.z=2*h):n.x>0&&n.y<0&&(o.x=3*h,s.y=0*h,r.z=3*h))}{let e=Potree.utils.mouseToRay(n,t,i.clientWidth,i.clientHeight),o=new THREE.Raycaster(e.origin,e.direction).intersectObjects(this.pickVolumes.filter(e=>e.visible),!0);if(o.length>0){let e=o[0].object.handle;this.setActiveHandle(this.handles[e])}else this.setActiveHandle(null)}for(let e of Object.keys(this.scaleHandles)){let t=this.handles[e];t.node,t.alignment}{let t=t=>{return new THREE.Vector3(...t).applyMatrix4(e.matrixWorld).distanceTo(e.getWorldPosition())};new THREE.Vector3(t([1,0,0]),t([0,1,0]),t([0,0,1]))}}else this.scene.visible=!1}},Potree.Volume=class extends THREE.Object3D{constructor(e={}){super(),this.constructor.counter=void 0===this.constructor.counter?0:this.constructor.counter+1,this.name="volume_"+this.constructor.counter,this._clip=e.clip||!1,this._visible=!0,this.showVolumeLabel=!0,this._modifiable=e.modifiable||!0;let t=new THREE.BoxGeometry(1,1,1);t.computeBoundingBox();let i=new THREE.Geometry;i.vertices.push(new THREE.Vector3(-.5,-.5,.5)),i.vertices.push(new THREE.Vector3(.5,-.5,.5)),i.vertices.push(new THREE.Vector3(.5,-.5,.5)),i.vertices.push(new THREE.Vector3(.5,-.5,-.5)),i.vertices.push(new THREE.Vector3(.5,-.5,-.5)),i.vertices.push(new THREE.Vector3(-.5,-.5,-.5)),i.vertices.push(new THREE.Vector3(-.5,-.5,-.5)),i.vertices.push(new THREE.Vector3(-.5,-.5,.5)),i.vertices.push(new THREE.Vector3(-.5,.5,.5)),i.vertices.push(new THREE.Vector3(.5,.5,.5)),i.vertices.push(new THREE.Vector3(.5,.5,.5)),i.vertices.push(new THREE.Vector3(.5,.5,-.5)),i.vertices.push(new THREE.Vector3(.5,.5,-.5)),i.vertices.push(new THREE.Vector3(-.5,.5,-.5)),i.vertices.push(new THREE.Vector3(-.5,.5,-.5)),i.vertices.push(new THREE.Vector3(-.5,.5,.5)),i.vertices.push(new THREE.Vector3(-.5,-.5,.5)),i.vertices.push(new THREE.Vector3(-.5,.5,.5)),i.vertices.push(new THREE.Vector3(.5,-.5,.5)),i.vertices.push(new THREE.Vector3(.5,.5,.5)),i.vertices.push(new THREE.Vector3(.5,-.5,-.5)),i.vertices.push(new THREE.Vector3(.5,.5,-.5)),i.vertices.push(new THREE.Vector3(-.5,-.5,-.5)),i.vertices.push(new THREE.Vector3(-.5,.5,-.5)),this.dimension=new THREE.Vector3(1,1,1),this.material=new THREE.MeshBasicMaterial({color:65280,transparent:!0,opacity:.3,depthTest:!0,depthWrite:!1}),this.box=new THREE.Mesh(t,this.material),this.box.geometry.computeBoundingBox(),this.boundingBox=this.box.geometry.boundingBox,this.add(this.box),this.frame=new THREE.LineSegments(i,new THREE.LineBasicMaterial({color:0})),this.add(this.frame),this.label=new Potree.TextSprite("0"),this.label.setBorderColor({r:0,g:255,b:0,a:0}),this.label.setBackgroundColor({r:0,g:255,b:0,a:0}),this.label.material.depthTest=!1,this.label.material.depthWrite=!1,this.label.material.transparent=!0,this.label.position.y-=.5,this.add(this.label),this.label.updateMatrixWorld=(()=>{let e=new THREE.Vector3;e.setFromMatrixPosition(this.matrixWorld),this.label.position.copy(e),this.label.updateMatrix(),this.label.matrixWorld.copy(this.label.matrix),this.label.matrixWorldNeedsUpdate=!1;for(let e=0,t=this.label.children.length;e<t;e++)this.label.children[e].updateMatrixWorld(!0)}),this.addEventListener("select",e=>{}),this.addEventListener("deselect",e=>{}),this.update()}get visible(){return this._visible}set visible(e){this._visible!==e&&(this._visible=e,this.dispatchEvent({type:"visibility_changed",object:this}))}getVolume(){return Math.abs(this.scale.x*this.scale.y*this.scale.z)}update(){this.boundingBox=this.box.geometry.boundingBox,this.boundingSphere=this.boundingBox.getBoundingSphere(),this._clip?(this.box.visible=!1,this.label.visible=!1):(this.box.visible=!0,this.label.visible=this.showVolumeLabel)}raycast(e,t){let i=[];if(this.box.raycast(e,i),i.length>0){let e=i[0];t.push({distance:e.distance,object:this,point:e.point.clone()})}}get clip(){return this._clip}set clip(e){this._clip!==e&&(this._clip=e,this.update(),this.dispatchEvent({type:"clip_changed",object:this}))}get modifieable(){return this._modifiable}set modifieable(e){this._modifiable=e,this.update()}},Potree.VolumeTool=class extends THREE.EventDispatcher{constructor(e){super(),this.viewer=e,this.renderer=e.renderer,this.addEventListener("start_inserting_volume",e=>{this.viewer.dispatchEvent({type:"cancel_insertions"})}),this.scene=new THREE.Scene,this.scene.name="scene_volume",this.viewer.inputHandler.registerInteractiveScene(this.scene),this.onRemove=(e=>{this.scene.remove(e.volume)}),this.onAdd=(e=>{this.scene.add(e.volume)});for(let t of e.scene.volumes)this.onAdd({volume:t});this.viewer.inputHandler.addEventListener("delete",e=>{e.selection.filter(e=>e instanceof Potree.Volume).forEach(e=>this.viewer.scene.removeVolume(e))}),e.addEventListener("update",this.update.bind(this)),e.addEventListener("render.pass.scene",e=>this.render(e)),e.addEventListener("scene_changed",this.onSceneChange.bind(this)),e.scene.addEventListener("volume_added",this.onAdd),e.scene.addEventListener("volume_removed",this.onRemove)}onSceneChange(e){e.oldScene&&(e.oldScene.removeEventListeners("volume_added",this.onAdd),e.oldScene.removeEventListeners("volume_removed",this.onRemove)),e.scene.addEventListener("volume_added",this.onAdd),e.scene.addEventListener("volume_removed",this.onRemove)}startInsertion(e={}){let t=new Potree.Volume;t.clip=e.clip||!1,t.name=e.name||"Volume",this.dispatchEvent({type:"start_inserting_volume",volume:t}),this.viewer.scene.addVolume(t),this.scene.add(t);let i={callback:null},n=e=>{let i=this.viewer.scene.getActiveCamera(),n=Potree.utils.getMousePointCloudIntersection(e.drag.end,this.viewer.scene.getActiveCamera(),this.viewer,this.viewer.scene.pointclouds);if(n){t.position.copy(n.location);let e=t.getWorldPosition().applyMatrix4(i.matrixWorldInverse),o=Math.abs(e.z/5);t.scale.set(o,o,o)}},o=e=>{t.removeEventListener("drag",n),t.removeEventListener("drop",o),i.callback()};return i.callback=(e=>{t.removeEventListener("drag",n),t.removeEventListener("drop",o),this.viewer.removeEventListener("cancel_insertions",i.callback)}),t.addEventListener("drag",n),t.addEventListener("drop",o),this.viewer.addEventListener("cancel_insertions",i.callback),this.viewer.inputHandler.startDragging(t),t}update(){if(!this.viewer.scene)return;let e=this.viewer.scene.getActiveCamera(),t=this.viewer.renderer.getSize().width,i=this.viewer.renderer.getSize().height,n=this.viewer.scene.volumes;for(let o of n){let n=o.label;{let o=n.position.distanceTo(e.position),s=70/Potree.utils.projectedRadius(1,e,o,t,i);n.scale.set(s,s,s)}let s=Potree.utils.addCommas(o.getVolume().toFixed(3))+"³";n.setText(s)}}render(e){this.viewer.renderer.render(this.scene,this.viewer.scene.getActiveCamera(),e.renderTarget)}},Potree.ClippingTool=class extends THREE.EventDispatcher{constructor(e){super(),this.viewer=e,this.maxPolygonVertices=8,this.addEventListener("start_inserting_clipping_volume",e=>{this.viewer.dispatchEvent({type:"cancel_insertions"})}),this.sceneMarker=new THREE.Scene,this.sceneVolume=new THREE.Scene,this.sceneVolume.name="scene_clip_volume",this.viewer.inputHandler.registerInteractiveScene(this.sceneVolume),this.onRemove=(e=>{this.sceneVolume.remove(e.volume)}),this.onAdd=(e=>{this.sceneVolume.add(e.volume)}),this.viewer.inputHandler.addEventListener("delete",e=>{e.selection.filter(e=>e instanceof Potree.ClipVolume).forEach(e=>this.viewer.scene.removeClipVolume(e)),e.selection.filter(e=>e instanceof Potree.PolygonClipVolume).forEach(e=>this.viewer.scene.removePolygonClipVolume(e))})}setScene(e){this.scene!==e&&(this.scene&&(this.scene.removeEventListeners("clip_volume_added",this.onAdd),this.scene.removeEventListeners("clip_volume_removed",this.onRemove),this.scene.removeEventListeners("polygon_clip_volume_added",this.onAdd),this.scene.removeEventListeners("polygon_clip_volume_removed",this.onRemove)),this.scene=e,this.scene.addEventListener("clip_volume_added",this.onAdd),this.scene.addEventListener("clip_volume_removed",this.onRemove),this.scene.addEventListener("polygon_clip_volume_added",this.onAdd),this.scene.addEventListener("polygon_clip_volume_removed",this.onRemove))}startInsertion(e={}){if(!(e.type||null))return null;let t=this.viewer.renderer.domElement,i=this.viewer.renderer.getSize(),n=$(`\n\t\t<svg height="${i.height}" width="${i.width}" style="position:absolute; pointer-events: none">\n\n\t\t\t<defs>\n\t\t\t\t <marker id="diamond" markerWidth="24" markerHeight="24" refX="12" refY="12"\n\t\t\t\t\t\tmarkerUnits="userSpaceOnUse">\n\t\t\t\t\t<circle cx="12" cy="12" r="6" fill="white" stroke="black" stroke-width="3"/>\n\t\t\t\t</marker>\n\t\t\t</defs>\n\n\t\t\t<polyline fill="none" stroke="black" \n\t\t\t\tstyle="stroke:rgb(0, 0, 0);\n\t\t\t\tstroke-width:6;"\n\t\t\t\tstroke-dasharray="9, 6"\n\t\t\t\tstroke-dashoffset="2"\n\t\t\t\t/>\n\n\t\t\t<polyline fill="none" stroke="black" \n\t\t\t\tstyle="stroke:rgb(255, 255, 255);\n\t\t\t\tstroke-width:2;"\n\t\t\t\tstroke-dasharray="5, 10"\n\t\t\t\tmarker-start="url(#diamond)" \n\t\t\t\tmarker-mid="url(#diamond)" \n\t\t\t\tmarker-end="url(#diamond)" \n\t\t\t\t/>\n\t\t</svg>`);$(t.parentElement).append(n);let o=new Potree.PolygonClipVolume(this.viewer.scene.getActiveCamera().clone());this.dispatchEvent({type:"start_inserting_clipping_volume"}),this.viewer.scene.addPolygonClipVolume(o),this.sceneMarker.add(o);let s={callback:null},r=e=>{e.button===THREE.MOUSE.LEFT?(o.addMarker(),n.find("polyline").each((t,i)=>{let o=n[0].createSVGPoint();o.x=e.offsetX,o.y=e.offsetY;i.points.appendItem(o)}),o.markers.length>this.maxPolygonVertices&&s.callback(),this.viewer.inputHandler.startDragging(o.markers[o.markers.length-1])):e.button===THREE.MOUSE.RIGHT&&s.callback(e)};return s.callback=(e=>{n.remove(),o.markers.length>3?(o.removeLastMarker(),o.initialized=!0):this.viewer.scene.removePolygonClipVolume(o),this.viewer.renderer.domElement.removeEventListener("mouseup",r,!0),this.viewer.removeEventListener("cancel_insertions",s.callback),this.viewer.inputHandler.enabled=!0}),this.viewer.addEventListener("cancel_insertions",s.callback),this.viewer.renderer.domElement.addEventListener("mouseup",r,!0),this.viewer.inputHandler.enabled=!1,o.addMarker(),this.viewer.inputHandler.startDragging(o.markers[o.markers.length-1]),o}update(){}},Potree.ScreenBoxSelectTool=class extends THREE.EventDispatcher{constructor(e){super(),this.viewer=e,this.scene=new THREE.Scene,e.addEventListener("update",this.update.bind(this)),e.addEventListener("render.pass.perspective_overlay",this.render.bind(this)),e.addEventListener("scene_changed",this.onSceneChange.bind(this))}onSceneChange(e){console.log("scene changed")}startInsertion(){let e=this.viewer.renderer.domElement,t=new Potree.Volume;t.position.set(12345,12345,12345),t.showVolumeLabel=!1,t.visible=!1,t.update(),this.viewer.scene.addVolume(t),this.importance=10;let i=$('<div style="position: absolute; border: 2px solid white; pointer-events: none; border-style:dashed"></div>');$(e.parentElement).append(i),i.css("right","10px"),i.css("bottom","10px");let n=e=>{t.visible=!0;let n=e.drag.start,o=e.drag.end,s=new THREE.Box2;s.expandByPoint(n),s.expandByPoint(o),i.css("left",`${s.min.x}px`),i.css("top",`${s.min.y}px`),i.css("width",`${s.max.x-s.min.x}px`),i.css("height",`${s.max.y-s.min.y}px`);let r=e.viewer.scene.getActiveCamera(),a=new THREE.Vector2(e.viewer.renderer.getSize().width,e.viewer.renderer.getSize().height),l=new THREE.Vector2(r.right-r.left,r.top-r.bottom),h=(new THREE.Vector2).addVectors(e.drag.end,e.drag.start).multiplyScalar(.5),d=Potree.utils.mouseToRay(h,r,a.width,a.height),c=(new THREE.Vector2).subVectors(e.drag.end,e.drag.start);c.divide(a).multiply(l),t.position.copy(d.origin),t.up.copy(r.up),t.rotation.copy(r.rotation),t.scale.set(c.x,c.y,1e5),e.consume()},o=e=>{this.importance=0,$(i).remove(),this.viewer.inputHandler.deselectAll(),this.viewer.inputHandler.toggleSelection(t);let s=e.viewer.scene.getActiveCamera(),r=new THREE.Vector2(e.viewer.renderer.getSize().width,e.viewer.renderer.getSize().height),a=(new THREE.Vector2).addVectors(e.drag.end,e.drag.start).multiplyScalar(.5),l=Potree.utils.mouseToRay(a,s,r.width,r.height);new THREE.Line3(l.origin,(new THREE.Vector3).addVectors(l.origin,l.direction));this.removeEventListener("drag",n),this.removeEventListener("drop",o);let h=[],d=[];for(let e of this.viewer.scene.pointclouds){if(!e.visible)continue;let i=s.clone();i.left=-t.scale.x/2,i.right=+t.scale.x/2,i.top=+t.scale.y/2,i.bottom=-t.scale.y/2,i.near=-t.scale.z/2,i.far=+t.scale.z/2,i.rotation.copy(t.rotation),i.position.copy(t.position),i.updateMatrix(),i.updateMatrixWorld(),i.updateProjectionMatrix(),i.matrixWorldInverse.getInverse(i.matrixWorld);let n=new THREE.Ray(i.getWorldPosition(),i.getWorldDirection()),o=new THREE.Ray(n.origin.clone().add(n.direction.clone().multiplyScalar(t.scale.z)),n.direction.clone().multiplyScalar(-1)),r={width:8,height:8,pickWindowSize:8,all:!0,pickClipped:!0,pointSizeType:Potree.PointSizeType.FIXED,pointSize:1},a=e.pick(viewer,i,n,r);i.rotateX(Math.PI),i.updateMatrix(),i.updateMatrixWorld(),i.updateProjectionMatrix(),i.matrixWorldInverse.getInverse(i.matrixWorld);let l=e.pick(viewer,i,o,r);h.push(...a),d.push(...l)}if(h.length>0&&d.length>0){let e=new THREE.Line3(l.origin,(new THREE.Vector3).addVectors(l.origin,l.direction)),i=h.map(t=>e.closestPointToPoint(t.position,!1)).sort((e,t)=>l.origin.distanceTo(e)-l.origin.distanceTo(t))[0],n=d.map(t=>e.closestPointToPoint(t.position,!1)).sort((e,t)=>l.origin.distanceTo(t)-l.origin.distanceTo(e))[0],o=i.distanceTo(n),s=(new THREE.Vector3).addVectors(i,n).multiplyScalar(.5);t.scale.z=1.1*o,t.position.copy(s)}t.clip=!0};return this.addEventListener("drag",n),this.addEventListener("drop",o),viewer.inputHandler.addInputListener(this),t}update(e){}render(){this.viewer.renderer.render(this.scene,this.viewer.scene.getActiveCamera())}},Potree.ClipVolume=class extends THREE.Object3D{constructor(e){super(),this.constructor.counter=void 0===this.constructor.counter?0:this.constructor.counter+1,this.name="clip_volume_"+this.constructor.counter;let t=e.alpha||0,i=e.beta||0,n=e.gamma||0;this.rotation.x=t,this.rotation.y=i,this.rotation.z=n,this.clipOffset=.001,this.clipRotOffset=1;let o=new THREE.BoxGeometry(1,1,1);o.computeBoundingBox();let s=new THREE.Geometry;s.vertices.push(new THREE.Vector3(-.5,-.5,.5)),s.vertices.push(new THREE.Vector3(.5,-.5,.5)),s.vertices.push(new THREE.Vector3(.5,-.5,.5)),s.vertices.push(new THREE.Vector3(.5,-.5,-.5)),s.vertices.push(new THREE.Vector3(.5,-.5,-.5)),s.vertices.push(new THREE.Vector3(-.5,-.5,-.5)),s.vertices.push(new THREE.Vector3(-.5,-.5,-.5)),s.vertices.push(new THREE.Vector3(-.5,-.5,.5)),s.vertices.push(new THREE.Vector3(-.5,.5,.5)),s.vertices.push(new THREE.Vector3(.5,.5,.5)),s.vertices.push(new THREE.Vector3(.5,.5,.5)),s.vertices.push(new THREE.Vector3(.5,.5,-.5)),s.vertices.push(new THREE.Vector3(.5,.5,-.5)),s.vertices.push(new THREE.Vector3(-.5,.5,-.5)),s.vertices.push(new THREE.Vector3(-.5,.5,-.5)),s.vertices.push(new THREE.Vector3(-.5,.5,.5)),s.vertices.push(new THREE.Vector3(-.5,-.5,.5)),s.vertices.push(new THREE.Vector3(-.5,.5,.5)),s.vertices.push(new THREE.Vector3(.5,-.5,.5)),s.vertices.push(new THREE.Vector3(.5,.5,.5)),s.vertices.push(new THREE.Vector3(.5,-.5,-.5)),s.vertices.push(new THREE.Vector3(.5,.5,-.5)),s.vertices.push(new THREE.Vector3(-.5,-.5,-.5)),s.vertices.push(new THREE.Vector3(-.5,.5,-.5)),s.colors.push(new THREE.Vector3(1,1,1));let r=new THREE.Geometry;r.vertices.push(new THREE.Vector3(-.5,-.5,0)),r.vertices.push(new THREE.Vector3(-.5,.5,0)),r.vertices.push(new THREE.Vector3(.5,.5,0)),r.vertices.push(new THREE.Vector3(.5,-.5,0)),r.vertices.push(new THREE.Vector3(-.5,.5,0)),r.vertices.push(new THREE.Vector3(.5,.5,0)),r.vertices.push(new THREE.Vector3(-.5,-.5,0)),r.vertices.push(new THREE.Vector3(.5,-.5,0)),this.dimension=new THREE.Vector3(1,1,1),this.material=new THREE.MeshBasicMaterial({color:65280,transparent:!0,opacity:.3,depthTest:!0,depthWrite:!1}),this.box=new THREE.Mesh(o,this.material),this.box.geometry.computeBoundingBox(),this.boundingBox=this.box.geometry.boundingBox,this.add(this.box),this.frame=new THREE.LineSegments(s,new THREE.LineBasicMaterial({color:0})),this.add(this.frame),this.planeFrame=new THREE.LineSegments(r,new THREE.LineBasicMaterial({color:16711680})),this.add(this.planeFrame),this.setScaleZ(.1);let a=(e,t,i)=>{let n=new THREE.MeshBasicMaterial({color:i,depthTest:!1,depthWrite:!1}),o=new THREE.Geometry;o.vertices.push(new THREE.Vector3(0,0,0)),o.vertices.push(new THREE.Vector3(0,1,0));let s=new THREE.LineBasicMaterial({color:i,depthTest:!1,depthWrite:!1,transparent:!0}),r=new THREE.Line(o,s);r.name=e+"_shaft";let a=new THREE.CylinderGeometry(0,.04,.1,10,1,!1),l=n,h=new THREE.Mesh(a,l);h.name=e+"_head",h.position.y=1;let d=new THREE.Object3D;return d.name=e,d.add(r),d.add(h),d};this.arrowX=a("arrow_x",new THREE.Vector3(1,0,0),16711680),this.arrowY=a("arrow_y",new THREE.Vector3(0,1,0),65280),this.arrowZ=a("arrow_z",new THREE.Vector3(0,0,1),255),this.arrowX.rotation.z=-Math.PI/2,this.arrowZ.rotation.x=Math.PI/2,this.arrowX.visible=!1,this.arrowY.visible=!1,this.arrowZ.visible=!1,this.add(this.arrowX),this.add(this.arrowY),this.add(this.arrowZ),this.addEventListener("ui_select",e=>{this.arrowX.visible=!0,this.arrowY.visible=!0,this.arrowZ.visible=!0}),this.addEventListener("ui_deselect",e=>{this.arrowX.visible=!1,this.arrowY.visible=!1,this.arrowZ.visible=!1}),this.addEventListener("select",e=>{let t=$("#"+this.name+" .scene_header");t.next().is(":visible")||t.click()}),this.addEventListener("deselect",e=>{let t=$("#"+this.name+" .scene_header");t.next().is(":visible")&&t.click()}),this.update()}setClipOffset(e){this.clipOffset=e}setClipRotOffset(e){this.clipRotOffset=e}setScaleX(e){this.box.scale.x=e,this.frame.scale.x=e,this.planeFrame.scale.x=e}setScaleY(e){this.box.scale.y=e,this.frame.scale.y=e,this.planeFrame.scale.y=e}setScaleZ(e){this.box.scale.z=e,this.frame.scale.z=e,this.planeFrame.scale.z=e}offset(e){let t=e.cs||null,i=e.axis||null,n=e.dir||null;t&&i&&n&&("x"===i?"local"===t?this.position.add(this.localX.clone().multiplyScalar(n*this.clipOffset)):"global"===t&&(this.position.x=this.position.x+n*this.clipOffset):"y"===i?"local"===t?this.position.add(this.localY.clone().multiplyScalar(n*this.clipOffset)):"global"===t&&(this.position.y=this.position.y+n*this.clipOffset):"z"===i&&("local"===t?this.position.add(this.localZ.clone().multiplyScalar(n*this.clipOffset)):"global"===t&&(this.position.z=this.position.z+n*this.clipOffset)),this.dispatchEvent({type:"clip_volume_changed",viewer:viewer,volume:this}))}rotate(e){let t=e.cs||null,i=e.axis||null,n=e.dir||null;if(t&&i&&n){if("local"===t)"x"===i?this.rotateOnAxis(new THREE.Vector3(1,0,0),n*this.clipRotOffset*Math.PI/180):"y"===i?this.rotateOnAxis(new THREE.Vector3(0,1,0),n*this.clipRotOffset*Math.PI/180):"z"===i&&this.rotateOnAxis(new THREE.Vector3(0,0,1),n*this.clipRotOffset*Math.PI/180);else if("global"===t){let e=new THREE.Vector4(1,0,0,0);"y"===i?e=new THREE.Vector4(0,1,0,0):"z"===i&&(e=new THREE.Vector4(0,0,1,0)),this.updateMatrixWorld();let t=(new THREE.Matrix4).getInverse(this.matrixWorld);e=e.applyMatrix4(t).normalize(),e=new THREE.Vector3(e.x,e.y,e.z),this.rotateOnAxis(e,n*this.clipRotOffset*Math.PI/180)}this.updateLocalSystem(),this.dispatchEvent({type:"clip_volume_changed",viewer:viewer,volume:this})}}update(){this.boundingBox=this.box.geometry.boundingBox,this.boundingSphere=this.boundingBox.getBoundingSphere(),this.box.visible=!1,this.updateLocalSystem()}updateLocalSystem(){let e=this.getWorldQuaternion();this.localX=new THREE.Vector3(1,0,0).applyQuaternion(e).normalize(),this.localY=new THREE.Vector3(0,1,0).applyQuaternion(e).normalize(),this.localZ=new THREE.Vector3(0,0,1).applyQuaternion(e).normalize()}raycast(e,t){let i=[];if(this.box.raycast(e,i),i.length>0){let e=i[0];t.push({distance:e.distance,object:this,point:e.point.clone()})}}},Potree.PolygonClipVolume=class extends THREE.Object3D{constructor(e){super(),this.constructor.counter=void 0===this.constructor.counter?0:this.constructor.counter+1,this.name="polygon_clip_volume_"+this.constructor.counter,this.camera=e.clone(),this.camera.rotation.set(...e.rotation.toArray()),this.camera.updateMatrixWorld(),this.camera.updateProjectionMatrix(),this.camera.matrixWorldInverse.getInverse(this.camera.matrixWorld),this.viewMatrix=this.camera.matrixWorldInverse.clone(),this.projMatrix=this.camera.projectionMatrix.clone(),this.markers=[],this.initialized=!1}addMarker(){let e,t=new THREE.Mesh,i=e=>{let i=e.viewer.renderer.getSize(),n=new THREE.Vector3(e.drag.end.x/i.width*2-1,e.drag.end.y/i.height*-2+1,0);t.position.copy(n)},n=t=>{e()};e=(e=>{t.removeEventListener("drag",i),t.removeEventListener("drop",n)}),t.addEventListener("drag",i),t.addEventListener("drop",n),this.markers.push(t)}removeLastMarker(){this.markers.length>0&&this.markers.splice(this.markers.length-1,1)}},Potree.Box3Helper=class extends THREE.LineSegments{constructor(e,t){void 0===t&&(t=16776960);let i=new Uint16Array([0,1,1,2,2,3,3,0,4,5,5,6,6,7,7,4,0,4,1,5,2,6,3,7]),n=new Float32Array([e.min.x,e.min.y,e.min.z,e.max.x,e.min.y,e.min.z,e.max.x,e.min.y,e.max.z,e.min.x,e.min.y,e.max.z,e.min.x,e.max.y,e.min.z,e.max.x,e.max.y,e.min.z,e.max.x,e.max.y,e.max.z,e.min.x,e.max.y,e.max.z]),o=new THREE.BufferGeometry;o.setIndex(new THREE.BufferAttribute(i,1)),o.addAttribute("position",new THREE.BufferAttribute(n,3)),super(o,new THREE.LineBasicMaterial({color:t}))}},Potree.PointCloudSM=class{constructor(e){this.potreeRenderer=e,this.threeRenderer=this.potreeRenderer.threeRenderer,this.target=new THREE.WebGLRenderTarget(2048,2048,{minFilter:THREE.LinearFilter,magFilter:THREE.LinearFilter,format:THREE.RGBAFormat,type:THREE.FloatType}),this.target.depthTexture=new THREE.DepthTexture,this.target.depthTexture.type=THREE.UnsignedIntType,this.threeRenderer.setClearColor(0,1),this.threeRenderer.clearTarget(this.target,!0,!0,!0)}setLight(e){this.light=e;let t=180*e.angle/Math.PI,i=e.shadow.mapSize.width/e.shadow.mapSize.height,n=0===e.distance?1e4:e.distance;this.camera=new THREE.PerspectiveCamera(t,i,.1,n),this.camera.up.set(0,0,1),this.camera.position.copy(e.position);let o=(new THREE.Vector3).addVectors(e.position,e.getWorldDirection());this.camera.lookAt(o),this.camera.updateProjectionMatrix(),this.camera.updateMatrix(),this.camera.updateMatrixWorld(),this.camera.matrixWorldInverse.getInverse(this.camera.matrixWorld)}setSize(e,t){this.target.width===e&&this.target.height===t||this.target.dispose(),this.target.setSize(e,t)}render(e,t){this.threeRenderer.clearTarget(this.target,!0,!0,!0),this.potreeRenderer.render(e,this.camera,this.target,{})}},Potree.Message=class{constructor(e){this.content=e;let t=`${Potree.resourcePath}/icons/close.svg`;this.element=$(`\n\t\t\t<div class="potree_message">\n\t\t\t\t<span name="content_container" style="flex-grow: 1; padding: 5px"></span>\n\t\t\t\t<img name="close" src="${t}" class="button-icon" style="width: 16px; height: 16px;">\n\t\t\t</div>`),this.elClose=this.element.find("img[name=close]"),this.elContainer=this.element.find("span[name=content_container]"),"string"==typeof e?this.elContainer.append($(`<span>${e}</span>`)):this.elContainer.append(e)}setMessage(e){this.elContainer.empty(),"string"==typeof e?this.elContainer.append($(`<span>${e}</span>`)):this.elContainer.append(e)}},Potree.SpotLightHelper=class extends THREE.Object3D{constructor(e,t){super(),this.light=e,this.color=t,this.updateMatrix(),this.updateMatrixWorld();{let e=new THREE.SphereGeometry(1,32,32),t=new THREE.MeshNormalMaterial;this.sphere=new THREE.Mesh(e,t),this.sphere.scale.set(.5,.5,.5),this.add(this.sphere)}{let e=new Float32Array([0,0,0,0,0,1,0,0,0,-1,-1,1,0,0,0,1,-1,1,0,0,0,1,1,1,0,0,0,-1,1,1,-1,-1,1,1,-1,1,1,-1,1,1,1,1,1,1,1,-1,1,1,-1,1,1,-1,-1,1]),t=new THREE.BufferGeometry;t.addAttribute("position",new THREE.BufferAttribute(e,3));let i=new THREE.LineBasicMaterial;this.frustum=new THREE.LineSegments(t,i),this.add(this.frustum)}this.update()}update(){this.light.updateMatrix(),this.light.updateMatrixWorld();let e=this.light.position,t=(new THREE.Vector3).addVectors(light.position,this.light.getWorldDirection().multiplyScalar(-1)),i=(new THREE.Quaternion).setFromRotationMatrix((new THREE.Matrix4).lookAt(e,t,new THREE.Vector3(0,0,1)));this.setRotationFromQuaternion(i),this.position.copy(e);let n=this.light.distance>0?this.light.distance:1e3,o=n*Math.tan(.5*this.light.angle);this.frustum.scale.set(o,o,n)}},Potree.GeoJSONExporter=class{static measurementToFeatures(e){let t=e.points.map(e=>e.position.toArray()),i=[];if(1===t.length){let n={type:"Feature",geometry:{type:"Point",coordinates:t[0]},properties:{name:e.name}};i.push(n)}else if(t.length>1&&!e.closed){let n={type:"Feature",geometry:{type:"LineString",coordinates:t},properties:{name:e.name}};i.push(n)}else if(t.length>1&&e.closed){let n={type:"Feature",geometry:{type:"Polygon",coordinates:[[...t,t[0]]]},properties:{name:e.name}};i.push(n)}if(e.showDistances&&e.edgeLabels.forEach(e=>{let t={type:"Feature",geometry:{type:"Point",coordinates:e.position.toArray()},properties:{distance:e.text}};i.push(t)}),e.showArea){let t={type:"Feature",geometry:{type:"Point",coordinates:e.areaLabel.position.toArray()},properties:{area:e.areaLabel.text}};i.push(t)}return i}static toString(e){e instanceof Array||(e=[e]),e=e.filter(e=>e instanceof Potree.Measure);let t=[];for(let i of e){let e=Potree.GeoJSONExporter.measurementToFeatures(i);t=t.concat(e)}let i={type:"FeatureCollection",features:t};return JSON.stringify(i,null,"\t")}},Potree.DXFExporter=class{static measurementPointSection(e){let t=e.points[0].position;return t?`0\nCIRCLE\n8\nlayer_point\n10\n${t.x}\n20\n${t.y}\n30\n${t.z}\n40\n1.0\n`:""}static measurementPolylineSection(e){let t=8;e.closed&&(t+=1);let i=`0\nPOLYLINE\n8\nlayer_polyline\n62\n1\n66\n1\n10\n0.0\n20\n0.0\n30\n0.0\n70\n${t}\n`,n=0,o=0,s=0;for(let t of e.points)t=t.position,n=Math.max(n,t.x),o=Math.max(o,t.y),s=Math.max(s,t.z),i+=`0\nVERTEX\n8\n0\n10\n${t.x}\n20\n${t.y}\n30\n${t.z}\n70\n32\n`;return i+="0\nSEQEND\n"}static measurementSection(e){return 0===e.points.length?"":1===e.points.length?Potree.DXFExporter.measurementPointSection(e):e.points.length>=2?Potree.DXFExporter.measurementPolylineSection(e):void 0}static toString(e){e instanceof Array||(e=[e]);let t=(e=e.filter(e=>e instanceof Potree.Measure)).filter(e=>e instanceof Potree.Measure).map(e=>e.points).reduce((e,t)=>e.concat(t)).map(e=>e.position),i=new THREE.Vector3(1/0,1/0,1/0),n=new THREE.Vector3(-1/0,-1/0,-1/0);for(let e of t)i.min(e),n.max(e);let o=`999\nDXF created from potree\n0\nSECTION\n2\nHEADER\n9\n$ACADVER\n1\nAC1006\n9\n$INSBASE\n10\n0.0\n20\n0.0\n30\n0.0\n9\n$EXTMIN\n10\n${i.x}\n20\n${i.y}\n30\n${i.z}\n9\n$EXTMAX\n10\n${n.x}\n20\n${n.y}\n30\n${n.z}\n0\nENDSEC\n`,s="0\nSECTION\n2\nENTITIES\n";for(let t of e)s+=Potree.DXFExporter.measurementSection(t);return o+(s+="0\nENDSEC\n")+"0\nEOF"}},Potree.CSVExporter=class{static toString(e){let t="",i=Object.keys(e.data).filter(e=>"normal"!==e).sort((e,t)=>"position"===e?-1:"position"===t?1:"color"===e?-1:"color"===t?1:void 0),n=[];for(let t of i){let i=e.data[t].length/e.numPoints;if("position"===t)n=n.concat(["x","y","z"]);else if("color"===t)n=n.concat(["r","g","b","a"]);else if(i>1)for(let e=0;e<i;e++)n.push(`${t}_${e}`);else n.push(t)}t=n.join(", ")+"\n";for(let n=0;n<e.numPoints;n++){let o=[];for(let t of i){let i=e.data[t].length/e.numPoints,s=e.data[t].subarray(i*n,i*n+i).join(", ");o.push(s)}t+=o.join(", ")+"\n"}return t}},Potree.LASExporter=class{static toLAS(e){let t=e.boundingBox,i=t.min.clone(),n=t.min.distanceTo(t.max),o=new THREE.Vector3(.001,.001,.001);o=n>1e6?new THREE.Vector3(.01,.01,.01):new THREE.Vector3(.001,.001,.001);let s=function(e,t,i){let n=new Uint8Array(i);for(let i=0;i<e.length;i++){let o=e.charCodeAt(i);n[t+i]=o}},r=new ArrayBuffer(227+28*e.numPoints),a=new DataView(r),l=new Uint8Array(r);s("LASF",0,r),l[24]=1,l[25]=2,s("Potree 1.5",58,r),a.setUint16(94,227,!0),a.setUint32(96,227,!0),l[104]=2,a.setUint16(105,28,!0),a.setUint32(107,e.numPoints,!0),a.setFloat64(131,o.x,!0),a.setFloat64(139,o.y,!0),a.setFloat64(147,o.z,!0),a.setFloat64(155,i.x,!0),a.setFloat64(163,i.y,!0),a.setFloat64(171,i.z,!0),a.setFloat64(179,t.max.x,!0),a.setFloat64(187,t.min.x,!0),a.setFloat64(195,t.max.y,!0),a.setFloat64(203,t.min.y,!0),a.setFloat64(211,t.max.z,!0),a.setFloat64(219,t.min.z,!0);let h=227;for(let t=0;t<e.numPoints;t++){let n=e.data.position[3*t+0],s=e.data.position[3*t+1],r=e.data.position[3*t+2],l=parseInt((n-i.x)/o.x),d=parseInt((s-i.y)/o.y),c=parseInt((r-i.z)/o.z);a.setUint32(h+0,l,!0),a.setUint32(h+4,d,!0),a.setUint32(h+8,c,!0),e.data.intensity&&a.setUint16(h+12,e.data.intensity[t],!0);let p=0;e.data.returnNumber&&(p+=e.data.returnNumber[t]),e.data.numberOfReturns&&(p+=e.data.numberOfReturns[t]<<3),a.setUint8(h+14,p),e.data.classification&&a.setUint8(h+15,e.data.classification[t]),e.data.pointSourceID&&a.setUint16(h+18,e.data.pointSourceID[t]),e.data.color&&(a.setUint16(h+20,255*e.data.color[4*t+0],!0),a.setUint16(h+22,255*e.data.color[4*t+1],!0),a.setUint16(h+24,255*e.data.color[4*t+2],!0)),h+=28}return r}},Potree.PointCloudArena4DNode=class extends Potree.PointCloudTreeNode{constructor(){super(),this.left=null,this.right=null,this.sceneNode=null,this.kdtree=null}getNumPoints(){return this.geometryNode.numPoints}isLoaded(){return!0}isTreeNode(){return!0}isGeometryNode(){return!1}getLevel(){return this.geometryNode.level}getBoundingSphere(){return this.geometryNode.boundingSphere}getBoundingBox(){return this.geometryNode.boundingBox}toTreeNode(e){let t=null;if(this.left===e?t=this.left:this.right===e&&(t=this.right),!t.loaded)return;let i=new Potree.PointCloudArena4DNode,n=THREE.PointCloud(t.geometry,this.kdtree.material);n.visible=!1,i.kdtree=this.kdtree,i.geometryNode=t,i.sceneNode=n,i.parent=this,i.left=this.geometryNode.left,i.right=this.geometryNode.right}getChildren(){let e=[];return this.left&&e.push(this.left),this.right&&e.push(this.right),e}},Potree.PointCloudArena4D=class extends Potree.PointCloudTree{constructor(e){super(),this.root=null,e.root?this.root=e.root:e.addEventListener("hierarchy_loaded",()=>{this.root=e.root}),this.visiblePointsTarget=2e6,this.minimumNodePixelSize=150,this.position.sub(e.offset),this.updateMatrix(),this.numVisibleNodes=0,this.numVisiblePoints=0,this.boundingBoxNodes=[],this.loadQueue=[],this.visibleNodes=[],this.pcoGeometry=e,this.boundingBox=this.pcoGeometry.boundingBox,this.boundingSphere=this.pcoGeometry.boundingSphere,this.material=new Potree.PointCloudMaterial({vertexColors:THREE.VertexColors,size:.05,treeType:Potree.TreeType.KDTREE}),this.material.sizeType=Potree.PointSizeType.ATTENUATED,this.material.size=.05,this.profileRequests=[],this.name=""}getBoundingBoxWorld(){this.updateMatrixWorld(!0);let e=this.boundingBox,t=this.matrixWorld;return Potree.utils.computeTransformedBoundingBox(e,t)}setName(e){this.name!==e&&(this.name=e,this.dispatchEvent({type:"name_changed",name:e,pointcloud:this}))}getName(){return this.name}getLevel(){return this.level}toTreeNode(e,t){let i=new Potree.PointCloudArena4DNode,n=new THREE.Points(e.geometry,this.material);n.frustumCulled=!1,n.onBeforeRender=((t,n,o,s,r,a)=>{if(r.program){if(t.getContext().useProgram(r.program.program),r.program.getUniforms().map.level){let i=e.getLevel();r.uniforms.level.value=i,r.program.getUniforms().map.level.setValue(t.getContext(),i)}if(this.visibleNodeTextureOffsets&&r.program.getUniforms().map.vnStart){let e=this.visibleNodeTextureOffsets.get(i);r.uniforms.vnStart.value=e,r.program.getUniforms().map.vnStart.setValue(t.getContext(),e)}if(r.program.getUniforms().map.pcIndex){let e=i.pcIndex?i.pcIndex:this.visibleNodes.indexOf(i);r.uniforms.pcIndex.value=e,r.program.getUniforms().map.pcIndex.setValue(t.getContext(),e)}}}),i.geometryNode=e,i.sceneNode=n,i.pointcloud=this,i.left=e.left,i.right=e.right,t?(t.sceneNode.add(n),t.left===e?t.left=i:t.right===e&&(t.right=i)):(this.root=i,this.add(n));return e.oneTimeDisposeHandlers.push(function(){t.sceneNode.remove(i.sceneNode),t.left===i?t.left=e:t.right===i&&(t.right=e)}),i}updateMaterial(e,t,i,n){e.fov=i.fov*(Math.PI/180),e.screenWidth=n.domElement.clientWidth,e.screenHeight=n.domElement.clientHeight,e.spacing=this.pcoGeometry.spacing,e.near=i.near,e.far=i.far,this.maxLevel>e.levels&&(e.levels=this.maxLevel+2);let o=this.boundingBox.getSize();e.bbSize=[o.x,o.y,o.z]}updateVisibleBounds(){}hideDescendants(e){let t=[];for(let i=0;i<e.children.length;i++){let n=e.children[i];n.visible&&t.push(n)}for(;t.length>0;){let e=t.shift();e.visible=!1,e.boundingBoxNode&&(e.boundingBoxNode.visible=!1);for(let i=0;i<e.children.length;i++){let n=e.children[i];n.visible&&t.push(n)}}}updateMatrixWorld(e){!0===this.matrixAutoUpdate&&this.updateMatrix(),!0!==this.matrixWorldNeedsUpdate&&!0!==e||(void 0===this.parent?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),this.matrixWorldNeedsUpdate=!1,e=!0)}nodesOnRay(e,t){let i=[],n=t.clone();for(let t=0;t<e.length;t++){let o=e[t],s=o.getBoundingSphere().clone().applyMatrix4(o.sceneNode.matrixWorld);n.intersectsSphere(s)&&i.push(o)}return i}pick(e,t,i,n={}){let o=e.renderer,s=e.pRenderer;performance.mark("pick-start");let r=(e,t)=>void 0!==e?e:t,a=r(n.pickWindowSize,17),l=(r(n.pickOutsideClipRegion,!1),o.getSize()),h=Math.ceil(r(n.width,l.width)),d=Math.ceil(r(n.height,l.height)),c=r(n.pointSizeType,this.material.pointSizeType),p=r(n.pointSize,this.material.size),u=this.nodesOnRay(this.visibleNodes,i);if(0===u.length)return null;if(!this.pickState){let e=new THREE.Scene,t=new Potree.PointCloudMaterial;t.pointColorType=Potree.PointColorType.POINT_INDEX;let i=new THREE.WebGLRenderTarget(1,1,{minFilter:THREE.LinearFilter,magFilter:THREE.NearestFilter,format:THREE.RGBAFormat});this.pickState={renderTarget:i,material:t,scene:e}}let m=this.pickState,g=m.material;g.pointSizeType=c,g.shape=this.material.shape,g.size=p,g.uniforms.minSize.value=this.material.uniforms.minSize.value,g.uniforms.maxSize.value=this.material.uniforms.maxSize.value,g.classification=this.material.classification,n.pickClipped?(g.clipBoxes=this.material.clipBoxes,this.material.clipTask===Potree.ClipTask.HIGHLIGHT?g.clipTask=Potree.ClipTask.NONE:g.clipTask=this.material.clipTask):g.clipBoxes=[],this.updateMaterial(g,u,t,o),m.renderTarget.setSize(h,d);let f=new THREE.Vector2(n.x,n.y),E=o.getContext();E.enable(E.SCISSOR_TEST),E.scissor(parseInt(f.x-(a-1)/2),parseInt(f.y-(a-1)/2),parseInt(a),parseInt(a)),o.state.buffers.depth.setTest(g.depthTest),o.state.buffers.depth.setMask(g.depthWrite),o.state.setBlending(THREE.NoBlending),o.clearTarget(m.renderTarget,!0,!0,!0);{o.setRenderTarget(m.renderTarget),E.clearColor(0,0,0,0),o.clearTarget(m.renderTarget,!0,!0,!0);let e=this.material;this.material=g,s.renderOctree(this,u,t,m.renderTarget),this.material=e}let v=(e,t,i)=>Math.min(Math.max(t,e),i),y=parseInt(v(f.x-(a-1)/2,0,h)),w=parseInt(v(f.y-(a-1)/2,0,d)),T=parseInt(Math.min(y+a,h)-y),b=parseInt(Math.min(w+a,d)-w),P=new Uint8Array(4*(T*b));E.readPixels(y,w,a,a,E.RGBA,E.UNSIGNED_BYTE,P),o.setRenderTarget(null),o.resetGLState(),o.setScissorTest(!1),E.disable(E.SCISSOR_TEST);let x=P,R=new Uint32Array(P.buffer),S=(Number.MAX_VALUE,[]);for(let e=0;e<a;e++)for(let t=0;t<a;t++){let i=e+t*a,o=Math.pow(e-(a-1)/2,2)+Math.pow(t-(a-1)/2,2),s=x[4*i+3];x[4*i+3]=0;let r=R[i];if((0!==s||0!==r)&&void 0!==s&&void 0!==r){let e={pIndex:r,pcIndex:s,distanceToCenter:o};n.all?S.push(e):S.length>0?o<S[0].distanceToCenter&&(S[0]=e):S.push(e)}}for(let e of S){let t={};if(!u[e.pcIndex])return null;let i=u[e.pcIndex],n=i.sceneNode,o=i.geometryNode.geometry;for(let i in o.attributes){let s=o.attributes[i];if("position"===i){let o=s.array[3*e.pIndex+0],r=s.array[3*e.pIndex+1],a=s.array[3*e.pIndex+2],l=new THREE.Vector3(o,r,a);l.applyMatrix4(n.matrixWorld),t[i]=l}}e.point=t}return performance.mark("pick-end"),performance.measure("pick","pick-start","pick-end"),n.all?S.map(e=>e.point):0===S.length?null:S[0].point}computeVisibilityTextureData(e){Potree.measureTimings&&performance.mark("computeVisibilityTextureData-start");let t=new Uint8Array(3*e.length),i=new Map;(e=e.slice()).sort(function(e,t){let i=e.geometryNode.level,n=t.geometryNode.level,o=e.geometryNode.number,s=t.geometryNode.number;return i!==n?i-n:o<s?-1:o>s?1:0});let n=[];for(let t=0;t<e.length;t++)n.push(e[t].geometryNode.number);for(let o=0;o<e.length;o++){let s=e[o];i.set(s,o);let r=0,a=0,l=0;s.geometryNode.left&&n.indexOf(s.geometryNode.left.number)>0&&(r+=1,a=n.indexOf(s.geometryNode.left.number)-o),s.geometryNode.right&&n.indexOf(s.geometryNode.right.number)>0&&(r+=2,a=0===a?n.indexOf(s.geometryNode.right.number)-o:a),"X"===s.geometryNode.split?l=1:"Y"===s.geometryNode.split?l=2:"Z"===s.geometryNode.split&&(l=4),t[3*o+0]=r,t[3*o+1]=a,t[3*o+2]=l}return Potree.measureTimings&&(performance.mark("computeVisibilityTextureData-end"),performance.measure("render.computeVisibilityTextureData","computeVisibilityTextureData-start","computeVisibilityTextureData-end")),{data:t,offsets:i}}get progress(){return this.pcoGeometry.root?Potree.numNodesLoading>0?0:1:0}},Potree.PointCloudArena4DGeometryNode=class{constructor(){this.left=null,this.right=null,this.boundingBox=null,this.number=null,this.pcoGeometry=null,this.loaded=!1,this.numPoints=0,this.level=0,this.children=[],this.oneTimeDisposeHandlers=[]}isGeometryNode(){return!0}isTreeNode(){return!1}isLoaded(){return this.loaded}getBoundingSphere(){return this.boundingSphere}getBoundingBox(){return this.boundingBox}getChildren(){let e=[];return this.left&&e.push(this.left),this.right&&e.push(this.right),e}getBoundingBox(){return this.boundingBox}getLevel(){return this.level}load(){if(this.loaded||this.loading)return;if(Potree.numNodesLoading>=Potree.maxNodesLoading)return;this.loading=!0,Potree.numNodesLoading++;let e=this.pcoGeometry.url+"?node="+this.number,t=Potree.XHRFactory.createXMLHttpRequest();t.open("GET",e,!0),t.responseType="arraybuffer";let i=this;t.onreadystatechange=function(){if(4!==t.readyState||200!==t.status)return;let e=t.response,n=new DataView(e),o=e.byteLength/17,s=new ArrayBuffer(28*o),r=(new DataView(s),Potree.PointAttribute.POSITION_CARTESIAN,Potree.PointAttribute.RGBA_PACKED,Potree.PointAttribute.INTENSITY,Potree.PointAttribute.CLASSIFICATION,new Float32Array(3*o)),a=new Uint8Array(4*o),l=new Float32Array(o),h=new Uint8Array(o),d=new ArrayBuffer(4*o),c=new Uint32Array(d),p=new THREE.Box3;for(let e=0;e<o;e++){let t=n.getFloat32(17*e+0,!0)+i.boundingBox.min.x,o=n.getFloat32(17*e+4,!0)+i.boundingBox.min.y,s=n.getFloat32(17*e+8,!0)+i.boundingBox.min.z,d=n.getUint8(17*e+12,!0),u=n.getUint8(17*e+13,!0),m=n.getUint8(17*e+14,!0),g=n.getUint8(17*e+15,!0),f=n.getUint8(17*e+16,!0);p.expandByPoint(new THREE.Vector3(t,o,s)),r[3*e+0]=t,r[3*e+1]=o,r[3*e+2]=s,a[4*e+0]=d,a[4*e+1]=u,a[4*e+2]=m,a[4*e+3]=255,l[e]=g,h[e]=f,c[e]=e}let u=new THREE.BufferGeometry;u.addAttribute("position",new THREE.BufferAttribute(r,3)),u.addAttribute("color",new THREE.BufferAttribute(a,4,!0)),u.addAttribute("intensity",new THREE.BufferAttribute(l,1)),u.addAttribute("classification",new THREE.BufferAttribute(h,1));{let e=new THREE.BufferAttribute(new Uint8Array(d),4,!0);u.addAttribute("indices",e)}i.geometry=u,i.numPoints=o,i.loaded=!0,i.loading=!1,Potree.numNodesLoading--},t.send(null)}dispose(){if(this.geometry&&null!=this.parent){this.geometry.dispose(),this.geometry=null,this.loaded=!1;for(let e=0;e<this.oneTimeDisposeHandlers.length;e++){(0,this.oneTimeDisposeHandlers[e])()}this.oneTimeDisposeHandlers=[]}}getNumPoints(){return this.numPoints}},Potree.PointCloudArena4DGeometry=class extends THREE.EventDispatcher{constructor(){super(),this.numPoints=0,this.version=0,this.boundingBox=null,this.numNodes=0,this.name=null,this.provider=null,this.url=null,this.root=null,this.levels=0,this._spacing=null,this.pointAttributes=new Potree.PointAttributes(["POSITION_CARTESIAN","COLOR_PACKED"])}static load(e,t){let i=Potree.XHRFactory.createXMLHttpRequest();i.open("GET",e+"?info",!0),i.onreadystatechange=function(){try{if(4===i.readyState&&200===i.status){let n=JSON.parse(i.responseText),o=new Potree.PointCloudArena4DGeometry;o.url=e,o.name=n.Name,o.provider=n.Provider,o.numNodes=n.Nodes,o.numPoints=n.Points,o.version=n.Version,o.boundingBox=new THREE.Box3((new THREE.Vector3).fromArray(n.BoundingBox.slice(0,3)),(new THREE.Vector3).fromArray(n.BoundingBox.slice(3,6))),n.Spacing&&(o.spacing=n.Spacing);let s=o.boundingBox.min.clone().multiplyScalar(-1);o.boundingBox.min.add(s),o.boundingBox.max.add(s),o.offset=s;let r=o.boundingBox.getCenter(),a=o.boundingBox.getSize().length()/2;o.boundingSphere=new THREE.Sphere(r,a),o.loadHierarchy(),t(o)}else 4===i.readyState&&t(null)}catch(e){console.error(e.message),t(null)}},i.send(null)}loadHierarchy(){let e=this.url+"?tree",t=Potree.XHRFactory.createXMLHttpRequest();t.open("GET",e,!0),t.responseType="arraybuffer",t.onreadystatechange=(()=>{if(4!==t.readyState||200!==t.status)return;let e=t.response,i=e.byteLength/3,n=new DataView(e),o=[],s=null,r=0;for(let e=0;e<i;e++){let t=n.getUint8(3*e+0,!0),i=(1&t)>0,a=(2&t)>0,l=null;(4&t)>0?l="X":(8&t)>0&&(l="Y"),(16&t)>0&&(l="Z");let h=new Potree.PointCloudArena4DGeometryNode;if(h.hasLeft=i,h.hasRight=a,h.split=l,h.isLeaf=!i&&!a,h.number=e,h.left=null,h.right=null,h.pcoGeometry=this,h.level=o.length,r=Math.max(r,h.level),o.length>0){let e=o[o.length-1];h.boundingBox=e.boundingBox.clone();let t=e.boundingBox.getSize();if(e.hasLeft&&!e.left){e.left=h,e.children.push(h),"X"===e.split?h.boundingBox.max.x=h.boundingBox.min.x+t.x/2:"Y"===e.split?h.boundingBox.max.y=h.boundingBox.min.y+t.y/2:"Z"===e.split&&(h.boundingBox.max.z=h.boundingBox.min.z+t.z/2);let i=h.boundingBox.getCenter(),n=h.boundingBox.getSize().length()/2;h.boundingSphere=new THREE.Sphere(i,n)}else{e.right=h,e.children.push(h),"X"===e.split?h.boundingBox.min.x=h.boundingBox.min.x+t.x/2:"Y"===e.split?h.boundingBox.min.y=h.boundingBox.min.y+t.y/2:"Z"===e.split&&(h.boundingBox.min.z=h.boundingBox.min.z+t.z/2);let i=h.boundingBox.getCenter(),n=h.boundingBox.getSize().length()/2;h.boundingSphere=new THREE.Sphere(i,n)}}else{(s=h).boundingBox=this.boundingBox.clone();let e=s.boundingBox.getCenter(),t=s.boundingBox.getSize().length()/2;s.boundingSphere=new THREE.Sphere(e,t)}let d=h.boundingBox.getSize();if(h.spacing=(d.x+d.y+d.z)/3/75,h.estimatedSpacing=h.spacing,o.push(h),h.isLeaf){let e=!1;for(;!e&&o.length>0;){o.pop();let t=o[o.length-1];e=o.length>0&&t.hasRight&&null==t.right}}}this.root=s,this.levels=r,this.dispatchEvent({type:"hierarchy_loaded"})}),t.send(null)}get spacing(){return this._spacing?this._spacing:this.root?this.root.spacing:void 0}set spacing(e){this._spacing=e}};class PotreeRenderer{constructor(e){this.viewer=e}render(){const e=this.viewer;e.renderers.forEach((t,i)=>{let n=Potree.startQuery("render",t.getContext());e.dispatchEvent({type:"render.pass.begin",viewer:e}),"skybox"===e.background?(t.clear(!0,!0,!1),e.skybox.camera.rotation.copy(e.scene.cameraP.rotation),e.skybox.camera.fov=e.scene.cameraP.fov,e.skybox.camera.aspect=e.scene.cameraP.aspect,e.skybox.camera.updateProjectionMatrix(),t.render(e.skybox.scene,e.skybox.camera)):"gradient"===e.background?(t.clear(!0,!0,!1),t.render(e.scene.sceneBG,e.scene.cameraBG)):"black"===e.background?(t.setClearColor(0,1),t.clear(!0,!0,!1)):"white"===e.background?(t.setClearColor(16777215,1),t.clear(!0,!0,!1)):(t.setClearColor(0,0),t.clear(!0,!0,!1));for(let e of this.viewer.scene.pointclouds)e.material.useEDL=!1;let o=e.scene.getActiveCamera(i);e.pRenderers[i].render(e.scene.scenePointCloud,o),t.render(e.scene.scene,o),e.dispatchEvent({type:"render.pass.scene",viewer:e}),e.clippingTool.update(),t.render(e.clippingTool.sceneMarker,e.scene.cameraScreenSpace),t.render(e.clippingTool.sceneVolume,o),t.clearDepth(),e.transformationTool.update(),e.dispatchEvent({type:"render.pass.perspective_overlay",viewer:e}),t.render(e.transformationTool.scene,o),t.setViewport(t.domElement.clientWidth-e.navigationCube.width,t.domElement.clientHeight-e.navigationCube.width,e.navigationCube.width,e.navigationCube.width),t.render(e.navigationCube,e.navigationCube.camera),t.setViewport(0,0,t.domElement.clientWidth,t.domElement.clientHeight),e.dispatchEvent({type:"render.pass.end",viewer:e}),Potree.endQuery(n,t.getContext())})}}class EDLRenderer{constructor(e){this.viewer=e,this.edlMaterial=null,this.rtRegular=[],this.rtEDL=[],this.gl=e.renderer.context,this.shadowMaps=[],this.viewer.pRenderers.forEach(e=>{this.shadowMaps.push(new Potree.PointCloudSM(e))})}initEDL(){null==this.edlMaterial&&(this.edlMaterial=new Potree.EyeDomeLightingMaterial,this.edlMaterial.depthTest=!0,this.edlMaterial.depthWrite=!0,this.edlMaterial.transparent=!0,this.viewer.renderers.forEach((e,t)=>{this.rtEDL[t]=new THREE.WebGLRenderTarget(1024,1024,{minFilter:THREE.NearestFilter,magFilter:THREE.NearestFilter,format:THREE.RGBAFormat,type:THREE.FloatType,depthTexture:new THREE.DepthTexture(void 0,void 0,THREE.UnsignedIntType)}),this.rtRegular[t]=new THREE.WebGLRenderTarget(1024,1024,{minFilter:THREE.NearestFilter,magFilter:THREE.NearestFilter,format:THREE.RGBAFormat,depthTexture:new THREE.DepthTexture(void 0,void 0,THREE.UnsignedIntType)})}))}resize(){this.viewer.renderers.forEach((e,t)=>{let i=e.getPixelRatio(),{width:n,height:o}=e.getSize();this.screenshot&&(n=this.screenshot.target.width,o=this.screenshot.target.height),this.rtEDL[t].setSize(n*i,o*i),this.rtRegular[t].setSize(n*i,o*i)})}makeScreenshot(e,t,i){void 0!==e&&null!==e||(e=this.viewer.scene.getActiveCamera()),void 0!==t&&null!==t||(t=this.viewer.renderer.getSize());let{width:n,height:o}=t;n*=2,o*=2;let s=new THREE.WebGLRenderTarget(n,o,{format:THREE.RGBAFormat});this.screenshot={target:s},this.viewer.renderer.clearTarget(s,!0,!0,!0),this.render();let r=new Uint8Array(4*(n*o));this.viewer.renderer.readRenderTargetPixels(s,0,0,n,o,r);let a=4*n;for(let e=0;e<parseInt(o/2);e++){let t=o-e-1,i=r.slice(e*a,e*a+a),n=r.slice(t*a,t*a+a);r.set(n,e*a),r.set(i,t*a)}return this.screenshot.target.dispose(),delete this.screenshot,{width:n,height:o,buffer:r}}render(){this.initEDL();const e=this.viewer;if(e.dispatchEvent({type:"render.pass.begin",viewer:e}),this.resize(),this.screenshot){let t=Potree.pointBudget;Potree.pointBudget=Math.max(1e7,2*t);Potree.updatePointClouds(e.scene.pointclouds,e.scene.getActiveCamera(),e.renderer);Potree.pointBudget=t}let t=e.scene.getActiveCamera(),i=[];if(e.scene.scene.traverse(e=>{e instanceof THREE.SpotLight&&i.push(e)}),i.length>0&&!i[0].disableShadowUpdates){let n=i[0],o=Potree.startQuery("EDL - shadows",e.renderer.getContext());this.shadowMaps[index].setLight(n);let s=new Map;for(let t of e.scene.pointclouds)s.set(t,t.material.pointColorType),t.material.disableEvents(),t.material.pointColorType=Potree.PointColorType.DEPTH;this.shadowMaps[index].render(e.scene.scenePointCloud,t);for(let t of e.scene.pointclouds){let e=s.get(t);t.material.pointColorType=e,t.material.enableEvents()}e.shadowTestCam.updateMatrixWorld(),e.shadowTestCam.matrixWorldInverse.getInverse(e.shadowTestCam.matrixWorld),e.shadowTestCam.updateProjectionMatrix(),Potree.endQuery(o,e.renderer.getContext())}let n=e.renderer.getSize().width,o=e.renderer.getSize().height;for(let t of e.scene.pointclouds){let e=t.pcoGeometry.boundingBox.getSize().x,i=t.material;i.weighted=!1,i.useLogarithmicDepthBuffer=!1,i.useEDL=!0,i.screenWidth=n,i.screenHeight=o,i.uniforms.visibleNodes.value=t.material.visibleNodesTexture,i.uniforms.octreeSize.value=e,i.spacing=t.pcoGeometry.spacing*Math.max(t.scale.x,t.scale.y,t.scale.z)}e.renderers.forEach((s,r)=>{let a=Potree.startQuery("EDL - Skybox",s.getContext());"skybox"===e.background?(s.setClearColor(0,0),s.clear(),e.skybox.camera.rotation.copy(e.scene.cameraP.rotation),e.skybox.camera.fov=e.scene.cameraP.fov,e.skybox.camera.aspect=e.scene.cameraP.aspect,e.skybox.camera.updateProjectionMatrix(),s.render(e.skybox.scene,e.skybox.camera)):"gradient"===e.background?(s.setClearColor(0,0),s.clear(),s.render(e.scene.sceneBG,e.scene.cameraBG)):"black"===e.background?(s.setClearColor(0,1),s.clear()):"white"===e.background?(s.setClearColor(16777215,1),s.clear()):(s.setClearColor(0,0),s.clear()),Potree.endQuery(a,s.getContext());let l=Potree.startQuery("EDL - colorpass",s.getContext()),h=e.scene.getActiveCamera(r);s.render(e.scene.scene,h),s.clearTarget(this.rtEDL[r],!0,!0,!0),s.clearTarget(this.rtRegular[r],!0,!0,!1),i.length>0?e.pRenderers[r].render(e.scene.scenePointCloud,h,this.rtEDL[r],{shadowMaps:[this.shadowMaps[r]],transparent:!1}):e.pRenderers[r].render(e.scene.scenePointClouds[r],h,this.rtEDL[r],{transparent:!1}),e.dispatchEvent({type:"render.pass.scene",viewer:e,renderTarget:this.rtRegular[r]}),Potree.endQuery(l,s.getContext());{let t=Potree.startQuery("EDL - resolve",s.getContext());this.edlMaterial.uniforms.screenWidth.value=n,this.edlMaterial.uniforms.screenHeight.value=o,this.edlMaterial.uniforms.uRegularColor.value=this.rtRegular[r].texture,this.edlMaterial.uniforms.uEDLColor.value=this.rtEDL[r].texture,this.edlMaterial.uniforms.uRegularDepth.value=this.rtRegular[r].depthTexture,this.edlMaterial.uniforms.uEDLDepth.value=this.rtEDL[r].depthTexture,this.edlMaterial.uniforms.edlStrength.value=e.edlStrength,this.edlMaterial.uniforms.radius.value=e.edlRadius,this.edlMaterial.uniforms.opacity.value=1,Potree.utils.screenPass.render(s,this.edlMaterial),this.screenshot&&Potree.utils.screenPass.render(s,this.edlMaterial,this.screenshot.target),Potree.endQuery(t,s.getContext())}let d=Potree.startQuery("EDL - rest",s.getContext());s.clearDepth(),e.transformationTool.update(),e.dispatchEvent({type:"render.pass.perspective_overlay",viewer:e}),s.render(e.clippingTool.sceneVolume,t),s.render(e.transformationTool.scene,t),s.setViewport(n-e.navigationCube.width,o-e.navigationCube.width,e.navigationCube.width,e.navigationCube.width),s.render(e.navigationCube,e.navigationCube.camera),s.setViewport(0,0,n,o),e.dispatchEvent({type:"render.pass.end",viewer:e}),Potree.endQuery(d,s.getContext())})}}class HQSplatRenderer{constructor(e){this.viewer=e,this.depthMaterials=new Map,this.attributeMaterials=new Map,this.normalizationMaterial=null,this.rtDepth=null,this.rtAttribute=null,this.gl=e.renderer.context,this.initialized=!1}init(){this.initialized||(this.normalizationMaterial=new Potree.NormalizationMaterial,this.normalizationMaterial.depthTest=!0,this.normalizationMaterial.depthWrite=!0,this.normalizationMaterial.transparent=!0,this.normalizationEDLMaterial=new Potree.NormalizationEDLMaterial,this.normalizationEDLMaterial.depthTest=!0,this.normalizationEDLMaterial.depthWrite=!0,this.normalizationEDLMaterial.transparent=!0,this.rtDepth=new THREE.WebGLRenderTarget(1024,1024,{minFilter:THREE.NearestFilter,magFilter:THREE.NearestFilter,format:THREE.RGBAFormat,type:THREE.FloatType,depthTexture:new THREE.DepthTexture(void 0,void 0,THREE.UnsignedIntType)}),this.rtAttribute=new THREE.WebGLRenderTarget(1024,1024,{minFilter:THREE.NearestFilter,magFilter:THREE.NearestFilter,format:THREE.RGBAFormat,type:THREE.FloatType,depthTexture:this.rtDepth.depthTexture}),this.initialized=!0)}resize(){const e=this.viewer;let t=e.renderer.getPixelRatio(),i=e.renderer.getSize().width,n=e.renderer.getSize().height;this.rtDepth.setSize(i*t,n*t),this.rtAttribute.setSize(i*t,n*t)}render(){this.init();const e=this.viewer;e.dispatchEvent({type:"render.pass.begin",viewer:e}),this.resize();let t=e.scene.getActiveCamera();e.renderer.setClearColor(0,0),e.renderer.clearTarget(this.rtDepth,!0,!0,!0),e.renderer.clearTarget(this.rtAttribute,!0,!0,!0);let i=e.renderer.getSize().width,n=e.renderer.getSize().height,o=Potree.startQuery("HQSplats",e.renderer.getContext()),s=e.scene.pointclouds.filter(e=>e.visible),r=new Map;for(let e of s){if(r.set(e,e.material),!this.attributeMaterials.has(e)){let t=new Potree.PointCloudMaterial;this.attributeMaterials.set(e,t)}if(!this.depthMaterials.has(e)){let t=new Potree.PointCloudMaterial;t.setDefine("depth_pass","#define hq_depth_pass"),t.setDefine("use_edl","#define use_edl"),this.depthMaterials.set(e,t)}}for(let e of s){let t=e.pcoGeometry.boundingBox.getSize().x,o=r.get(e),s=this.depthMaterials.get(e);s.size=o.size,s.minSize=o.minSize,s.maxSize=o.maxSize,s.pointSizeType=o.pointSizeType,s.visibleNodesTexture=o.visibleNodesTexture,s.weighted=!1,s.screenWidth=i,s.shape=Potree.PointShape.CIRCLE,s.screenHeight=n,s.uniforms.visibleNodes.value=o.visibleNodesTexture,s.uniforms.octreeSize.value=t,s.spacing=e.pcoGeometry.spacing*Math.max(...e.scale.toArray()),s.classification=o.classification,s.clipTask=o.clipTask,s.clipMethod=o.clipMethod,s.setClipBoxes(o.clipBoxes),s.setClipPolygons(o.clipPolygons),e.material=s}e.pRenderer.render(e.scene.scenePointCloud,t,this.rtDepth,{});{for(let e of s){let t=e.pcoGeometry.boundingBox.getSize().x,o=r.get(e),s=this.attributeMaterials.get(e);s.size=o.size,s.minSize=o.minSize,s.maxSize=o.maxSize,s.pointSizeType=o.pointSizeType,s.pointColorType=o.pointColorType,s.visibleNodesTexture=o.visibleNodesTexture,s.weighted=!0,s.screenWidth=i,s.screenHeight=n,s.shape=Potree.PointShape.CIRCLE,s.uniforms.visibleNodes.value=o.visibleNodesTexture,s.uniforms.octreeSize.value=t,s.spacing=e.pcoGeometry.spacing*Math.max(...e.scale.toArray()),s.classification=o.classification,s.elevationRange=o.elevationRange,s.gradient=o.gradient,s.intensityRange=o.intensityRange,s.intensityGamma=o.intensityGamma,s.intensityContrast=o.intensityContrast,s.intensityBrightness=o.intensityBrightness,s.rgbGamma=o.rgbGamma,s.rgbContrast=o.rgbContrast,s.rgbBrightness=o.rgbBrightness,s.weightRGB=o.weightRGB,s.weightIntensity=o.weightIntensity,s.weightElevation=o.weightElevation,s.weightRGB=o.weightRGB,s.weightClassification=o.weightClassification,s.weightReturnNumber=o.weightReturnNumber,s.weightSourceID=o.weightSourceID,s.color=o.color,s.clipTask=o.clipTask,s.clipMethod=o.clipMethod,s.setClipBoxes(o.clipBoxes),s.setClipPolygons(o.clipPolygons),e.material=s}let o=this.gl;e.renderer.setRenderTarget(null),e.pRenderer.render(e.scene.scenePointCloud,t,this.rtAttribute,{blendFunc:[o.SRC_ALPHA,o.ONE],depthWrite:!1})}for(let[e,t]of r)e.material=t;e.renderer.setRenderTarget(null),"skybox"===e.background?(e.renderer.setClearColor(0,0),e.renderer.clear(),e.skybox.camera.rotation.copy(e.scene.cameraP.rotation),e.skybox.camera.fov=e.scene.cameraP.fov,e.skybox.camera.aspect=e.scene.cameraP.aspect,e.skybox.camera.updateProjectionMatrix(),e.renderer.render(e.skybox.scene,e.skybox.camera)):"gradient"===e.background?(e.renderer.setClearColor(0,0),e.renderer.clear(),e.renderer.render(e.scene.sceneBG,e.scene.cameraBG)):"black"===e.background?(e.renderer.setClearColor(0,1),e.renderer.clear()):"white"===e.background?(e.renderer.setClearColor(16777215,1),e.renderer.clear()):(e.renderer.setClearColor(0,0),e.renderer.clear());{let t=this.useEDL?this.normalizationEDLMaterial:this.normalizationMaterial;this.useEDL&&(t.uniforms.edlStrength.value=e.edlStrength,t.uniforms.radius.value=e.edlRadius,t.uniforms.screenWidth.value=i,t.uniforms.screenHeight.value=n,t.uniforms.uEDLMap.value=this.rtDepth.texture),t.uniforms.uWeightMap.value=this.rtAttribute.texture,t.uniforms.uDepthMap.value=this.rtAttribute.depthTexture,Potree.utils.screenPass.render(e.renderer,t)}e.renderer.render(e.scene.scene,t),e.dispatchEvent({type:"render.pass.scene",viewer:e}),Potree.endQuery(o,e.renderer.getContext()),e.renderer.clearDepth(),e.transformationTool.update(),e.dispatchEvent({type:"render.pass.perspective_overlay",viewer:e}),e.renderer.render(e.controls.sceneControls,t),e.renderer.render(e.clippingTool.sceneVolume,t),e.renderer.render(e.transformationTool.scene,t),e.renderer.setViewport(i-e.navigationCube.width,n-e.navigationCube.width,e.navigationCube.width,e.navigationCube.width),e.renderer.render(e.navigationCube,e.navigationCube.camera),e.renderer.setViewport(0,0,i,n),e.dispatchEvent({type:"render.pass.end",viewer:e})}}class RepSnapshot{constructor(){this.target=null,this.camera=null}}class RepRenderer{constructor(e){this.viewer=e,this.edlMaterial=null,this.attributeMaterials=[],this.rtColor=null,this.gl=e.renderer.context,this.initEDL=this.initEDL.bind(this),this.resize=this.resize.bind(this),this.render=this.render.bind(this),this.snapshotRequested=!1,this.disableSnapshots=!1,this.snap={target:null,matrix:null},this.history={maxSnapshots:10,snapshots:[],version:0}}initEDL(){null==this.edlMaterial&&(this.edlMaterial=new Potree.EyeDomeLightingMaterial,this.rtColor=new THREE.WebGLRenderTarget(1024,1024,{minFilter:THREE.NearestFilter,magFilter:THREE.NearestFilter,format:THREE.RGBAFormat,type:THREE.FloatType}),this.rtColor.depthTexture=new THREE.DepthTexture,this.rtColor.depthTexture.type=THREE.UnsignedIntType,this.rtShadow=new THREE.WebGLRenderTarget(1024,1024,{minFilter:THREE.NearestFilter,magFilter:THREE.NearestFilter,format:THREE.RGBAFormat,type:THREE.FloatType}),this.rtShadow.depthTexture=new THREE.DepthTexture,this.rtShadow.depthTexture.type=THREE.UnsignedIntType)}resize(){let e=this.viewer.scaleFactor*this.viewer.renderArea.clientWidth,t=this.viewer.scaleFactor*this.viewer.renderArea.clientHeight,i=e/t;(this.rtColor.width!==e||this.rtColor.height!==t)&&this.rtColor.dispose(),viewer.scene.cameraP.aspect=i,viewer.scene.cameraP.updateProjectionMatrix();let n=2*viewer.moveSpeed;viewer.scene.cameraO.left=-n,viewer.scene.cameraO.right=n,viewer.scene.cameraO.top=1*n/i,viewer.scene.cameraO.bottom=1*-n/i,viewer.scene.cameraO.updateProjectionMatrix(),viewer.scene.cameraScreenSpace.top=1/i,viewer.scene.cameraScreenSpace.bottom=-1/i,viewer.scene.cameraScreenSpace.updateProjectionMatrix(),viewer.renderer.setSize(e,t),this.rtColor.setSize(e,t)}makeSnapshot(){this.snapshotRequested=!0}render(){this.initEDL();const e=this.viewer;this.resize();let t=e.scene.getActiveCamera(),i=Potree.startQuery("stuff",e.renderer.getContext());"skybox"===e.background?(e.renderer.setClearColor(0,0),e.renderer.clear(),e.skybox.camera.rotation.copy(e.scene.cameraP.rotation),e.skybox.camera.fov=e.scene.cameraP.fov,e.skybox.camera.aspect=e.scene.cameraP.aspect,e.skybox.camera.updateProjectionMatrix(),e.renderer.render(e.skybox.scene,e.skybox.camera)):"gradient"===e.background?(e.renderer.setClearColor(0,0),e.renderer.clear(),e.renderer.render(e.scene.sceneBG,e.scene.cameraBG)):"black"===e.background?(e.renderer.setClearColor(0,0),e.renderer.clear()):"white"===e.background&&(e.renderer.setClearColor(16777215,0),e.renderer.clear()),e.transformationTool.update(),e.renderer.render(e.scene.scene,t),e.renderer.clearTarget(this.rtShadow,!0,!0,!0),e.renderer.clearTarget(this.rtColor,!0,!0,!0);let n=e.renderArea.clientWidth,o=e.renderArea.clientHeight;for(let t of e.scene.pointclouds){let e=t.pcoGeometry.boundingBox.getSize().x,i=t.material;i.weighted=!1,i.useLogarithmicDepthBuffer=!1,i.useEDL=!0,i.screenWidth=n,i.screenHeight=o,i.uniforms.visibleNodes.value=t.material.visibleNodesTexture,i.uniforms.octreeSize.value=e,i.spacing=t.pcoGeometry.spacing*Math.max(t.scale.x,t.scale.y,t.scale.z)}if(e.shadowTestCam.updateMatrixWorld(),e.shadowTestCam.matrixWorldInverse.getInverse(e.shadowTestCam.matrixWorld),e.shadowTestCam.updateProjectionMatrix(),Potree.endQuery(i,e.renderer.getContext()),!this.disableSnapshots){this.snapshotRequested=!1;let i,n=Potree.startQuery("create snapshot",e.renderer.getContext());this.history.snapshots.length<this.history.maxSnapshots?((i=new RepSnapshot).target=new THREE.WebGLRenderTarget(1024,1024,{minFilter:THREE.NearestFilter,magFilter:THREE.NearestFilter,format:THREE.RGBAFormat}),i.target.depthTexture=new THREE.DepthTexture,i.target.depthTexture.type=THREE.UnsignedIntType):i=this.history.snapshots.pop();{let t=e.scaleFactor*e.renderArea.clientWidth,n=e.scaleFactor*e.renderArea.clientHeight;(i.target.width!==t||i.target.height!==n)&&i.target.dispose(),i.target.setSize(t,n)}e.renderer.clearTarget(i.target,!0,!0,!0),e.renderer.setRenderTarget(i.target);for(const n of e.scene.pointclouds){n.material.snapEnabled=!1,n.material.needsUpdate=!0;let o=this.history.version*(n.visibleNodes.length/this.history.maxSnapshots),s=(this.history.version+1)*(n.visibleNodes.length/this.history.maxSnapshots),r=n.visibleNodes.slice(o,s);e.pRenderer.renderOctree(n,r,t,i.target,{vnTextureNodes:r})}i.camera=t.clone(),this.history.version=(this.history.version+1)%this.history.maxSnapshots,this.debugPlane&&(this.debugPlane.material.map=i.target.texture),this.history.snapshots.unshift(i),Potree.endQuery(n,e.renderer.getContext())}{let i=Potree.startQuery("render snapshots",e.renderer.getContext());e.renderer.clearTarget(this.rtColor,!0,!0,!0),e.renderer.setRenderTarget(this.rtColor);for(const i of e.scene.pointclouds){if(this.disableSnapshots)i.material.snapEnabled=!1,i.material.needsUpdate=!0;else{i.material.snapEnabled=!0,i.material.numSnapshots=this.history.maxSnapshots,i.material.needsUpdate=!0;let e=i.material.uniforms;this.history.snapshots.length===this.history.maxSnapshots&&(e.uSnapshot.value=this.history.snapshots.map(e=>e.target.texture),e.uSnapshotDepth.value=this.history.snapshots.map(e=>e.target.depthTexture),e.uSnapView.value=this.history.snapshots.map(e=>e.camera.matrixWorldInverse),e.uSnapProj.value=this.history.snapshots.map(e=>e.camera.projectionMatrix),e.uSnapProjInv.value=this.history.snapshots.map(e=>(new THREE.Matrix4).getInverse(e.camera.projectionMatrix)),e.uSnapViewInv.value=this.history.snapshots.map(e=>(new THREE.Matrix4).getInverse(e.camera.matrixWorld)))}let n=i.visibleNodes.slice(0,50);e.pRenderer.renderOctree(i,n,t,this.rtColor,{vnTextureNodes:n}),this.disableSnapshots||(i.material.snapEnabled=!1,i.material.needsUpdate=!1)}Potree.endQuery(i,e.renderer.getContext())}{let t=Potree.startQuery("EDL",e.renderer.getContext());this.edlMaterial.uniforms.screenWidth.value=n,this.edlMaterial.uniforms.screenHeight.value=o,this.edlMaterial.uniforms.colorMap.value=this.rtColor.texture,this.edlMaterial.uniforms.edlStrength.value=e.edlStrength,this.edlMaterial.uniforms.radius.value=e.edlRadius,this.edlMaterial.uniforms.opacity.value=1,this.edlMaterial.depthTest=!0,this.edlMaterial.depthWrite=!0,this.edlMaterial.transparent=!0,Potree.utils.screenPass.render(e.renderer,this.edlMaterial),Potree.endQuery(t,e.renderer.getContext())}e.renderer.clearDepth(),e.renderer.render(e.controls.sceneControls,t),e.renderer.render(e.clippingTool.sceneVolume,t),e.renderer.render(e.transformationTool.scene,t),e.renderer.setViewport(e.renderer.domElement.clientWidth-e.navigationCube.width,e.renderer.domElement.clientHeight-e.navigationCube.width,e.navigationCube.width,e.navigationCube.width),e.renderer.render(e.navigationCube,e.navigationCube.camera),e.renderer.setViewport(0,0,e.renderer.domElement.clientWidth,e.renderer.domElement.clientHeight)}}Potree.View=class{constructor(){this.position=new THREE.Vector3(0,0,0),this.yaw=Math.PI/4,this._pitch=-Math.PI/4,this.radius=1,this.maxPitch=Math.PI/2,this.minPitch=-Math.PI/2,this.navigationMode=Potree.OrbitControls}clone(){let e=new Potree.View;return e.yaw=this.yaw,e._pitch=this.pitch,e.radius=this.radius,e.maxPitch=this.maxPitch,e.minPitch=this.minPitch,e.navigationMode=this.navigationMode,e}get pitch(){return this._pitch}set pitch(e){this._pitch=Math.max(Math.min(e,this.maxPitch),this.minPitch)}get direction(){let e=new THREE.Vector3(0,1,0);return e.applyAxisAngle(new THREE.Vector3(1,0,0),this.pitch),e.applyAxisAngle(new THREE.Vector3(0,0,1),this.yaw),e}set direction(e){if(0===e.x&&0===e.y)this.pitch=Math.PI/2*Math.sign(e.z);else{let t=Math.atan2(e.y,e.x)-Math.PI/2,i=Math.atan2(e.z,Math.sqrt(e.x*e.x+e.y*e.y));this.yaw=t,this.pitch=i}}lookAt(e){let t;1===arguments.length?t=(new THREE.Vector3).subVectors(e,this.position):3===arguments.length&&(t=(new THREE.Vector3).subVectors(new THREE.Vector3(...arguments),this.position));let i=t.length(),n=t.normalize();this.radius=i,this.direction=n}getPivot(){return(new THREE.Vector3).addVectors(this.position,this.direction.multiplyScalar(this.radius))}getSide(){let e=new THREE.Vector3(1,0,0);return e.applyAxisAngle(new THREE.Vector3(0,0,1),this.yaw),e}pan(e,t){let i=new THREE.Vector3(0,1,0);i.applyAxisAngle(new THREE.Vector3(1,0,0),this.pitch),i.applyAxisAngle(new THREE.Vector3(0,0,1),this.yaw);let n=this.getSide(),o=n.clone().cross(i),s=n.multiplyScalar(e).add(o.multiplyScalar(t));this.position=this.position.add(s)}translate(e,t,i){let n=new THREE.Vector3(0,1,0);n.applyAxisAngle(new THREE.Vector3(1,0,0),this.pitch),n.applyAxisAngle(new THREE.Vector3(0,0,1),this.yaw);let o=new THREE.Vector3(1,0,0);o.applyAxisAngle(new THREE.Vector3(0,0,1),this.yaw);let s=o.clone().cross(n),r=o.multiplyScalar(e).add(n.multiplyScalar(t)).add(s.multiplyScalar(i));this.position=this.position.add(r)}translateWorld(e,t,i){this.position.x+=e,this.position.y+=t,this.position.z+=i}},Potree.Scene=class extends THREE.EventDispatcher{constructor(e){super(),this.annotations=new Potree.Annotation,this.scene=new THREE.Scene,this.sceneBG=new THREE.Scene,this.scenePointClouds=e.map(e=>new THREE.Scene),this.cameraP=new THREE.PerspectiveCamera(this.fov,1,.1,1e6),this.cameraO=new THREE.OrthographicCamera(-1,1,1,-1,.1,1e6),this.cameras=[{perspective:this.cameraP,orthographic:this.cameraO}],this.cameraBG=new THREE.Camera,this.cameraScreenSpace=new THREE.OrthographicCamera(-1,1,1,-1,.1,10),this.cameraMode=Potree.CameraMode.PERSPECTIVE,this.pointclouds=[],this.measurements=[],this.profiles=[],this.volumes=[],this.polygonClipVolumes=[],this.extractorControls=null,this.rotationControls=null,this.fpControls=null,this.orbitControls=null,this.earthControls=null,this.geoControls=null,this.inputHandler=null,this.inputHandlers=[],this.view=new Potree.View,this.directionalLight=null,e.length>1&&this.cameras.push({perspective:new THREE.PerspectiveCamera(this.fov,1,.1,1e6),orthographic:new THREE.OrthographicCamera(-1,1,1,-1,.1,1e6)}),this.views=[],e.forEach(e=>{this.views.push(new Potree.View)}),this.initialize()}estimateHeightAt(e){let t=null,i=1/0;for(let n of this.pointclouds){if(void 0===n.root.geometryNode)continue;let o=null,s=1/0,r=e.clone().sub(n.position);r.z=0;let a=new THREE.Ray(r,new THREE.Vector3(0,0,1)),l=[n.root];for(;l.length>0;){let e=l.pop(),t=e.getBoundingBox();if(!a.intersectBox(t))continue;let i=e.geometryNode.mean.z+n.position.z+e.geometryNode.boundingBox.min.z;e.geometryNode.spacing<=s&&(o=i,s=e.geometryNode.spacing);for(let t of Object.keys(e.children)){e.children[t].geometryNode&&l.push(e.children[t])}}(null===t||s<i)&&(t=o,i=s)}return t}getBoundingBox(e=this.pointclouds){let t=new THREE.Box3;this.scenePointClouds.forEach(e=>e.updateMatrixWorld(!0)),this.referenceFrame.updateMatrixWorld(!0);for(let i of e){i.updateMatrixWorld(!0);let e=i.pcoGeometry.tightBoundingBox?i.pcoGeometry.tightBoundingBox:i.boundingBox,n=Potree.utils.computeTransformedBoundingBox(e,i.matrixWorld);t.union(n)}return t}addPointCloud(e){(this.scenePointClouds[this.pointclouds.length]||this.scenePointClouds[0]).add(e),this.pointclouds.push(e),this.dispatchEvent({type:"pointcloud_added",pointcloud:e})}addVolume(e){this.volumes.push(e),this.dispatchEvent({type:"volume_added",scene:this,volume:e})}removeVolume(e){let t=this.volumes.indexOf(e);t>-1&&(this.volumes.splice(t,1),this.dispatchEvent({type:"volume_removed",scene:this,volume:e}))}addPolygonClipVolume(e){this.polygonClipVolumes.push(e),this.dispatchEvent({type:"polygon_clip_volume_added",scene:this,volume:e})}removePolygonClipVolume(e){let t=this.polygonClipVolumes.indexOf(e);t>-1&&(this.polygonClipVolumes.splice(t,1),this.dispatchEvent({type:"polygon_clip_volume_removed",scene:this,volume:e}))}addMeasurement(e){e.lengthUnit=this.lengthUnit,this.measurements.push(e),this.dispatchEvent({type:"measurement_added",scene:this,measurement:e})}removeMeasurement(e){let t=this.measurements.indexOf(e);t>-1&&(this.measurements.splice(t,1),this.dispatchEvent({type:"measurement_removed",scene:this,measurement:e}))}addProfile(e){this.profiles.push(e),this.dispatchEvent({type:"profile_added",scene:this,profile:e})}removeProfile(e){let t=this.profiles.indexOf(e);t>-1&&(this.profiles.splice(t,1),this.dispatchEvent({type:"profile_removed",scene:this,profile:e}))}removeAllMeasurements(){for(;this.measurements.length>0;)this.removeMeasurement(this.measurements[0]);for(;this.profiles.length>0;)this.removeProfile(this.profiles[0]);for(;this.volumes.length>0;)this.removeVolume(this.volumes[0])}removeAllClipVolumes(){let e=this.volumes.filter(e=>!0===e.clip);for(let t of e)this.removeVolume(t);for(;this.polygonClipVolumes.length>0;)this.removePolygonClipVolume(this.polygonClipVolumes[0])}getActiveCamera(e=0){const t=this.cameraMode===Potree.CameraMode.PERSPECTIVE?"perspective":"orthographic";return this.cameras[e][t]}initialize(){this.referenceFrame=new THREE.Object3D,this.referenceFrame.matrixAutoUpdate=!1,this.scenePointClouds.forEach(e=>e.add(this.referenceFrame)),this.cameras.forEach(e=>{e.perspective.up.set(0,0,1),e.perspective.position.set(1e3,1e3,1e3),e.orthographic.up.set(0,0,1),e.orthographic.position.set(1e3,1e3,1e3)}),this.cameraScreenSpace.lookAt(new THREE.Vector3(0,0,0),new THREE.Vector3(0,0,-1),new THREE.Vector3(0,1,0)),this.directionalLight=new THREE.DirectionalLight(16777215,.5),this.directionalLight.position.set(10,10,10),this.directionalLight.lookAt(new THREE.Vector3(0,0,0)),this.scenePointClouds.forEach(e=>e.add(this.directionalLight));let e=new THREE.AmbientLight(5592405);this.scenePointClouds.forEach(t=>t.add(e));{let e=Potree.utils.createBackgroundTexture(512,512);e.minFilter=e.magFilter=THREE.NearestFilter,e.minFilter=e.magFilter=THREE.LinearFilter;let t=new THREE.Mesh(new THREE.PlaneBufferGeometry(2,2,0),new THREE.MeshBasicMaterial({map:e}));t.material.depthTest=!1,t.material.depthWrite=!1,this.sceneBG.add(t)}{let e=new THREE.DirectionalLight(16777215);e.position.set(10,10,1),e.target.position.set(0,0,0),this.scene.add(e)}{let e=new THREE.DirectionalLight(16777215);e.position.set(-10,10,1),e.target.position.set(0,0,0),this.scene.add(e)}{let e=new THREE.DirectionalLight(16777215);e.position.set(0,-10,20),e.target.position.set(0,0,0),this.scene.add(e)}}addAnnotation(e,t={}){e instanceof Array?t.position=(new THREE.Vector3).fromArray(e):e instanceof THREE.Vector3&&(t.position=e);let i=new Potree.Annotation(t);return this.annotations.add(i),i}getAnnotations(){return this.annotations}removeAnnotation(e){this.annotations.remove(e)}},Potree.Viewer=class extends THREE.EventDispatcher{constructor(e,t={}){super(),this.renderArea=e,this.renderAreas=[e],Array.isArray(e)&&e.length&&(this.renderArea=e[0],this.renderAreas=e),this.guiLoaded=!1,this.guiLoadTasks=[],this.messages=[],this.elMessages=$('\n\t\t<div id="message_listing" \n\t\t\tstyle="position: absolute; z-index: 1000; left: 10px; bottom: 10px">\n\t\t</div>'),$(this.renderArea).append(this.elMessages);try{if(0===$(this.renderArea).find("#potree_map").length){let e=$('\n\t\t\t\t\t<div id="potree_map" class="mapBox" style="position: absolute; left: 50px; top: 50px; width: 400px; height: 400px; display: none">\n\t\t\t\t\t\t<div id="potree_map_header" style="position: absolute; width: 100%; height: 25px; top: 0px; background-color: rgba(0,0,0,0.5); z-index: 1000; border-top-left-radius: 3px; border-top-right-radius: 3px;">\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div id="potree_map_content" class="map" style="position: absolute; z-index: 100; top: 25px; width: 100%; height: calc(100% - 25px); border: 2px solid rgba(0,0,0,0.5); box-sizing: border-box;"></div>\n\t\t\t\t\t</div>\n\t\t\t\t');$(this.renderArea).append(e)}if(0===$(this.renderArea).find("#potree_description").length){let e=$('<div id="potree_description" class="potree_info_text"></div>');$(this.renderArea).append(e)}if(0===$(this.renderArea).find("#potree_annotations").length){let e=$('\n\t\t\t\t\t<div id="potree_annotation_container" \n\t\t\t\t\t\tstyle="position: absolute; z-index: 100000; width: 100%; height: 100%; pointer-events: none;"></div>');$(this.renderArea).append(e)}this.pointCloudLoadedCallback=t.onPointCloudLoaded||function(){},this.server=null,this.fov=60,this.isFlipYZ=!1,this.useDEMCollisions=!1,this.generateDEM=!1,this.minNodeSize=30,this.edlStrength=1,this.edlRadius=1.4,this.useEDL=!1,this.classifications={0:{visible:!0,name:"never classified"},1:{visible:!0,name:"unclassified"},2:{visible:!0,name:"ground"},3:{visible:!0,name:"low vegetation"},4:{visible:!0,name:"medium vegetation"},5:{visible:!0,name:"high vegetation"},6:{visible:!0,name:"building"},7:{visible:!0,name:"low point(noise)"},8:{visible:!0,name:"key-point"},9:{visible:!0,name:"water"},12:{visible:!0,name:"overlap"}},this.moveSpeed=10,this.LENGTH_UNITS={METER:{code:"m"},FEET:{code:"ft"},INCH:{code:"″"}},this.lengthUnit=this.LENGTH_UNITS.METER,this.showBoundingBox=!1,this.showAnnotations=!0,this.freeze=!1,this.clipTask=Potree.ClipTask.HIGHLIGHT,this.clipMethod=Potree.ClipMethod.INSIDE_ANY,this.potreeRenderer=null,this.edlRenderer=null,this.renderer=null,this.pRenderers=[],this.scene=null,this.overlay=null,this.overlayCamera=null,this.inputHandler=null,this.clippingTool=null,this.transformationTool=null,this.navigationCube=null,this.skybox=null,this.clock=new THREE.Clock,this.background=null,this.initThree(),this.overlay=new THREE.Scene,this.overlayCamera=new THREE.OrthographicCamera(0,1,1,0,-1e3,1e3),this.pRenderers=this.renderers.map(e=>new Potree.Renderer(e));{let e=2.5,t=10;this.shadowTestCam=new THREE.PerspectiveCamera(90,1,e,t),this.shadowTestCam.position.set(3.5,-2.8,8.561),this.shadowTestCam.lookAt(new THREE.Vector3(0,0,4.87))}let e=new Potree.Scene(this.renderers);this.setScene(e);{this.inputHandlers=[],this.renderers.forEach((e,t)=>{const i=new Potree.InputHandler(this,e);i.setScene(this.scene),this.inputHandlers[t]=i}),this.inputHandler=this.inputHandlers[0],this.clippingTool=new Potree.ClippingTool(this),this.transformationTool=new Potree.TransformationTool(this),this.navigationCube=new Potree.NavigationCube(this),this.navigationCube.visible=!1,this.createControls(),this.clippingTool.setScene(this.scene);let e=e=>{if(1===this.scene.pointclouds.length){let t=e.pointcloud.boundingBox.getSize().length();t/=5,this.setMoveSpeed(t)}},t=e=>{this.inputHandlers.forEach(t=>t.deselect(e.volume))};this.addEventListener("scene_changed",i=>{this.inputHandlers.forEach(e=>e.setScene(i.scene)),this.clippingTool.setScene(this.scene),i.scene.hasEventListener("pointcloud_added",e)||i.scene.addEventListener("pointcloud_added",e),i.scene.hasEventListener("volume_removed",e)||i.scene.addEventListener("volume_removed",t)}),this.scene.addEventListener("volume_removed",t),this.scene.addEventListener("pointcloud_added",e)}this.setFOV(60),this.setEDLEnabled(!1),this.setEDLRadius(1.4),this.setEDLStrength(.4),this.setClipTask(Potree.ClipTask.HIGHLIGHT),this.setClipMethod(Potree.ClipMethod.INSIDE_ANY),this.setPointBudget(1e6),this.setShowBoundingBox(!1),this.setFreeze(!1),this.setNavigationMode(Potree.OrbitControls),this.setBackground("gradient"),this.scaleFactor=1,this.loadSettingsFromURL(),void 0!==t.useDefaultRenderLoop&&!0!==t.useDefaultRenderLoop||requestAnimationFrame(this.loop.bind(this)),this.loadGUI=this.loadGUI.bind(this)}catch(e){this.onCrash(e)}}onCrash(e){if($(this.renderArea).empty(),0===$(this.renderArea).find("#potree_failpage").length){let t=$('\n\t\t\t<div id="#potree_failpage" class="potree_failpage"> \n\t\t\t\t\n\t\t\t\t<h1>Potree Encountered An Error </h1>\n\n\t\t\t\t<p>\n\t\t\t\tThis may happen if your browser or graphics card is not supported.\n\t\t\t\t<br>\n\t\t\t\tWe recommend to use \n\t\t\t\t<a href="https://www.google.com/chrome/browser" target="_blank" style="color:initial">Chrome</a>\n\t\t\t\tor \n\t\t\t\t<a href="https://www.mozilla.org/" target="_blank">Firefox</a>.\n\t\t\t\t</p>\n\n\t\t\t\t<p>\n\t\t\t\tPlease also visit <a href="http://webglreport.com/" target="_blank">webglreport.com</a> and \n\t\t\t\tcheck whether your system supports WebGL.\n\t\t\t\t</p>\n\t\t\t\t<p>\n\t\t\t\tIf you are already using one of the recommended browsers and WebGL is enabled, \n\t\t\t\tconsider filing an issue report at <a href="https://github.com/potree/potree/issues" target="_blank">github</a>,<br>\n\t\t\t\tincluding your operating system, graphics card, browser and browser version, as well as the \n\t\t\t\terror message below.<br>\n\t\t\t\tPlease do not report errors on unsupported browsers.\n\t\t\t\t</p>\n\n\t\t\t\t<pre id="potree_error_console" style="width: 100%; height: 100%"></pre>\n\t\t\t\t\n\t\t\t</div>');t.find("#potree_error_console").html(e.stack),$(this.renderArea).append(t)}throw e}setScene(e){if(e===this.scene)return;let t=this.scene;this.scene=e,this.dispatchEvent({type:"scene_changed",oldScene:t,scene:e}),$(".annotation").detach(),this.scene.annotations.traverse(e=>{this.renderArea.appendChild(e.domElement[0])}),this.onAnnotationAdded||(this.onAnnotationAdded=(e=>{e.annotation.traverse(e=>{$("#potree_annotation_container").append(e.domElement),e.scene=this.scene})})),t&&t.annotations.removeEventListener("annotation_added",this.onAnnotationAdded),this.scene.annotations.addEventListener("annotation_added",this.onAnnotationAdded)}getControls(e,t){let i=null;return e===Potree.OrbitControls?i="orbitControls":e===Potree.ExtractorControls?i="extractorControls":e===Potree.FirstPersonControls?i="fpControls":e===Potree.RotationControls?i="rotationControls":e===Potree.EarthControls&&(i="earthControls"),this.controlInstances.map(e=>e[i])}getMinNodeSize(){return this.minNodeSize}setMinNodeSize(e){this.minNodeSize!==e&&(this.minNodeSize=e,this.dispatchEvent({type:"minnodesize_changed",viewer:this}))}getBackground(){return this.background}setBackground(e){this.background!==e&&("skybox"===e&&(this.skybox=Potree.utils.loadSkybox(new URL(Potree.resourcePath+"/textures/skybox2/").href)),this.background=e,this.dispatchEvent({type:"background_changed",viewer:this}))}setDescription(e){$("#potree_description")[0].innerHTML=e}setNavigationMode(e){this.scene.view.navigationMode=e}setShowBoundingBox(e){this.showBoundingBox!==e&&(this.showBoundingBox=e,this.dispatchEvent({type:"show_boundingbox_changed",viewer:this}))}getShowBoundingBox(){return this.showBoundingBox}setMoveSpeed(e){this.moveSpeed!==e&&(this.moveSpeed=e,this.dispatchEvent({type:"move_speed_changed",viewer:this,speed:e}))}getMoveSpeed(){return this.moveSpeed}setWeightClassification(e){for(let t=0;t<this.scene.pointclouds.length;t++)this.scene.pointclouds[t].material.weightClassification=e,this.dispatchEvent({type:"attribute_weights_changed"+t,viewer:this})}setFreeze(e){e=Boolean(e),this.freeze!==e&&(this.freeze=e,this.dispatchEvent({type:"freeze_changed",viewer:this}))}getFreeze(){return this.freeze}getClipTask(){return this.clipTask}getClipMethod(){return this.clipMethod}setClipTask(e){this.clipTask!==e&&(this.clipTask=e,this.dispatchEvent({type:"cliptask_changed",viewer:this}))}setClipMethod(e){this.clipMethod!==e&&(this.clipMethod=e,this.dispatchEvent({type:"clipmethod_changed",viewer:this}))}setPointBudget(e){Potree.pointBudget!==e&&(Potree.pointBudget=parseInt(e),this.dispatchEvent({type:"point_budget_changed",viewer:this}))}getPointBudget(){return Potree.pointBudget}setShowAnnotations(e){this.showAnnotations!==e&&(this.showAnnotations=e,this.dispatchEvent({type:"show_annotations_changed",viewer:this}))}getShowAnnotations(){return this.showAnnotations}setDEMCollisionsEnabled(e){this.useDEMCollisions!==e&&(this.useDEMCollisions=e,this.dispatchEvent({type:"use_demcollisions_changed",viewer:this}))}getDEMCollisionsEnabled(){return this.useDEMCollisions}setEDLEnabled(e){e=Boolean(e),this.useEDL!==e&&(this.useEDL=e,this.dispatchEvent({type:"use_edl_changed",viewer:this}))}getEDLEnabled(){return this.useEDL}setEDLRadius(e){this.edlRadius!==e&&(this.edlRadius=e,this.dispatchEvent({type:"edl_radius_changed",viewer:this}))}getEDLRadius(){return this.edlRadius}setEDLStrength(e){this.edlStrength!==e&&(this.edlStrength=e,this.dispatchEvent({type:"edl_strength_changed",viewer:this}))}getEDLStrength(){return this.edlStrength}setFOV(e){this.fov!==e&&(this.fov=e,this.dispatchEvent({type:"fov_changed",viewer:this}))}getFOV(){return this.fov}disableAnnotations(){this.scene.annotations.traverse(e=>{e.domElement.css("pointer-events","none")})}enableAnnotations(){this.scene.annotations.traverse(e=>{e.domElement.css("pointer-events","auto")})}setClassificationVisibility(e,t){this.classifications[e]?this.classifications[e].visible!==t&&(this.classifications[e].visible=t,this.dispatchEvent({type:"classification_visibility_changed",viewer:this})):(this.classifications[e]={visible:t,name:"no name"},this.dispatchEvent({type:"classification_visibility_changed",viewer:this}))}setLengthUnit(e){switch(e){case"m":this.lengthUnit=this.LENGTH_UNITS.METER;break;case"ft":this.lengthUnit=this.LENGTH_UNITS.FEET;break;case"in":this.lengthUnit=this.LENGTH_UNITS.INCH}this.dispatchEvent({type:"length_unit_changed",viewer:this,value:e})}zoomTo(e,t,i,n=0,o){let s,r=this.scene.cameraP.clone();r.rotation.copy(this.scene.cameraP.rotation),r.rotation.order="ZXY",r.rotation.x=Math.PI/2+e.pitch,r.rotation.z=e.yaw,r.updateMatrix(),r.updateMatrixWorld(),r.zoomTo(t,i),s=(s=t.boundingSphere?t.boundingSphere:t.geometry&&t.geometry.boundingSphere?t.geometry.boundingSphere:t.boundingBox.getBoundingSphere()).clone().applyMatrix4(t.matrixWorld);let a=e.position.clone(),l=r.position.clone(),h=e.getPivot(),d=s.center,c=(e.radius,l.distanceTo(d),TWEEN.Easing.Quartic.Out);{let t=a.clone(),i=new TWEEN.Tween(t).to(l,n);i.easing(c),i.onUpdate(()=>{e.position.copy(t)}),i.start()}{let t=h.clone(),i=new TWEEN.Tween(t).to(d,n);i.easing(c),i.onUpdate(()=>{e.lookAt(t)}),i.onComplete(()=>{e.lookAt(t),this.dispatchEvent({type:"focusing_finished",target:this}),setTimeout(o)}),this.dispatchEvent({type:"focusing_started",target:this}),i.start()}}showAbout(){$(function(){$("#about-panel").dialog()})}getBoundingBox(e){return this.scene.getBoundingBox(e)}fitToScreen(e=1,t=0,i=(()=>{})){this.activeControls&&!this.activeControls.some(e=>!e)?this.activeControls.forEach((n,o)=>{let s=this.getBoundingBox(this.scene.pointclouds),r=new THREE.Object3D;r.boundingBox=s,this.zoomTo(this.scene.views[o],r,e,t,i),n.stop()}):setTimeout(()=>this.fitToScreen(e,t,i),200)}toggleNavigationCube(){this.navigationCube.visible=!this.navigationCube.visible}setView(e){if(e)switch(e){case"F":this.setFrontView();break;case"B":this.setBackView();break;case"L":this.setLeftView();break;case"R":this.setRightView();break;case"U":this.setTopView();break;case"D":this.setBottomView()}}setTopView(){this.scene.view.yaw=0,this.scene.view.pitch=-Math.PI/2,this.fitToScreen()}setBottomView(){this.scene.view.yaw=-Math.PI,this.scene.view.pitch=Math.PI/2,this.fitToScreen()}setFrontView(){this.scene.view.yaw=0,this.scene.view.pitch=0,this.fitToScreen()}setBackView(){this.scene.view.yaw=Math.PI,this.scene.view.pitch=0,this.fitToScreen()}setLeftView(){this.scene.view.yaw=-Math.PI/2,this.scene.view.pitch=0,this.fitToScreen()}setRightView(){this.scene.view.yaw=Math.PI/2,this.scene.view.pitch=0,this.fitToScreen()}flipYZ(){this.isFlipYZ=!this.isFlipYZ,console.log("TODO")}setCameraMode(e){this.scene.cameraMode=e;for(let t of this.scene.pointclouds)t.material.useOrthographicCamera=e==Potree.CameraMode.ORTHOGRAPHIC}loadSettingsFromURL(){if(Potree.utils.getParameterByName("pointSize")&&this.setPointSize(parseFloat(Potree.utils.getParameterByName("pointSize"))),Potree.utils.getParameterByName("FOV")&&this.setFOV(parseFloat(Potree.utils.getParameterByName("FOV"))),Potree.utils.getParameterByName("opacity")&&this.setOpacity(parseFloat(Potree.utils.getParameterByName("opacity"))),Potree.utils.getParameterByName("edlEnabled")){let e="true"===Potree.utils.getParameterByName("edlEnabled");this.setEDLEnabled(e)}if(Potree.utils.getParameterByName("edlRadius")&&this.setEDLRadius(parseFloat(Potree.utils.getParameterByName("edlRadius"))),Potree.utils.getParameterByName("edlStrength")&&this.setEDLStrength(parseFloat(Potree.utils.getParameterByName("edlStrength"))),Potree.utils.getParameterByName("pointBudget")&&this.setPointBudget(parseFloat(Potree.utils.getParameterByName("pointBudget"))),Potree.utils.getParameterByName("showBoundingBox")){"true"===Potree.utils.getParameterByName("showBoundingBox")?this.setShowBoundingBox(!0):this.setShowBoundingBox(!1)}if(Potree.utils.getParameterByName("material")){let e=Potree.utils.getParameterByName("material");this.setMaterial(e)}if(Potree.utils.getParameterByName("pointSizing")){let e=Potree.utils.getParameterByName("pointSizing");this.setPointSizing(e)}if(Potree.utils.getParameterByName("quality")){let e=Potree.utils.getParameterByName("quality");this.setQuality(e)}if(Potree.utils.getParameterByName("position")){let e=Potree.utils.getParameterByName("position"),t=(e=e.replace("[","").replace("]","")).split(";"),i=parseFloat(t[0]),n=parseFloat(t[1]),o=parseFloat(t[2]);this.scene.view.position.set(i,n,o)}if(Potree.utils.getParameterByName("target")){let e=Potree.utils.getParameterByName("target"),t=(e=e.replace("[","").replace("]","")).split(";"),i=parseFloat(t[0]),n=parseFloat(t[1]),o=parseFloat(t[2]);this.scene.view.lookAt(new THREE.Vector3(i,n,o))}if(Potree.utils.getParameterByName("background")){let e=Potree.utils.getParameterByName("background");this.setBackground(e)}}createControls(){this.controlInstances=[],this.renderers.forEach((e,t)=>{const i={};i.rotationControls=new Potree.RotationControls(this),i.rotationControls.enabled=!1,i.rotationControls.addEventListener("start",this.disableAnnotations.bind(this)),i.rotationControls.addEventListener("end",this.enableAnnotations.bind(this)),i.fpControls=new Potree.FirstPersonControls(this),i.fpControls.enabled=!1,i.fpControls.addEventListener("start",this.disableAnnotations.bind(this)),i.fpControls.addEventListener("end",this.enableAnnotations.bind(this)),i.extractorControls=new Potree.ExtractorControls(this,t),i.extractorControls.enabled=!1,i.extractorControls.addEventListener("start",this.disableAnnotations.bind(this)),i.extractorControls.addEventListener("end",this.enableAnnotations.bind(this)),i.orbitControls=new Potree.OrbitControls(this,t),i.orbitControls.enabled=!1,i.orbitControls.addEventListener("start",this.disableAnnotations.bind(this)),i.orbitControls.addEventListener("end",this.enableAnnotations.bind(this)),i.earthControls=new Potree.EarthControls(this),i.earthControls.enabled=!1,i.earthControls.addEventListener("start",this.disableAnnotations.bind(this)),i.earthControls.addEventListener("end",this.enableAnnotations.bind(this)),this.controlInstances.push(i)})}toggleSidebar(){let e=$("#potree_render_area");"0px"!==e.css("left")?e.css("left","0px"):e.css("left","300px")}toggleMap(){this.mapView&&this.mapView.toggle()}onGUILoaded(e){this.guiLoaded?e():this.guiLoadTasks.push(e)}loadGUI(e){this.onGUILoaded(e);let t=this,i=$("#potree_sidebar_container");i.load(new URL(Potree.scriptPath+"/sidebar.html").href,()=>{i.css("width","300px"),i.css("height","100%");let e=document.createElement("img");e.src=new URL(Potree.resourcePath+"/icons/menu_button.svg").href,e.onclick=this.toggleSidebar,e.classList.add("potree_menu_toggle");let n=document.createElement("img");n.src=new URL(Potree.resourcePath+"/icons/map_icon.png").href,n.style.display="none",n.onclick=(e=>{this.toggleMap()}),n.id="potree_map_toggle",t.renderArea.insertBefore(n,t.renderArea.children[0]),t.renderArea.insertBefore(e,t.renderArea.children[0]),this.mapView=new Potree.MapView(this),this.mapView.init(),i18n.init({lng:"en",resGetPath:Potree.resourcePath+"/lang/__lng__/__ns__.json",preload:["en","fr","de","jp"],getAsync:!0,debug:!1},function(e){$("body").i18n()}),$(()=>{initSidebar(this);let e=$("<div>").load(new URL(Potree.scriptPath+"/profile.html").href,()=>{$(document.body).append(e.children()),this.profileWindow=new Potree.ProfileWindow(this),this.profileWindowController=new Potree.ProfileWindowController(this),$("#profile_window").draggable({handle:$("#profile_titlebar"),containment:$(document.body)}),$("#profile_window").resizable({containment:$(document.body),handles:"n, e, s, w"}),$(()=>{this.guiLoaded=!0;for(let e of this.guiLoadTasks)e()})})})})}setLanguage(e){i18n.setLng(e),$("body").i18n()}setServer(e){this.server=e}createRenderer(e,t){let i=e.clientWidth,n=e.clientHeight;this.renderers[t]=new THREE.WebGLRenderer({alpha:!0,premultipliedAlpha:!1}),this.renderers[t].sortObjects=!1,this.renderers[t].setSize(i,n),this.renderers[t].autoClear=!1,e.appendChild(this.renderers[t].domElement),this.renderers[t].domElement.tabIndex="2222",this.renderers[t].domElement.style.position="absolute",this.renderers[t].domElement.addEventListener("mousedown",()=>{this.renderers[t].domElement.focus()});let o=this.renderers[t].context;o.getExtension("EXT_frag_depth"),o.getExtension("WEBGL_depth_texture");let s=o.getExtension("OES_vertex_array_object");o.createVertexArray=s.createVertexArrayOES.bind(s),o.bindVertexArray=s.bindVertexArrayOES.bind(s)}initThree(){this.renderers=[],this.createRenderer(this.renderArea,0),this.renderAreas.length>1&&this.renderAreas.slice(1).forEach((e,t)=>this.createRenderer(e,t+1)),this.renderer=this.renderers[0]}updateAnnotations(){this.visibleAnnotations||(this.visibleAnnotations=new Set),this.scene.annotations.updateBounds(),this.scene.cameraP.updateMatrixWorld(),this.scene.cameraO.updateMatrixWorld();let e=this.renderer.getSize().width,t=this.renderer.getSize().height,i=this,n=[];this.scene.annotations.traverse(o=>{if(o===this.scene.annotations)return!0;if(!o.visible)return!1;o.scene=this.scene;let s=o.domElement,r=o.position;r||(r=o.boundingBox.getCenter());let a=i.scene.cameraP.position.distanceTo(r),l=o.boundingBox.getBoundingSphere().radius,h=new THREE.Vector3,d=0;if(h.copy(r).project(this.scene.getActiveCamera()),h.x=e*(h.x+1)/2,h.y=t*(1-(h.y+1)/2),i.scene.cameraMode==Potree.CameraMode.PERSPECTIVE){let e=Math.PI*i.scene.cameraP.fov/180,n=Math.tan(e/2);d=l*(.5*t/(n*a))}else d=Potree.utils.projectedRadiusOrtho(l,i.scene.cameraO.projectionMatrix,e,t);s.css("left",h.x+"px"),s.css("top",h.y+"px");let c=1e7-a*(1e7/this.scene.cameraP.far);if(o.descriptionVisible&&(c+=1e7),s.css("z-index",parseInt(c)),o.children.length>0){let e=d>o.collapseThreshold||o.boundingBox.containsPoint(this.scene.getActiveCamera().position);if(o.expand=e,!e){h.z>=-1&&h.z<=1&&n.push(o)}return e}h.z>=-1&&h.z<=1&&n.push(o)});let o=new Set(this.visibleAnnotations);for(let e of n)e.display=!0,o.delete(e);this.visibleAnnotations=n;for(let e of o)e.display=!1}update(e,t){Potree.measureTimings&&performance.mark("update-start");{let e=.5*Math.sin(5e-4*t)-.4,i=Math.cos(e),n=Math.sin(e);this.shadowTestCam.position.set(7*i,7*n,8.561),this.shadowTestCam.lookAt(new THREE.Vector3(0,0,0))}let i=this.scene,n=i.getActiveCamera();Potree.pointLoadLimit=2*Potree.pointBudget,this.scene.directionalLight.position.copy(n.position),this.scene.directionalLight.lookAt((new THREE.Vector3).addVectors(n.position,n.getWorldDirection()));for(let e of this.scene.pointclouds){if(!e.material._defaultIntensityRangeChanged){let t=e.pcoGeometry.root;if(null!=t&&t.loaded){let t=e.pcoGeometry.root.geometry.attributes;if(t.intensity){let i=t.intensity.array,n=[];for(let e=0;e<i.length;e++)n.push(i[e]);n.sort();let o=n[parseInt(.75*(n.length-1))];e.material.intensityRange=o<=1?[0,1]:o<=256?[0,255]:[0,o]}}}e.showBoundingBox=this.showBoundingBox,e.generateDEM=this.generateDEM,e.minimumNodePixelSize=this.minNodeSize}for(let e of this.scene.pointclouds){let t=e.material.classification,i=!1;for(let e of Object.keys(this.classifications)){let n=this.classifications[e].visible?1:0;t[e]?t[e].w!==n&&(t[e].w=n,i=!0):t.DEFAULT?(t[e]=t.DEFAULT,i=!0):(t[e]=new THREE.Vector4(.3,.6,.6,.5),i=!0)}i&&e.material.recomputeClassification()}if(this.showBoundingBox){let e=this.scene.scene.getObjectByName("potree_bounding_box_root");if(!e){let t=new THREE.Object3D;t.name="potree_bounding_box_root",this.scene.scene.add(t),e=t}let t=[];for(let e of this.scene.pointclouds)for(let i of e.visibleNodes.filter(e=>void 0!==e.boundingBoxNode)){let e=i.boundingBoxNode;t.push(e)}e.children=t}if(!this.freeze&&i.pointclouds.length){const e=i.cameras.map((e,t)=>i.getActiveCamera(t));let t=Potree.updatePointClouds(i.pointclouds,e,this.renderers);if(t.lowestSpacing!==1/0){let i=10*t.lowestSpacing;e.forEach(e=>{let t=-this.getBoundingBox().applyMatrix4(e.matrixWorldInverse).min.z;t=Math.max(1.5*t,1e3),i=Math.min(100,Math.max(.01,i)),t=Math.max(t,i+1e3),i===1/0&&(i=.1),e.near=i,e.far=t})}this.scene.cameraMode===Potree.CameraMode.ORTHOGRAPHIC&&e.forEach(e=>{e.near=-e.far})}this.scene.cameras.forEach(({orthographic:e,perspective:t},n)=>{t.fov=this.fov,t.position.copy(i.views[n].position),t.rotation.order="ZXY",t.rotation.x=Math.PI/2+this.scene.views[n].pitch,t.rotation.z=this.scene.views[n].yaw,e.position.copy(i.views[n].position),e.rotation.order="ZXY",e.rotation.x=Math.PI/2+this.scene.views[n].pitch,e.rotation.z=this.scene.views[n].yaw}),this.activeControls||(this.activeControls=[]);const o=this.getControls(i.view.navigationMode);o.forEach((t,n)=>{if(o[n]!==t&&(t&&(t.enabled=!1,this.inputHandlers[n].removeInputListener(this.getControls(i.view.navigationMode))),t=this.getControls(i.view.navigationMode,n),this.sceneControls=this.getControls(),t.enabled=!0,this.inputHandlers[n].addInputListener(this.getControls(i.view.navigationMode)),this.controlInstances[n]=t),null!==t&&(t.setScene(i),t.update(e)),t!==this.activeControls[n]&&(this.activeControls[n]&&(this.activeControls[n].enabled=!1,this.inputHandlers[n].removeInputListener(this.activeControls[n])),this.activeControls[n]=t,t.enabled=!0,this.inputHandlers[n].addInputListener(t)),null!==this.activeControls[n]){t.setScene(i),t.update(e);const{orthographic:o,perspective:s}=this.scene.cameras[n];s.position.copy(i.views[n].position),s.rotation.order="ZXY",s.rotation.x=Math.PI/2+this.scene.views[n].pitch,s.rotation.z=this.scene.views[n].yaw,o.position.copy(i.views[n].position),o.rotation.order="ZXY",o.rotation.x=Math.PI/2+this.scene.views[n].pitch,o.rotation.z=this.scene.views[n].yaw}}),this.scene.cameras.forEach((e,t)=>{const n=i.getActiveCamera(t);n.updateMatrix(),n.updateMatrixWorld(),n.matrixWorldInverse.getInverse(n.matrixWorld)}),void 0===this._previousCamera&&(this._previousCamera=this.scene.getActiveCamera().clone(),this._previousCamera.rotation.copy(this.scene.getActiveCamera())),this._previousCamera.matrixWorld.equals(n.matrixWorld)&&this._previousCamera.projectionMatrix.equals(n.projectionMatrix)||this.dispatchEvent({type:"camera_changed",previous:this._previousCamera,camera:n}),this._previousCamera=this.scene.getActiveCamera().clone(),this._previousCamera.rotation.copy(this.scene.getActiveCamera());{let e=[];e.push(...this.scene.volumes.filter(e=>e.clip));for(let t of this.scene.profiles)e.push(...t.boxes);let t=e.reduce((e,t)=>{t.viewIndex=t.viewIndex||0,e[t.viewIndex]||(e[t.viewIndex]=[]),t.updateMatrixWorld();let i=(new THREE.Matrix4).getInverse(t.matrixWorld),n=t.getWorldPosition();return e[t.viewIndex].push({box:t,inverse:i,position:n,viewIndex:t.viewIndex}),e},[]),i=this.scene.polygonClipVolumes.filter(e=>e.initialized);this.scene.pointclouds.filter(e=>e.visible).forEach((e,n)=>{e.material.setClipBoxes(t[n]||[]),e.material.setClipPolygons(i,this.clippingTool.maxPolygonVertices),e.material.clipTask=this.clipTask,e.material.clipMethod=this.clipMethod})}this.navigationCube.update(n.rotation),this.updateAnnotations(),this.mapView&&(this.mapView.update(e),this.mapView.sceneProjection&&$("#potree_map_toggle").css("display","block")),TWEEN.update(t),this.dispatchEvent({type:"update",delta:e,timestamp:t}),Potree.measureTimings&&(performance.mark("update-end"),performance.measure("update","update-start","update-end"))}render(){Potree.measureTimings&&performance.mark("render-start"),this.scene.cameras.forEach((e,t)=>{const i=this.renderers[t].domElement.parentNode.clientWidth,n=this.renderers[t].domElement.parentNode.clientHeight;this.renderer.getPixelRatio();let o=i/n;e.perspective.aspect=o,e.perspective.updateProjectionMatrix();let s=this.scene.views[t].radius;e.orthographic.left=-s,e.orthographic.right=s,e.orthographic.top=1*s/o,e.orthographic.bottom=1*-s/o,e.orthographic.updateProjectionMatrix(),this.scene.cameraScreenSpace.top=1/o,this.scene.cameraScreenSpace.bottom=-1/o,this.scene.cameraScreenSpace.updateProjectionMatrix(),this.renderers[t].setSize(i,n)});try{this.useRep?(this.repRenderer||(this.repRenderer=new RepRenderer(this)),this.repRenderer.render(this.renderer)):this.useHQ?(this.hqRenderer||(this.hqRenderer=new HQSplatRenderer(this)),this.hqRenderer.useEDL=this.useEDL,this.hqRenderer.render(this.renderer)):this.useEDL&&Potree.Features.SHADER_EDL.isSupported()?(this.edlRenderer||(this.edlRenderer=new EDLRenderer(this)),this.edlRenderer.render(this.renderer)):(this.potreeRenderer||(this.potreeRenderer=new PotreeRenderer(this)),this.potreeRenderer.render()),this.renderer.render(this.overlay,this.overlayCamera)}catch(e){this.onCrash(e)}Potree.measureTimings&&(performance.mark("render-end"),performance.measure("render","render-start","render-end"))}resolveTimings(e){if(Potree.measureTimings){if(this.toggle||(this.toggle=e),e-this.toggle>1e3){let t=performance.getEntriesByType("measure"),i=new Set;for(let e of t)i.add(e.name);let n=new Map;for(let e of i)n.set(e,{measures:[],sum:0,n:0,min:1/0,max:-1/0});for(let e of t){let t=n.get(e.name);t.measures.push(e),t.sum+=e.duration,t.n++,t.min=Math.min(t.min,e.duration),t.max=Math.max(t.max,e.duration)}let o=Potree.resolveQueries(this.renderer.getContext());for(let[e,t]of o){let o={measures:t.map(e=>({duration:e})),sum:t.reduce((e,t)=>e+t,0),n:t.length,min:Math.min(...t),max:Math.max(...t)},s=`[tq] ${e}`;n.set(s,o),i.add(s)}for(let[e,t]of n)t.mean=t.sum/t.n,t.measures.sort((e,t)=>e.duration-t.duration),1===t.n?t.median=t.measures[0].duration:t.n>1&&(t.median=t.measures[parseInt(t.n/2)].duration);let s=Array.from(i).reduce((e,t)=>Math.max(e,t.length),0)+5,r=10,a=10,l=10,h=6,d=` ${"NAME".padEnd(s)} |`+` ${"MIN".padStart(r)} |`+` ${"MEDIAN".padStart(a)} |`+` ${"MAX".padStart(l)} |`+` ${"SAMPLES".padStart(h)} \n`;d+=` ${"-".repeat(d.length)}\n`,i=Array.from(i).sort();for(let e of i){let t=n.get(e),i=t.min.toFixed(3),o=t.median.toFixed(3),c=t.max.toFixed(3),p=t.n;d+=` ${e.padEnd(s)} |`+` ${i.padStart(r)} |`+` ${o.padStart(a)} |`+` ${c.padStart(l)} |`+` ${p.toString().padStart(h)}\n`}d+="\n",console.log(d),performance.clearMarks(),performance.clearMeasures(),this.toggle=e}}}loop(e){requestAnimationFrame(this.loop.bind(this)),Potree.measureTimings&&performance.mark("loop-start"),window.THREE&&"85"===window.THREE.REVISION&&(this.update(this.clock.getDelta(),e),this.render()),Potree.measureTimings&&(performance.mark("loop-end"),performance.measure("loop","loop-start","loop-end")),this.resolveTimings(e),Potree.framenumber++}postError(e,t={}){let i=this.postMessage(e,t);return i.element.addClass("potree_message_error"),i}postMessage(e,t={}){let i=new Potree.Message(e);if(i.element.css("display","none"),i.elClose.click(()=>{i.element.slideToggle(100);let e=this.messages.indexOf(i);e>=0&&this.messages.splice(e,1)}),this.elMessages.prepend(i.element),i.element.slideToggle(100),this.messages.push(i),void 0!==t.duration){let e=500,n=200;setTimeout(()=>{i.element.animate({opacity:0},e),i.element.slideToggle(n)},t.duration)}return i}};class ProfilePointCloudEntry{constructor(){this.points=[];let e=ProfilePointCloudEntry.getMaterialInstance();e.uniforms.minSize.value=2,e.uniforms.maxSize.value=2,e.pointColorType=Potree.PointColorType.RGB,e.opacity=1,this.material=e,this.sceneNode=new THREE.Object3D}static releaseMaterialInstance(e){ProfilePointCloudEntry.materialPool.add(e)}static getMaterialInstance(){let e=ProfilePointCloudEntry.materialPool.values().next().value;return e?ProfilePointCloudEntry.materialPool.delete(e):e=new Potree.PointCloudMaterial,e}dispose(){for(let e of this.sceneNode.children)ProfilePointCloudEntry.releaseMaterialInstance(e.material),e.geometry.dispose();this.sceneNode.children=[]}addPoints(e){this.points.push(e);let t=()=>{let e=new THREE.BufferGeometry,t={position:new Float32Array(3e4),color:new Uint8Array(4e4),intensity:new Uint16Array(1e4),classification:new Uint8Array(1e4),returnNumber:new Uint8Array(1e4),numberOfReturns:new Uint8Array(1e4),pointSourceID:new Uint16Array(1e4)};e.addAttribute("position",new THREE.BufferAttribute(t.position,3)),e.addAttribute("color",new THREE.BufferAttribute(t.color,4,!0)),e.addAttribute("intensity",new THREE.BufferAttribute(t.intensity,1,!1)),e.addAttribute("classification",new THREE.BufferAttribute(t.classification,1,!1)),e.addAttribute("returnNumber",new THREE.BufferAttribute(t.returnNumber,1,!1)),e.addAttribute("numberOfReturns",new THREE.BufferAttribute(t.numberOfReturns,1,!1)),e.addAttribute("pointSourceID",new THREE.BufferAttribute(t.pointSourceID,1,!1)),e.drawRange.start=0,e.drawRange.count=0,this.currentBatch=new THREE.Points(e,this.material),this.sceneNode.add(this.currentBatch)};this.currentBatch||t();{let i={start:this.currentBatch.geometry.drawRange.count,count:0},n=new THREE.Box3;for(let o=0;o<e.numPoints;o++){if(i.start+i.count>=1e4){for(let e of Object.keys(this.currentBatch.geometry.attributes)){let t=this.currentBatch.geometry.attributes[e];t.updateRange.offset=i.start,t.updateRange.count=i.count,t.needsUpdate=!0}this.currentBatch.geometry.computeBoundingBox(),this.currentBatch.geometry.computeBoundingSphere(),t(),i={start:0,count:0}}let s=e.data.mileage[o],r=0,a=e.data.position[3*o+2];n.expandByPoint(new THREE.Vector3(s,r,a));let l=i.start+i.count,h=this.currentBatch.geometry.attributes;h.position.array[3*l+0]=s,h.position.array[3*l+1]=r,h.position.array[3*l+2]=a,e.data.color&&(h.color.array[4*l+0]=e.data.color[4*o+0],h.color.array[4*l+1]=e.data.color[4*o+1],h.color.array[4*l+2]=e.data.color[4*o+2],h.color.array[4*l+3]=255),e.data.intensity&&(h.intensity.array[l]=e.data.intensity[o]),e.data.classification&&(h.classification.array[l]=e.data.classification[o]),e.data.returnNumber&&(h.returnNumber.array[l]=e.data.returnNumber[o]),e.data.numberOfReturns&&(h.numberOfReturns.array[l]=e.data.numberOfReturns[o]),e.data.pointSourceID&&(h.pointSourceID.array[l]=e.data.pointSourceID[o]),i.count++,this.currentBatch.geometry.drawRange.count++}for(let e of Object.keys(this.currentBatch.geometry.attributes)){let t=this.currentBatch.geometry.attributes[e];t.updateRange.offset=i.start,t.updateRange.count=i.count,t.needsUpdate=!0}e.projectedBox=n,this.projectedBox=this.points.reduce((e,t)=>e.union(t.projectedBox),new THREE.Box3)}}}ProfilePointCloudEntry.materialPool=new Set,Potree.ProfileWindow=class extends THREE.EventDispatcher{constructor(e){super(),this.viewer=e,this.elRoot=$("#profile_window"),this.renderArea=this.elRoot.find("#profileCanvasContainer"),this.svg=d3.select("svg#profileSVG"),this.mouseIsDown=!1,this.projectedBox=new THREE.Box3,this.pointclouds=new Map,this.numPoints=0,this.lastAddPointsTimestamp=void 0,this.mouse=new THREE.Vector2(0,0),this.scale=new THREE.Vector3(1,1,1);let t=`${Potree.resourcePath}/icons/file_csv_2d.svg`;$("#potree_download_csv_icon").attr("src",t);let i=`${Potree.resourcePath}/icons/file_las_3d.svg`;$("#potree_download_las_icon").attr("src",i);let n=`${Potree.resourcePath}/icons/close.svg`;$("#closeProfileContainer").attr("src",n),this.initTHREE(),this.initSVG(),this.initListeners(),this.elRoot.i18n()}initListeners(){$(window).resize(()=>{this.render()}),this.renderArea.mousedown(e=>{this.mouseIsDown=!0}),this.renderArea.mouseup(e=>{this.mouseIsDown=!1});let e=()=>{let e=this.viewer.scene.getActiveCamera(),t=this.viewer.renderer.domElement,i=this.viewerPickSphere.position.distanceTo(e.position),n=10/Potree.utils.projectedRadius(1,e,i,t.clientWidth,t.clientHeight);this.viewerPickSphere.scale.set(n,n,n)};this.renderArea.mousemove(t=>{if(0===this.pointclouds.size)return;let i=this.renderArea[0].getBoundingClientRect(),n=t.clientX-i.left,o=t.clientY-i.top,s=new THREE.Vector2(n,o);if(this.mouseIsDown){this.autoFit=!1,this.lastDrag=(new Date).getTime();let e=[this.scaleX.invert(this.mouse.x),this.scaleY.invert(this.mouse.y)],t=[this.scaleX.invert(s.x),this.scaleY.invert(s.y)];this.camera.position.x-=t[0]-e[0],this.camera.position.z-=t[1]-e[1],this.render()}else if(this.pointclouds.size>0){let t=Math.abs(this.scaleX.invert(0)-this.scaleX.invert(40)),i=this.scaleX.invert(s.x),n=this.scaleY.invert(s.y),o=this.selectPoint(i,n,t);if(o){this.elRoot.find("#profileSelectionProperties").fadeIn(200),this.pickSphere.visible=!0,this.pickSphere.scale.set(.5*t,.5*t,.5*t),this.pickSphere.position.set(o.mileage,0,o.position[2]),this.viewerPickSphere.position.set(...o.position),this.viewer.scene.scene.children.includes(this.viewerPickSphere)||(this.viewer.scene.scene.add(this.viewerPickSphere),this.viewer.hasEventListener("update",e)||this.viewer.addEventListener("update",e));let i=this.elRoot.find("#profileSelectionProperties"),n="<table>";for(let e of Object.keys(o)){let t=o[e];if("position"===e){let e=[...t].map(e=>Potree.utils.addCommas(e.toFixed(3)));n+=`\n\t\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t\t<td>x</td>\n\t\t\t\t\t\t\t\t\t<td>${e[0]}</td>\n\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t\t<td>y</td>\n\t\t\t\t\t\t\t\t\t<td>${e[1]}</td>\n\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t\t<td>z</td>\n\t\t\t\t\t\t\t\t\t<td>${e[2]}</td>\n\t\t\t\t\t\t\t\t</tr>`}else if("color"===e)n+=`\n\t\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t\t<td>${e}</td>\n\t\t\t\t\t\t\t\t\t<td>${t.join(", ")}</td>\n\t\t\t\t\t\t\t\t</tr>`;else{if("normal"===e)continue;n+="mileage"===e?`\n\t\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t\t<td>${e}</td>\n\t\t\t\t\t\t\t\t\t<td>${t.toFixed(3)}</td>\n\t\t\t\t\t\t\t\t</tr>`:`\n\t\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t\t<td>${e}</td>\n\t\t\t\t\t\t\t\t\t<td>${t}</td>\n\t\t\t\t\t\t\t\t</tr>`}}n+="</table>",i.html(n),this.selectedPoint=o}else{this.viewer.scene.scene.add(this.viewerPickSphere);let t=this.viewer.scene.scene.children.indexOf(this.viewerPickSphere);t>=0&&this.viewer.scene.scene.children.splice(t,1),this.viewer.removeEventListener("update",e)}this.render()}this.mouse.copy(s)});let t=e=>{this.autoFit=!1;let t=0;void 0!==e.wheelDelta?t=e.wheelDelta:void 0!==e.detail&&(t=-e.detail);let i=Math.sign(t),n=[this.scaleX.invert(this.mouse.x),this.scaleY.invert(this.mouse.y)];i>0?this.scale.multiplyScalar(1.1):this.scale.multiplyScalar(100/110),this.updateScales();let o=[this.scaleX.invert(this.mouse.x),this.scaleY.invert(this.mouse.y)];this.camera.position.x-=o[0]-n[0],this.camera.position.z-=o[1]-n[1],this.render(),this.updateScales()};$(this.renderArea)[0].addEventListener("mousewheel",t,!1),$(this.renderArea)[0].addEventListener("DOMMouseScroll",t,!1),$("#closeProfileContainer").click(()=>{this.hide()}),$("#potree_download_csv_icon").click(()=>{let e=new Potree.Points;for(let[t,i]of this.pointclouds)for(let t of i.points)e.add(t);let t=Potree.CSVExporter.toString(e),i=new Blob([t],{type:"text/string"});$("#potree_download_profile_ortho_link").attr("href",URL.createObjectURL(i))}),$("#potree_download_las_icon").click(()=>{let e=new Potree.Points;for(let[t,i]of this.pointclouds)for(let t of i.points)e.add(t);let t=Potree.LASExporter.toLAS(e),i=new Blob([t],{type:"application/octet-binary"});$("#potree_download_profile_link").attr("href",URL.createObjectURL(i))})}selectPoint(e,t,i){let n={distance:1/0,pointcloud:null,points:null,index:null},o=new THREE.Box2(new THREE.Vector2(e-i,t-i),new THREE.Vector2(e+i,t+i)),s=0,r=0;for(let[a,l]of this.pointclouds)for(let h of l.points){if(new THREE.Box2(new THREE.Vector2(h.projectedBox.min.x,h.projectedBox.min.z),new THREE.Vector2(h.projectedBox.max.x,h.projectedBox.max.z)).intersectsBox(o)){0,s+=h.numPoints;for(let o=0;o<h.numPoints;o++){let s=h.data.mileage[o]-e,r=h.data.position[3*o+2]-t,l=Math.sqrt(s*s+r*r);l<i&&l<n.distance&&(n={distance:l,pointcloud:a,points:h,index:o})}}else 0,r+=h.numPoints}if(n.distance<1/0){let e=n.points,t={},i=Object.keys(e.data);for(let o of i){let i=e.data[o],s=i.length/e.numPoints,r=i.subarray(s*n.index,s*n.index+s);1===r.length?t[o]=r[0]:t[o]=r}return t}return null}initTHREE(){this.renderer=new THREE.WebGLRenderer({alpha:!0,premultipliedAlpha:!1}),this.renderer.setClearColor(0,0),this.renderer.setSize(10,10),this.renderer.autoClear=!0,this.renderArea.append($(this.renderer.domElement)),this.renderer.domElement.tabIndex="2222",this.renderer.context.getExtension("EXT_frag_depth"),$(this.renderer.domElement).css("width","100%"),$(this.renderer.domElement).css("height","100%"),this.camera=new THREE.OrthographicCamera(-1e3,1e3,1e3,-1e3,-1e3,1e3),this.camera.up.set(0,0,1),this.camera.rotation.order="ZXY",this.camera.rotation.x=Math.PI/2,this.scene=new THREE.Scene;let e=new THREE.SphereGeometry(1,16,16),t=new THREE.MeshNormalMaterial;this.pickSphere=new THREE.Mesh(e,t),this.scene.add(this.pickSphere),this.viewerPickSphere=new THREE.Mesh(e,t),this.pointCloudRoot=new THREE.Object3D,this.scene.add(this.pointCloudRoot)}initSVG(){let e=this.renderArea[0].clientWidth,t=this.renderArea[0].clientHeight,i=this.renderArea[0].offsetLeft;this.svg.selectAll("*").remove(),this.scaleX=d3.scale.linear().domain([this.camera.left+this.camera.position.x,this.camera.right+this.camera.position.x]).range([0,e]),this.scaleY=d3.scale.linear().domain([this.camera.bottom+this.camera.position.z,this.camera.top+this.camera.position.z]).range([t,0]),this.xAxis=d3.svg.axis().scale(this.scaleX).orient("bottom").innerTickSize(-t).outerTickSize(1).tickPadding(10).ticks(e/50),this.yAxis=d3.svg.axis().scale(this.scaleY).orient("left").innerTickSize(-e).outerTickSize(1).tickPadding(10).ticks(t/20),this.elXAxis=this.svg.append("g").attr("class","x axis").attr("transform",`translate(${i}, ${t})`).call(this.xAxis),this.elYAxis=this.svg.append("g").attr("class","y axis").attr("transform",`translate(${i}, 0)`).call(this.yAxis)}setProfile(e){this.render()}addPoints(e,t){let i=this.pointclouds.get(e);if(!i){i=new ProfilePointCloudEntry,this.pointclouds.set(e,i);let t=()=>this.render();e.material.addEventListener("material_property_changed",t),this.addEventListener("on_reset_once",()=>{e.material.removeEventListener("material_property_changed",t)})}if(i.addPoints(t),this.pointCloudRoot.add(i.sceneNode),this.projectedBox.union(i.projectedBox),this.autoFit){let e=this.renderArea[0].clientWidth,t=this.renderArea[0].clientHeight,i=this.projectedBox.getSize(),n=e/i.x,o=t/i.z,s=Math.min(n,o),r=this.projectedBox.getCenter();this.scale.set(s,s,1),this.camera.position.copy(r)}this.render();let n=0;for(let[e,t]of this.pointclouds.entries())n+=t.points.reduce((e,t)=>e+t.numPoints,0);$("#profile_num_points").html(Potree.utils.addCommas(n))}reset(){this.lastReset=(new Date).getTime(),this.dispatchEvent({type:"on_reset_once"}),this.removeEventListeners("on_reset_once"),this.autoFit=!0,this.projectedBox=new THREE.Box3;for(let[e,t]of this.pointclouds)t.dispose();this.pointclouds.clear(),this.mouseIsDown=!1,this.mouse.set(0,0),this.scale.set(1,1,1),this.pickSphere.visible=!1,this.pointCloudRoot.children=[],this.elRoot.find("#profileSelectionProperties").hide(),this.render()}show(){this.elRoot.fadeIn(),this.enabled=!0}hide(){this.elRoot.fadeOut(),this.enabled=!1}updateScales(){let e=this.renderArea[0].clientWidth,t=this.renderArea[0].clientHeight,i=-e/2/this.scale.x,n=+e/2/this.scale.x,o=+t/2/this.scale.y,s=-t/2/this.scale.y;this.camera.left=i,this.camera.right=n,this.camera.top=o,this.camera.bottom=s,this.camera.updateProjectionMatrix(),this.scaleX.domain([this.camera.left+this.camera.position.x,this.camera.right+this.camera.position.x]).range([0,e]),this.scaleY.domain([this.camera.bottom+this.camera.position.z,this.camera.top+this.camera.position.z]).range([t,0]);let r=this.renderArea[0].offsetLeft;this.xAxis.scale(this.scaleX).orient("bottom").innerTickSize(-t).outerTickSize(1).tickPadding(10).ticks(e/50),this.yAxis.scale(this.scaleY).orient("left").innerTickSize(-e).outerTickSize(1).tickPadding(10).ticks(t/20),this.elXAxis.attr("transform",`translate(${r}, ${t})`).call(this.xAxis),this.elYAxis.attr("transform",`translate(${r}, 0)`).call(this.yAxis)}requestScaleUpdate(){void 0===this.lastReset||void 0===this.lastScaleUpdate||(new Date).getTime()-this.lastReset>100&&(new Date).getTime()-this.lastScaleUpdate>100?(this.updateScales(),this.lastScaleUpdate=(new Date).getTime(),this.scaleUpdatePending=!1):this.scaleUpdatePending||(setTimeout(this.requestScaleUpdate.bind(this),100),this.scaleUpdatePending=!0)}render(){let e=this.renderArea[0].clientWidth,t=this.renderArea[0].clientHeight;{let i=Math.abs(this.scaleX.invert(0)-this.scaleX.invert(5));this.pickSphere.scale.set(i,i,i);for(let[e,t]of this.pointclouds){let i=t.material;i.pointColorType=e.material.pointColorType,i.uniforms.uColor=e.material.uniforms.uColor,i.uniforms.intensityRange.value=e.material.uniforms.intensityRange.value,i.elevationRange=e.material.elevationRange,i.rgbGamma=e.material.rgbGamma,i.rgbContrast=e.material.rgbContrast,i.rgbBrightness=e.material.rgbBrightness,i.intensityRange=e.material.intensityRange,i.intensityGamma=e.material.intensityGamma,i.intensityContrast=e.material.intensityContrast,i.intensityBrightness=e.material.intensityBrightness,i.uniforms.wRGB.value=e.material.uniforms.wRGB.value,i.uniforms.wIntensity.value=e.material.uniforms.wIntensity.value,i.uniforms.wElevation.value=e.material.uniforms.wElevation.value,i.uniforms.wClassification.value=e.material.uniforms.wClassification.value,i.uniforms.wReturnNumber.value=e.material.uniforms.wReturnNumber.value,i.uniforms.wSourceID.value=e.material.uniforms.wSourceID.value}this.pickSphere.visible=!0,this.renderer.setSize(e,t),this.renderer.render(this.scene,this.camera)}this.requestScaleUpdate()}},Potree.ProfileWindowController=class{constructor(e){this.viewer=e,this.profileWindow=e.profileWindow,this.profile=null,this.numPoints=0,this.threshold=6e4,this.scheduledRecomputeTime=null,this.enabled=!0,this.requests=[],this._recompute=(()=>{this.recompute()}),this.viewer.addEventListener("scene_changed",e=>{e.oldScene.removeEventListener("pointcloud_added",this._recompute),e.scene.addEventListener("pointcloud_added",this._recompute)}),this.viewer.scene.addEventListener("pointcloud_added",this._recompute)}setProfile(e){null!==this.profile&&this.profile!==e&&(this.profile.removeEventListener("marker_moved",this._recompute),this.profile.removeEventListener("marker_added",this._recompute),this.profile.removeEventListener("marker_removed",this._recompute),this.profile.removeEventListener("width_changed",this._recompute)),this.profile=e,this.profile.addEventListener("marker_moved",this._recompute),this.profile.addEventListener("marker_added",this._recompute),this.profile.addEventListener("marker_removed",this._recompute),this.profile.addEventListener("width_changed",this._recompute),this.recompute()}reset(){if(this.profileWindow.reset(),this.numPoints=0,this.profile)for(let e of this.requests)e.cancel()}progressHandler(e,t){for(let i of t.segments)this.profileWindow.addPoints(e,i.points),this.numPoints+=i.points.numPoints}cancel(){for(let e of this.requests)e.cancel();this.requests=[]}finishLevelThenCancel(){for(let e of this.requests)e.finishLevelThenCancel();this.requests=[]}recompute(){if(this.profile&&!(null!==this.scheduledRecomputeTime&&this.scheduledRecomputeTime>(new Date).getTime())){this.scheduledRecomputeTime=(new Date).getTime()+100,this.scheduledRecomputeTime=null,this.reset();for(let e of this.viewer.scene.pointclouds.filter(e=>e.visible)){let t=e.getPointsInProfile(this.profile,null,{onProgress:t=>{this.enabled&&(this.progressHandler(e,t.points),this.numPoints>this.threshold&&this.finishLevelThenCancel())},onFinish:e=>{this.enabled},onCancel:()=>{this.enabled}});this.requests.push(t)}}}},proj4.defs("UTM10N","+proj=utm +zone=10 +ellps=GRS80 +datum=NAD83 +units=m +no_defs"),Potree.MapView=class{constructor(e){this.viewer=e,this.webMapService="WMTS",this.mapProjectionName="EPSG:3857",this.mapProjection=proj4.defs(this.mapProjectionName),this.sceneProjection=null,this.extentsLayer=null,this.cameraLayer=null,this.toolLayer=null,this.sourcesLayer=null,this.sourcesLabelLayer=null,this.enabled=!1,this.createAnnotationStyle=(e=>[new ol.style.Style({image:new ol.style.Circle({radius:10,stroke:new ol.style.Stroke({color:[255,255,255,.5],width:2}),fill:new ol.style.Fill({color:[0,0,0,.5]})})})]),this.createLabelStyle=(e=>{return new ol.style.Style({image:new ol.style.Circle({radius:6,stroke:new ol.style.Stroke({color:"white",width:2}),fill:new ol.style.Fill({color:"green"})}),text:new ol.style.Text({font:"12px helvetica,sans-serif",text:e,fill:new ol.style.Fill({color:"#000"}),stroke:new ol.style.Stroke({color:"#fff",width:2})})})})}showSources(e){this.sourcesLayer.setVisible(e),this.sourcesLabelLayer.setVisible(e)}init(){this.elMap=$("#potree_map"),this.elMap.draggable({handle:$("#potree_map_header")}),this.elMap.resizable(),this.elTooltip=$('<div style="position: relative; z-index: 100"></div>'),this.elMap.append(this.elTooltip);let e=this.getExtentsLayer(),t=this.getCameraLayer();this.getToolLayer();let i=this.getSourcesLayer();this.getSourcesLabelLayer(),this.getAnnotationsLayer();let n=new ol.control.MousePosition({coordinateFormat:ol.coordinate.createStringXY(5),projection:"EPSG:4326",undefinedHTML:"&nbsp;"}),o=this,s=function(e){let t=e||{},n=document.createElement("button");n.innerHTML="T",n.addEventListener("click",()=>{let e=i.getVisible();o.showSources(!e)},!1),n.style.float="left",n.title="show / hide tiles";let s=document.createElement("a");s.href="#",s.download="list.txt",s.style.float="left";let r=document.createElement("button");r.innerHTML="D",s.appendChild(r);r.addEventListener("click",e=>{let t=a.getArray(),i=[document.location.protocol,"//",document.location.host,document.location.pathname].join("");if(0===t.length)return alert("No tiles were selected. Select area with ctrl + left mouse button!"),e.preventDefault(),e.stopImmediatePropagation(),!1;if(1===t.length){let e=t[0];if(e.source){let t=e.pointcloud.pcoGeometry.url,n=new URL(i+"/../"+t+"/../source/"+e.source.name);s.href=n.href,s.download=e.source.name}}else{let e="";for(let n=0;n<t.length;n++){let o=t[n];if(o.source){let t=o.pointcloud.pcoGeometry.url;e+=new URL(i+"/../"+t+"/../source/"+o.source.name).href+"\n"}}let n="data:application/octet-stream;base64,"+btoa(e);s.href=n,s.download="list_of_files.txt"}},!1);let l=document.createElement("div");l.className="ol-unselectable ol-control",l.appendChild(s),l.appendChild(n),l.style.bottom="0.5em",l.style.left="0.5em",l.title="Download file or list of selected tiles. Select tile with left mouse button or area using ctrl + left mouse.",ol.control.Control.call(this,{element:l,target:t.target})};ol.inherits(s,ol.control.Control),this.map=new ol.Map({controls:ol.control.defaults({attributionOptions:{collapsible:!1}}).extend([new s,n]),layers:[new ol.layer.Tile({source:new ol.source.OSM}),this.toolLayer,this.annotationsLayer,this.sourcesLayer,this.sourcesLabelLayer,e,t],target:"potree_map_content",view:new ol.View({center:this.olCenter,zoom:9})}),this.dragBoxLayer=new ol.layer.Vector({source:new ol.source.Vector({}),style:new ol.style.Style({stroke:new ol.style.Stroke({color:"rgba(0, 0, 255, 1)",width:2})})}),this.map.addLayer(this.dragBoxLayer);let r=new ol.interaction.Select;this.map.addInteraction(r);let a=r.getFeatures(),l=new ol.interaction.DragBox({condition:ol.events.condition.platformModifierKeyOnly});this.map.addInteraction(l),this.map.on("pointermove",e=>{let t=e.pixel,i=this.map.forEachFeatureAtPixel(t,function(e){return e});this.elTooltip.css("display","none"),i&&i.onHover&&i.onHover(e)}),this.map.on("click",e=>{let t=e.pixel,i=this.map.forEachFeatureAtPixel(t,function(e){return e});i&&i.onHover&&i.onClick(e)}),l.on("boxend",e=>{let t=l.getGeometry().getExtent();this.getSourcesLayer().getSource().forEachFeatureIntersectingExtent(t,e=>{a.push(e)})}),l.on("boxstart",e=>{a.clear()}),this.map.on("click",()=>{a.clear()}),this.viewer.addEventListener("scene_changed",e=>{this.setScene(e.scene)}),this.onPointcloudAdded=(e=>{this.load(e.pointcloud)}),this.onAnnotationAdded=(e=>{if(!this.sceneProjection)return;let t=e.annotation,i=t.position,n=this.toMap.forward([i.x,i.y]),o=new ol.Feature({geometry:new ol.geom.Point(n),name:t.title});o.setStyle(this.createAnnotationStyle(t.title)),o.onHover=(e=>{let i=o.getGeometry().getCoordinates(),n=this.map.getPixelFromCoordinate(i);this.elTooltip.html(t.title),this.elTooltip.css("display",""),this.elTooltip.css("left",`${n[0]}px`),this.elTooltip.css("top",`${n[1]}px`)}),o.onClick=(e=>{t.clickTitle()}),this.getAnnotationsLayer().getSource().addFeature(o)}),this.setScene(this.viewer.scene)}setScene(e){if(this.scene!==e){this.scene&&(this.scene.removeEventListener("pointcloud_added",this.onPointcloudAdded),this.scene.annotations.removeEventListener("annotation_added",this.onAnnotationAdded)),this.scene=e,this.scene.addEventListener("pointcloud_added",this.onPointcloudAdded),this.scene.annotations.addEventListener("annotation_added",this.onAnnotationAdded);for(let e of this.viewer.scene.pointclouds)this.load(e);this.viewer.scene.annotations.traverseDescendants(e=>{this.onAnnotationAdded({annotation:e})})}}getExtentsLayer(){if(this.extentsLayer)return this.extentsLayer;this.gExtent=new ol.geom.LineString([[0,0],[0,0]]);let e=new ol.Feature(this.gExtent),t=new ol.source.Vector({features:[e]});return this.extentsLayer=new ol.layer.Vector({source:t,style:new ol.style.Style({fill:new ol.style.Fill({color:"rgba(255, 255, 255, 0.2)"}),stroke:new ol.style.Stroke({color:"#0000ff",width:2}),image:new ol.style.Circle({radius:3,fill:new ol.style.Fill({color:"#0000ff"})})})}),this.extentsLayer}getAnnotationsLayer(){return this.annotationsLayer?this.annotationsLayer:(this.annotationsLayer=new ol.layer.Vector({source:new ol.source.Vector({}),style:new ol.style.Style({fill:new ol.style.Fill({color:"rgba(255, 0, 0, 1)"}),stroke:new ol.style.Stroke({color:"rgba(255, 0, 0, 1)",width:2})})}),this.annotationsLayer)}getCameraLayer(){if(this.cameraLayer)return this.cameraLayer;this.gCamera=new ol.geom.LineString([[0,0],[0,0],[0,0],[0,0]]);let e=new ol.Feature(this.gCamera),t=new ol.source.Vector({features:[e]});return this.cameraLayer=new ol.layer.Vector({source:t,style:new ol.style.Style({stroke:new ol.style.Stroke({color:"#0000ff",width:2})})}),this.cameraLayer}getToolLayer(){return this.toolLayer?this.toolLayer:(this.toolLayer=new ol.layer.Vector({source:new ol.source.Vector({}),style:new ol.style.Style({fill:new ol.style.Fill({color:"rgba(255, 0, 0, 1)"}),stroke:new ol.style.Stroke({color:"rgba(255, 0, 0, 1)",width:2})})}),this.toolLayer)}getSourcesLayer(){return this.sourcesLayer?this.sourcesLayer:(this.sourcesLayer=new ol.layer.Vector({source:new ol.source.Vector({}),style:new ol.style.Style({fill:new ol.style.Fill({color:"rgba(0, 0, 150, 0.1)"}),stroke:new ol.style.Stroke({color:"rgba(0, 0, 150, 1)",width:1})})}),this.sourcesLayer)}getSourcesLabelLayer(){return this.sourcesLabelLayer?this.sourcesLabelLayer:(this.sourcesLabelLayer=new ol.layer.Vector({source:new ol.source.Vector({}),style:new ol.style.Style({fill:new ol.style.Fill({color:"rgba(255, 0, 0, 0.1)"}),stroke:new ol.style.Stroke({color:"rgba(255, 0, 0, 1)",width:2})}),minResolution:.01,maxResolution:20}),this.sourcesLabelLayer)}setSceneProjection(e){this.sceneProjection=e,this.toMap=proj4(this.sceneProjection,this.mapProjection),this.toScene=proj4(this.mapProjection,this.sceneProjection)}getMapExtent(){let e=this.viewer.getBoundingBox();return{bottomLeft:this.toMap.forward([e.min.x,e.min.y]),bottomRight:this.toMap.forward([e.max.x,e.min.y]),topRight:this.toMap.forward([e.max.x,e.max.y]),topLeft:this.toMap.forward([e.min.x,e.max.y])}}getMapCenter(){let e=this.getMapExtent();return[(e.bottomLeft[0]+e.topRight[0])/2,(e.bottomLeft[1]+e.topRight[1])/2]}updateToolDrawings(){this.toolLayer.getSource().clear();let e=this.viewer.profileTool.profiles;for(let t=0;t<e.length;t++){let i=e[t],n=[];for(let e=0;e<i.points.length;e++){let t=i.points[e],o=this.toMap.forward([t.x,t.y]);n.push(o)}let o=new ol.geom.LineString(n),s=new ol.Feature(o);this.toolLayer.getSource().addFeature(s)}let t=this.viewer.measuringTool.measurements;for(let e=0;e<t.length;e++){let i=t[e],n=[];for(let e=0;e<i.points.length;e++){let t=i.points[e].position,o=this.toMap.forward([t.x,t.y]);n.push(o)}i.closed&&i.points.length>0&&n.push(n[0]);let o=new ol.geom.LineString(n),s=new ol.Feature(o);this.toolLayer.getSource().addFeature(s)}}load(e){if(!e)return;if(!e.projection)return;this.sceneProjection||this.setSceneProjection(e.projection);let t=this.getMapExtent(),i=this.getMapCenter(),n=this.map.getView();n.setCenter(i),this.gExtent.setCoordinates([t.bottomLeft,t.bottomRight,t.topRight,t.topLeft,t.bottomLeft]),n.fit(this.gExtent,[300,300],{constrainResolution:!1});let o=e.pcoGeometry.url+"/../sources.json";$.getJSON(o,t=>{let i=t.sources;for(let t=0;t<i.length;t++){let n=i[t],o=n.name,s=n.bounds,r={min:this.toMap.forward([s.min[0],s.min[1]]),max:this.toMap.forward([s.max[0],s.max[1]])},a=[(r.min[0]+r.max[0])/2,(r.min[1]+r.max[1])/2],l=this.toMap.forward([s.min[0],s.min[1]]),h=this.toMap.forward([s.max[0],s.min[1]]),d=this.toMap.forward([s.max[0],s.max[1]]),c=this.toMap.forward([s.min[0],s.max[1]]),p=new ol.Feature({geometry:new ol.geom.Polygon([[l,h,d,c,l]])});p.source=n,p.pointcloud=e,this.getSourcesLayer().getSource().addFeature(p),(p=new ol.Feature({geometry:new ol.geom.Point(a),name:o})).setStyle(this.createLabelStyle(o)),this.sourcesLabelLayer.getSource().addFeature(p)}})}toggle(){this.elMap.is(":visible")?(this.elMap.css("display","none"),this.enabled=!1):(this.elMap.css("display","block"),this.enabled=!0)}update(e){if(!this.sceneProjection)return;let t=$("#potree_map");if(!this.enabled)return;let i=this.map.getSize();(t.width()!==i[0]||t.height()!==i[1])&&this.map.updateSize();let n=this.viewer.scene.getActiveCamera(),o=this.map.getView().getResolution(),s=n.position,r=n.getWorldDirection().clone().multiplyScalar(30*o).add(s),a=n.position,l=r,h=(new THREE.Vector2).fromArray(this.toMap.forward([a.x,a.y])),d=(new THREE.Vector2).fromArray(this.toMap.forward([l.x,l.y])),c=(new THREE.Vector2).subVectors(d,h).normalize();d=h.clone().add(c.clone().multiplyScalar(30*o));let p=h.distanceTo(d),u=new THREE.Vector2(-c.y,c.x),m=h.toArray(),g=d.clone().sub(u.clone().multiplyScalar(.3*p)).toArray(),f=d.clone().add(u.clone().multiplyScalar(.3*p)).toArray();this.gCamera.setCoordinates([m,g,f,m])}get sourcesVisible(){return this.getSourcesLayer().getVisible()}set sourcesVisible(e){this.getSourcesLayer().setVisible(e)}};export const initSidebar=e=>{let t=function(e,t,i){let n=$(`\n\t\t\t<img src="${e}"\n\t\t\t\tstyle="width: 32px; height: 32px"\n\t\t\t\tclass="button-icon"\n\t\t\t\tdata-i18n="${t}" />\n\t\t`);return n.click(i),n},i=new Potree.MeasuringTool(e),n=new Potree.ProfileTool(e),o=new Potree.VolumeTool(e);!function(){$(".accordion > h3").each(function(){let e=$(this),t=$(this).next();t.hide(),e.click(function(){t.slideToggle()})});let t=[["EN","en"],["FR","fr"],["DE","de"],["JP","jp"]],i=$("#potree_languages");for(let n=0;n<t.length;n++){let[o,s]=t[n],r=$(`<a>${o}</a>`);r.click(()=>e.setLanguage(s)),0===n&&r.css("margin-left","30px"),i.append(r),n<t.length-1&&i.append($(document.createTextNode(" - ")))}}(),function(){$("#sldPointBudget").slider({value:e.getPointBudget(),min:1e5,max:1e7,step:1e3,slide:function(t,i){e.setPointBudget(i.value)}}),$("#sldFOV").slider({value:e.getFOV(),min:20,max:100,step:1,slide:function(t,i){e.setFOV(i.value)}}),$("#sldEDLRadius").slider({value:e.getEDLRadius(),min:1,max:4,step:.01,slide:function(t,i){e.setEDLRadius(i.value)}}),$("#sldEDLStrength").slider({value:e.getEDLStrength(),min:0,max:5,step:.01,slide:function(t,i){e.setEDLStrength(i.value)}}),e.addEventListener("point_budget_changed",function(t){$("#lblPointBudget")[0].innerHTML=Potree.utils.addCommas(e.getPointBudget()),$("#sldPointBudget").slider({value:e.getPointBudget()})}),e.addEventListener("fov_changed",function(t){$("#lblFOV")[0].innerHTML=parseInt(e.getFOV()),$("#sldFOV").slider({value:e.getFOV()})}),e.addEventListener("edl_radius_changed",function(t){$("#lblEDLRadius")[0].innerHTML=e.getEDLRadius().toFixed(1),$("#sldEDLRadius").slider({value:e.getEDLRadius()})}),e.addEventListener("edl_strength_changed",function(t){$("#lblEDLStrength")[0].innerHTML=e.getEDLStrength().toFixed(1),$("#sldEDLStrength").slider({value:e.getEDLStrength()})}),e.addEventListener("background_changed",function(t){$("input[name=background][value='"+e.getBackground()+"']").prop("checked",!0)}),$("#lblPointBudget")[0].innerHTML=Potree.utils.addCommas(e.getPointBudget()),$("#lblFOV")[0].innerHTML=parseInt(e.getFOV()),$("#lblEDLRadius")[0].innerHTML=e.getEDLRadius().toFixed(1),$("#lblEDLStrength")[0].innerHTML=e.getEDLStrength().toFixed(1),$("#chkEDLEnabled")[0].checked=e.getEDLEnabled();{let t=$("#background_options");t.selectgroup(),t.find("input").click(t=>{e.setBackground(t.target.value)});let i=e.getBackground();$(`input[name=background_options][value=${i}]`).trigger("click")}$("#chkEDLEnabled").click(()=>{e.setEDLEnabled($("#chkEDLEnabled").prop("checked"))})}(),function(){let s=$("#tools");s.append(t(Potree.resourcePath+"/icons/angle.png","[title]tt.angle_measurement",function(){$("#menu_measurements").next().slideDown();let e=i.startInsertion({showDistances:!1,showAngles:!0,showArea:!1,closed:!0,maxMarkers:3,name:"Angle"}),t=$("#jstree_scene").jstree().get_json("measurements").children.find(t=>t.data.uuid===e.uuid);$.jstree.reference(t.id).deselect_all(),$.jstree.reference(t.id).select_node(t.id)})),s.append(t(Potree.resourcePath+"/icons/point.svg","[title]tt.point_measurement",function(){$("#menu_measurements").next().slideDown();let e=i.startInsertion({showDistances:!1,showAngles:!1,showCoordinates:!0,showArea:!1,closed:!0,maxMarkers:1,name:"Point"}),t=$("#jstree_scene").jstree().get_json("measurements").children.find(t=>t.data.uuid===e.uuid);$.jstree.reference(t.id).deselect_all(),$.jstree.reference(t.id).select_node(t.id)})),s.append(t(Potree.resourcePath+"/icons/distance.svg","[title]tt.distance_measurement",function(){$("#menu_measurements").next().slideDown();let e=i.startInsertion({showDistances:!0,showArea:!1,closed:!1,name:"Distance"}),t=$("#jstree_scene").jstree().get_json("measurements").children.find(t=>t.data.uuid===e.uuid);$.jstree.reference(t.id).deselect_all(),$.jstree.reference(t.id).select_node(t.id)})),s.append(t(Potree.resourcePath+"/icons/height.svg","[title]tt.height_measurement",function(){$("#menu_measurements").next().slideDown();let e=i.startInsertion({showDistances:!1,showHeight:!0,showArea:!1,closed:!1,maxMarkers:2,name:"Height"}),t=$("#jstree_scene").jstree().get_json("measurements").children.find(t=>t.data.uuid===e.uuid);$.jstree.reference(t.id).deselect_all(),$.jstree.reference(t.id).select_node(t.id)})),s.append(t(Potree.resourcePath+"/icons/area.svg","[title]tt.area_measurement",function(){$("#menu_measurements").next().slideDown();let e=i.startInsertion({showDistances:!0,showArea:!0,closed:!0,name:"Area"}),t=$("#jstree_scene").jstree().get_json("measurements").children.find(t=>t.data.uuid===e.uuid);$.jstree.reference(t.id).deselect_all(),$.jstree.reference(t.id).select_node(t.id)})),s.append(t(Potree.resourcePath+"/icons/volume.svg","[title]tt.volume_measurement",function(){let e=o.startInsertion(),t=$("#jstree_scene").jstree().get_json("measurements").children.find(t=>t.data.uuid===e.uuid);$.jstree.reference(t.id).deselect_all(),$.jstree.reference(t.id).select_node(t.id)})),s.append(t(Potree.resourcePath+"/icons/profile.svg","[title]tt.height_profile",function(){$("#menu_measurements").next().slideDown();let e=n.startInsertion(),t=$("#jstree_scene").jstree().get_json("measurements").children.find(t=>t.data.uuid===e.uuid);$.jstree.reference(t.id).deselect_all(),$.jstree.reference(t.id).select_node(t.id)})),s.append(t(Potree.resourcePath+"/icons/reset_tools.svg","[title]tt.remove_all_measurement",function(){e.scene.removeAllMeasurements()}))}(),function(){let t=$("#menu_scene"),i=t.next().find("#scene_objects"),n=t.next().find("#scene_object_properties");{let i=t.next().find("#scene_export"),n=`${Potree.resourcePath}/icons/file_geojson.svg`,o=`${Potree.resourcePath}/icons/file_dxf.svg`;i.append(`\n\t\t\t\tExport: <br>\n\t\t\t\t<a href="#" download="measure.json"><img name="geojson_export_button" src="${n}" class="button-icon" style="height: 24px" /></a>\n\t\t\t\t<a href="#" download="measure.dxf"><img name="dxf_export_button" src="${o}" class="button-icon" style="height: 24px" /></a>\n\t\t\t`);let s=i.find("img[name=geojson_export_button]").parent();s.click(()=>{let t=e.scene,i=[...t.measurements,...t.profiles,...t.volumes],n=Potree.GeoJSONExporter.toString(i),o=window.URL.createObjectURL(new Blob([n],{type:"data:application/octet-stream"}));s.attr("href",o)});let r=i.find("img[name=dxf_export_button]").parent();r.click(()=>{let t=e.scene,i=[...t.measurements,...t.profiles,...t.volumes],n=Potree.DXFExporter.toString(i),o=window.URL.createObjectURL(new Blob([n],{type:"data:application/octet-stream"}));r.attr("href",o)})}let o=new Potree.PropertiesPanel(n,e);o.setScene(e.scene),localStorage.removeItem("jstree");let s=$('<div id="jstree_scene"></div>');i.append(s),s.jstree({plugins:["checkbox","state"],core:{dblclick_toggle:!1,state:{checked:!0},check_callback:!0,expand_selected_onload:!0},checkbox:{keep_selected_style:!0,three_state:!1,whole_node:!1,tie_selection:!1}});let r=(e,t,i,n)=>{let o=s.jstree("create_node",e,{text:t,icon:i,data:n},"last",!1,!1);return n.visible?s.jstree("check_node",o):s.jstree("uncheck_node",o),o},a=s.jstree("create_node","#",{text:"<b>Point Clouds</b>",id:"pointclouds"},"last",!1,!1),l=s.jstree("create_node","#",{text:"<b>Measurements</b>",id:"measurements"},"last",!1,!1),h=s.jstree("create_node","#",{text:"<b>Annotations</b>",id:"annotations"},"last",!1,!1),d=s.jstree("create_node","#",{text:"<b>Other</b>",id:"other"},"last",!1,!1);s.jstree("check_node",a),s.jstree("check_node",l),s.jstree("check_node",h),s.jstree("check_node",d),s.on("create_node.jstree",function(e,t){s.jstree("open_all")}),s.on("select_node.jstree",function(t,i){let n=i.node.data;o.set(n),e.inputHandler.deselectAll(),n instanceof Potree.Volume&&e.inputHandler.toggleSelection(n),$(e.renderer.domElement).focus()}),s.on("deselect_node.jstree",function(e,t){o.set(null)}),s.on("delete_node.jstree",function(e,t){o.set(null)}),s.on("dblclick",".jstree-anchor",function(t){let i=$.jstree.reference(this).get_node(this).data;if(!t.target.classList.contains("jstree-checkbox"))if(i instanceof Potree.PointCloudTree){let t=e.getBoundingBox([i]),n=new THREE.Object3D;n.boundingBox=t,e.zoomTo(n,1,500)}else if(i instanceof Potree.Measure){let t=i.points.map(e=>e.position),n=(new THREE.Box3).setFromPoints(t);if(n.getSize().length()>0){let t=new THREE.Object3D;t.boundingBox=n,e.zoomTo(t,2,500)}}else if(i instanceof Potree.Profile){let t=i.points,n=(new THREE.Box3).setFromPoints(t);if(n.getSize().length()>0){let t=new THREE.Object3D;t.boundingBox=n,e.zoomTo(t,1,500)}}else if(i instanceof Potree.Volume){let t=i.boundingBox.clone().applyMatrix4(i.matrixWorld);if(t.getSize().length()>0){let i=new THREE.Object3D;i.boundingBox=t,e.zoomTo(i,1,500)}}else if(i instanceof Potree.Annotation)i.moveHere(e.scene.getActiveCamera());else if(i instanceof Potree.PolygonClipVolume){let t,n=i.camera.getWorldDirection();i.camera instanceof THREE.OrthographicCamera?(n.multiplyScalar(i.camera.right),t=(new THREE.Vector3).addVectors(i.camera.position,n),e.setCameraMode(Potree.CameraMode.ORTHOGRAPHIC)):i.camera instanceof THREE.PerspectiveCamera&&(n.multiplyScalar(e.scene.view.radius),t=(new THREE.Vector3).addVectors(i.camera.position,n),e.setCameraMode(Potree.CameraMode.PERSPECTIVE)),e.scene.view.position.copy(i.camera.position),e.scene.view.lookAt(t)}else if(i instanceof THREE.SpotLight){let t=i.distance>0?i.distance/4:5e3,n=i.position,o=(new THREE.Vector3).addVectors(n,i.getWorldDirection().multiplyScalar(t));e.scene.view.position.copy(i.position),e.scene.view.lookAt(o)}else if(i instanceof THREE.Object3D){let t=(new THREE.Box3).setFromObject(i);if(t.getSize().length()>0){let i=new THREE.Object3D;i.boundingBox=t,e.zoomTo(i,1,500)}}}),s.on("uncheck_node.jstree",function(e,t){let i=t.node.data;i&&(i.visible=!1)}),s.on("check_node.jstree",function(e,t){let i=t.node.data;i&&(i.visible=!0)});let c=e=>{let t=e.pointcloud,i=`${Potree.resourcePath}/icons/cloud.svg`;r(a,t.name,i,t)},p=e=>{let t=e.measurement,i=Potree.getMeasurementIcon(t);r(l,t.name,i,t)},u=e=>{let t=e.volume,i=Potree.getMeasurementIcon(t),n=r(l,t.name,i,t);t.addEventListener("visibility_changed",()=>{t.visible?s.jstree("check_node",n):s.jstree("uncheck_node",n)})},m=e=>{let t=e.profile,i=Potree.getMeasurementIcon(t);r(l,t.name,i,t)};e.scene.addEventListener("pointcloud_added",c),e.scene.addEventListener("measurement_added",p),e.scene.addEventListener("profile_added",m),e.scene.addEventListener("volume_added",u),e.scene.addEventListener("polygon_clip_volume_added",u),e.scene.annotations.addEventListener("annotation_added",e=>{let t=e.annotation,i=`${Potree.resourcePath}/icons/annotation.svg`,n=this.annotationMapping.get(t.parent),o=r(n,t.title,i,t);this.annotationMapping.set(t,o)});let g=e=>{let t=$("#jstree_scene").jstree().get_json("measurements").children.find(t=>t.data.uuid===e.measurement.uuid);s.jstree("delete_node",t.id)};e.scene.addEventListener("measurement_removed",g),e.scene.addEventListener("volume_removed",e=>{let t=$("#jstree_scene").jstree().get_json("measurements").children.find(t=>t.data.uuid===e.volume.uuid);s.jstree("delete_node",t.id)}),e.scene.addEventListener("profile_removed",e=>{let t=$("#jstree_scene").jstree().get_json("measurements").children.find(t=>t.data.uuid===e.profile.uuid);s.jstree("delete_node",t.id)});{let t=`${Potree.resourcePath}/icons/annotation.svg`;this.annotationMapping=new Map,this.annotationMapping.set(e.scene.annotations,h),e.scene.annotations.traverseDescendants(e=>{let i=this.annotationMapping.get(e.parent),n=r(i,e.title,t,e);this.annotationMapping.set(e,n)})}for(let t of e.scene.pointclouds)c({pointcloud:t});for(let t of e.scene.measurements)p({measurement:t});for(let t of[...e.scene.volumes,...e.scene.polygonClipVolumes])u({volume:t});for(let t of e.scene.profiles)m({profile:t});r(d,"Camera",null,new THREE.Camera),e.addEventListener("scene_changed",e=>{o.setScene(e.scene),e.oldScene.removeEventListener("pointcloud_added",c),e.oldScene.removeEventListener("measurement_added",p),e.oldScene.removeEventListener("profile_added",m),e.oldScene.removeEventListener("volume_added",u),e.oldScene.removeEventListener("polygon_clip_volume_added",u),e.oldScene.removeEventListener("measurement_removed",g),e.scene.addEventListener("pointcloud_added",c),e.scene.addEventListener("measurement_added",p),e.scene.addEventListener("profile_added",m),e.scene.addEventListener("volume_added",u),e.scene.addEventListener("polygon_clip_volume_added",u),e.scene.addEventListener("measurement_removed",g)})}(),function(){let i=$("#navigation"),n=$("#sldMoveSpeed"),o=$("#lblMoveSpeed");i.append(t(Potree.resourcePath+"/icons/earth_controls_1.png","[title]tt.earth_control",function(){e.setNavigationMode(Potree.EarthControls)})),i.append(t(Potree.resourcePath+"/icons/fps_controls.svg","[title]tt.flight_control",function(){e.setNavigationMode(Potree.FirstPersonControls),e.fpControls.lockElevation=!1})),i.append(t(Potree.resourcePath+"/icons/helicopter_controls.svg","[title]tt.heli_control",()=>{e.setNavigationMode(Potree.FirstPersonControls),e.fpControls.lockElevation=!0})),i.append(t(Potree.resourcePath+"/icons/orbit_controls.svg","[title]tt.orbit_control",function(){e.setNavigationMode(Potree.OrbitControls)})),i.append(t(Potree.resourcePath+"/icons/focus.svg","[title]tt.focus_control",function(){e.fitToScreen()})),i.append(t(Potree.resourcePath+"/icons/navigation_cube.svg","[title]tt.navigation_cube_control",function(){e.toggleNavigationCube()})),i.append("<br>"),i.append(t(Potree.resourcePath+"/icons/left.svg","[title]tt.left_view_control",function(){e.setLeftView()})),i.append(t(Potree.resourcePath+"/icons/right.svg","[title]tt.right_view_control",function(){e.setRightView()})),i.append(t(Potree.resourcePath+"/icons/front.svg","[title]tt.front_view_control",function(){e.setFrontView()})),i.append(t(Potree.resourcePath+"/icons/back.svg","[title]tt.back_view_control",function(){e.setBackView()})),i.append(t(Potree.resourcePath+"/icons/top.svg","[title]tt.top_view_control",function(){e.setTopView()})),i.append(t(Potree.resourcePath+"/icons/bottom.svg","[title]tt.bottom_view_control",function(){e.setBottomView()}));let s=$('\n\t\t\t<selectgroup id="camera_projection_options">\n\t\t\t\t<option id="camera_projection_options_perspective" value="PERSPECTIVE">Perspective</option>\n\t\t\t\t<option id="camera_projection_options_orthigraphic" value="ORTHOGRAPHIC">Orthographic</option>\n\t\t\t</selectgroup>\n\t\t');i.append(s),s.selectgroup({title:"Camera Projection"}),s.find("input").click(t=>{e.setCameraMode(Potree.CameraMode[t.target.value])});let r=Object.keys(Potree.CameraMode).filter(t=>Potree.CameraMode[t]===e.scene.cameraMode);s.find(`input[value=${r}]`).trigger("click");let a=new THREE.Vector2(1,1e4),l=function(e){return Math.pow((e-a.x)/a.y,.25)};n.slider({value:l(e.getMoveSpeed()),min:0,max:1,step:.01,slide:function(t,i){var n;e.setMoveSpeed((n=i.value,Math.pow(n,4)*a.y+a.x))}}),e.addEventListener("move_speed_changed",function(t){o.html(e.getMoveSpeed().toFixed(1)),n.slider({value:l(e.getMoveSpeed())})}),o.html(e.getMoveSpeed().toFixed(1))}(),function(){let t=$("#classificationList"),i=function(i,n){let o=$(`\n\t\t\t\t<li>\n\t\t\t\t\t<label style="whitespace: nowrap">\n\t\t\t\t\t\t<input id="${"chkClassification_"+i}" type="checkbox" checked/>\n\t\t\t\t\t\t<span>${n}</span>\n\t\t\t\t\t</label>\n\t\t\t\t</li>\n\t\t\t`);o.find("input").click(t=>{e.setClassificationVisibility(i,t.target.checked)}),t.append(o)};i(0,"never classified"),i(1,"unclassified"),i(2,"ground"),i(3,"low vegetation"),i(4,"medium vegetation"),i(5,"high vegetation"),i(6,"building"),i(7,"low point(noise)"),i(8,"key-point"),i(9,"water"),i(12,"overlap")}(),function(){e.addEventListener("cliptask_changed",function(e){console.log("TODO")}),e.addEventListener("clipmethod_changed",function(e){console.log("TODO")});{let t=$("#cliptask_options");t.selectgroup({title:"Clip Task"}),t.find("input").click(t=>{e.setClipTask(Potree.ClipTask[t.target.value])});let i=Object.keys(Potree.ClipTask).filter(t=>Potree.ClipTask[t]===e.clipTask);t.find(`input[value=${i}]`).trigger("click")}{let t=$("#clipmethod_options");t.selectgroup({title:"Clip Method"}),t.find("input").click(t=>{e.setClipMethod(Potree.ClipMethod[t.target.value])});let i=Object.keys(Potree.ClipMethod).filter(t=>Potree.ClipMethod[t]===e.clipMethod);t.find(`input[value=${i}]`).trigger("click")}let i=$("#clipping_tools");i.append(t(Potree.resourcePath+"/icons/clip_volume.svg","[title]tt.clip_volume",()=>{let e=o.startInsertion({clip:!0}),t=$("#jstree_scene").jstree().get_json("measurements").children.find(t=>t.data.uuid===e.uuid);$.jstree.reference(t.id).deselect_all(),$.jstree.reference(t.id).select_node(t.id)})),i.append(t(Potree.resourcePath+"/icons/clip-polygon.svg","[title]tt.clip_polygon",()=>{let t=e.clippingTool.startInsertion({type:"polygon"}),i=$("#jstree_scene").jstree().get_json("measurements").children.find(e=>e.data.uuid===t.uuid);$.jstree.reference(i.id).deselect_all(),$.jstree.reference(i.id).select_node(i.id)}));{let n=new Potree.ScreenBoxSelectTool(e);i.append(t(Potree.resourcePath+"/icons/clip-screen.svg","[title]tt.screen_clip_box",()=>{if(!(e.scene.getActiveCamera()instanceof THREE.OrthographicCamera))return void e.postMessage("Switch to Orthographic Camera Mode before using the Screen-Box-Select tool.",{duration:2e3});let t=n.startInsertion(),i=$("#jstree_scene").jstree().get_json("measurements").children.find(e=>e.data.uuid===t.uuid);$.jstree.reference(i.id).deselect_all(),$.jstree.reference(i.id).select_node(i.id)}))}i.append(t(Potree.resourcePath+"/icons/remove.svg","[title]tt.remove_all_measurement",()=>{e.scene.removeAllClipVolumes()}))}(),function(){$("#sldMinNodeSize").slider({value:e.getMinNodeSize(),min:0,max:1e3,step:.01,slide:function(t,i){e.setMinNodeSize(i.value)}}),e.addEventListener("minnodesize_changed",function(t){$("#lblMinNodeSize").html(parseInt(e.getMinNodeSize())),$("#sldMinNodeSize").slider({value:e.getMinNodeSize()})}),$("#lblMinNodeSize").html(parseInt(e.getMinNodeSize()));{let t=$("#splat_quality_options");t.selectgroup({title:"Splat Quality"}),t.find("input").click(t=>{"standard"===t.target.value?e.useHQ=!1:"hq"===t.target.value&&(e.useHQ=!0)});let i=e.useHQ?"hq":"standard";t.find(`input[value=${i}]`).trigger("click")}$("#show_bounding_box").click(()=>{e.setShowBoundingBox($("#show_bounding_box").prop("checked"))}),$("#set_freeze").click(function(){e.setFreeze($("#set_freeze").prop("checked"))})}(),$("#potree_version_number").html(Potree.version.major+"."+Potree.version.minor+Potree.version.suffix),$(".perfect_scrollbar").perfectScrollbar()};class MeasurePanel{constructor(e,t,i){this.viewer=e,this.measurement=t,this.propertiesPanel=i,this._update=(()=>{this.update()})}createCoordinatesTable(e){let t=$('\n\t\t\t<table class="measurement_value_table">\n\t\t\t\t<tr>\n\t\t\t\t\t<th>x</th>\n\t\t\t\t\t<th>y</th>\n\t\t\t\t\t<th>z</th>\n\t\t\t\t\t<th></th>\n\t\t\t\t</tr>\n\t\t\t</table>\n\t\t'),i=Potree.resourcePath+"/icons/copy.svg";for(let n of e){let e=Potree.utils.addCommas(n.x.toFixed(3)),o=Potree.utils.addCommas(n.y.toFixed(3)),s=Potree.utils.addCommas(n.z.toFixed(3)),r=$(`\n\t\t\t\t<tr>\n\t\t\t\t\t<td><span>${e}</span></td>\n\t\t\t\t\t<td><span>${o}</span></td>\n\t\t\t\t\t<td><span>${s}</span></td>\n\t\t\t\t\t<td align="right" style="width: 25%">\n\t\t\t\t\t\t<img name="copy" title="copy" class="button-icon" src="${i}" style="width: 16px; height: 16px"/>\n\t\t\t\t\t</td>\n\t\t\t\t</tr>\n\t\t\t`);this.elCopy=r.find("img[name=copy]"),this.elCopy.click(()=>{let e=n.toArray().map(e=>e.toFixed(3)).join(", ");Potree.utils.clipboardCopy(e),this.viewer.postMessage(`Copied value to clipboard: <br>'${e}'`,{duration:3e3})}),t.append(r)}return t}createAttributesTable(){let e=$('<table class="measurement_value_table"></table>'),t=this.measurement.points[0];if(t.color){let i=t.color.join(", ");e.append($(`\n\t\t\t\t<tr>\n\t\t\t\t\t<td>rgb</td>\n\t\t\t\t\t<td>${i}</td>\n\t\t\t\t</tr>\n\t\t\t`))}return e}update(){}}class DistancePanel extends MeasurePanel{constructor(e,t,i){super(e,t,i);let n=Potree.resourcePath+"/icons/remove.svg";this.elContent=$(`\n\t\t\t<div class="measurement_content selectable">\n\t\t\t\t<span class="coordinates_table_container"></span>\n\t\t\t\t<br>\n\t\t\t\t<table id="distances_table" class="measurement_value_table"></table>\n\n\t\t\t\t\x3c!-- ACTIONS --\x3e\n\t\t\t\t<div style="display: flex; margin-top: 12px">\n\t\t\t\t\t<span></span>\n\t\t\t\t\t<span style="flex-grow: 1"></span>\n\t\t\t\t\t<img name="remove" class="button-icon" src="${n}" style="width: 16px; height: 16px"/>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t`),this.elRemove=this.elContent.find("img[name=remove]"),this.elRemove.click(()=>{this.viewer.scene.removeMeasurement(t)}),this.propertiesPanel.addVolatileListener(t,"marker_added",this._update),this.propertiesPanel.addVolatileListener(t,"marker_removed",this._update),this.propertiesPanel.addVolatileListener(t,"marker_moved",this._update),this.update()}update(){let e=this.elContent.find(".coordinates_table_container");e.empty(),e.append(this.createCoordinatesTable(this.measurement.points.map(e=>e.position)));let t=this.measurement.points.map(e=>e.position),i=[];for(let e=0;e<t.length-1;e++){let n=t[e].distanceTo(t[e+1]);i.push(n.toFixed(3))}let n=this.measurement.getTotalDistance().toFixed(3),o=this.elContent.find("#distances_table");o.empty();for(let e=0;e<i.length;e++){let t=0===e?"Distances: ":"",n=i[e],s=$(`\n\t\t\t\t<tr>\n\t\t\t\t\t<th>${t}</th>\n\t\t\t\t\t<td style="width: 100%; padding-left: 10px">${n}</td>\n\t\t\t\t</tr>`);o.append(s)}let s=$(`\n\t\t\t<tr>\n\t\t\t\t<th>Total: </td><td style="width: 100%; padding-left: 10px">${n}</th>\n\t\t\t</tr>`);o.append(s)}}class PointPanel extends MeasurePanel{constructor(e,t,i){super(e,t,i);let n=Potree.resourcePath+"/icons/remove.svg";this.elContent=$(`\n\t\t\t<div class="measurement_content selectable">\n\t\t\t\t<span class="coordinates_table_container"></span>\n\t\t\t\t<br>\n\t\t\t\t<span class="attributes_table_container"></span>\n\n\t\t\t\t\x3c!-- ACTIONS --\x3e\n\t\t\t\t<div style="display: flex; margin-top: 12px">\n\t\t\t\t\t<span></span>\n\t\t\t\t\t<span style="flex-grow: 1"></span>\n\t\t\t\t\t<img name="remove" class="button-icon" src="${n}" style="width: 16px; height: 16px"/>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t`),this.elRemove=this.elContent.find("img[name=remove]"),this.elRemove.click(()=>{this.viewer.scene.removeMeasurement(t)}),this.propertiesPanel.addVolatileListener(t,"marker_added",this._update),this.propertiesPanel.addVolatileListener(t,"marker_removed",this._update),this.propertiesPanel.addVolatileListener(t,"marker_moved",this._update),this.update()}update(){let e=this.elContent.find(".coordinates_table_container");e.empty(),e.append(this.createCoordinatesTable(this.measurement.points.map(e=>e.position)));let t=this.elContent.find(".attributes_table_container");t.empty(),t.append(this.createAttributesTable())}}class AreaPanel extends MeasurePanel{constructor(e,t,i){super(e,t,i);let n=Potree.resourcePath+"/icons/remove.svg";this.elContent=$(`\n\t\t\t<div class="measurement_content selectable">\n\t\t\t\t<span class="coordinates_table_container"></span>\n\t\t\t\t<br>\n\t\t\t\t<span style="font-weight: bold">Area: </span>\n\t\t\t\t<span id="measurement_area"></span>\n\n\t\t\t\t\x3c!-- ACTIONS --\x3e\n\t\t\t\t<div style="display: flex; margin-top: 12px">\n\t\t\t\t\t<span></span>\n\t\t\t\t\t<span style="flex-grow: 1"></span>\n\t\t\t\t\t<img name="remove" class="button-icon" src="${n}" style="width: 16px; height: 16px"/>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t`),this.elRemove=this.elContent.find("img[name=remove]"),this.elRemove.click(()=>{this.viewer.scene.removeMeasurement(t)}),this.propertiesPanel.addVolatileListener(t,"marker_added",this._update),this.propertiesPanel.addVolatileListener(t,"marker_removed",this._update),this.propertiesPanel.addVolatileListener(t,"marker_moved",this._update),this.update()}update(){let e=this.elContent.find(".coordinates_table_container");e.empty(),e.append(this.createCoordinatesTable(this.measurement.points.map(e=>e.position))),this.elContent.find("#measurement_area").html(this.measurement.getArea().toFixed(3))}}class AnglePanel extends MeasurePanel{constructor(e,t,i){super(e,t,i);let n=Potree.resourcePath+"/icons/remove.svg";this.elContent=$(`\n\t\t\t<div class="measurement_content selectable">\n\t\t\t\t<span class="coordinates_table_container"></span>\n\t\t\t\t<br>\n\t\t\t\t<table class="measurement_value_table">\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<th>α</th>\n\t\t\t\t\t\t<th>β</th>\n\t\t\t\t\t\t<th>γ</th>\n\t\t\t\t\t</tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td align="center" id="angle_cell_alpha" style="width: 33%"></td>\n\t\t\t\t\t\t<td align="center" id="angle_cell_betta" style="width: 33%"></td>\n\t\t\t\t\t\t<td align="center" id="angle_cell_gamma" style="width: 33%"></td>\n\t\t\t\t\t</tr>\n\t\t\t\t</table>\n\n\t\t\t\t\x3c!-- ACTIONS --\x3e\n\t\t\t\t<div style="display: flex; margin-top: 12px">\n\t\t\t\t\t<span></span>\n\t\t\t\t\t<span style="flex-grow: 1"></span>\n\t\t\t\t\t<img name="remove" class="button-icon" src="${n}" style="width: 16px; height: 16px"/>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t`),this.elRemove=this.elContent.find("img[name=remove]"),this.elRemove.click(()=>{this.viewer.scene.removeMeasurement(t)}),this.propertiesPanel.addVolatileListener(t,"marker_added",this._update),this.propertiesPanel.addVolatileListener(t,"marker_removed",this._update),this.propertiesPanel.addVolatileListener(t,"marker_moved",this._update),this.update()}update(){let e=this.elContent.find(".coordinates_table_container");e.empty(),e.append(this.createCoordinatesTable(this.measurement.points.map(e=>e.position)));let t=[];for(let e=0;e<this.measurement.points.length;e++)t.push(this.measurement.getAngle(e)*(180/Math.PI));t=t.map(e=>e.toFixed(1)+"°");let i=this.elContent.find("#angle_cell_alpha"),n=this.elContent.find("#angle_cell_betta"),o=this.elContent.find("#angle_cell_gamma");i.html(t[0]),n.html(t[1]),o.html(t[2])}}class HeightPanel extends MeasurePanel{constructor(e,t,i){super(e,t,i);let n=Potree.resourcePath+"/icons/remove.svg";this.elContent=$(`\n\t\t\t<div class="measurement_content selectable">\n\t\t\t\t<span class="coordinates_table_container"></span>\n\t\t\t\t<br>\n\t\t\t\t<span id="height_label">Height: </span><br>\n\n\t\t\t\t\x3c!-- ACTIONS --\x3e\n\t\t\t\t<div style="display: flex; margin-top: 12px">\n\t\t\t\t\t<span></span>\n\t\t\t\t\t<span style="flex-grow: 1"></span>\n\t\t\t\t\t<img name="remove" class="button-icon" src="${n}" style="width: 16px; height: 16px"/>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t`),this.elRemove=this.elContent.find("img[name=remove]"),this.elRemove.click(()=>{this.viewer.scene.removeMeasurement(t)}),this.propertiesPanel.addVolatileListener(t,"marker_added",this._update),this.propertiesPanel.addVolatileListener(t,"marker_removed",this._update),this.propertiesPanel.addVolatileListener(t,"marker_moved",this._update),this.update()}update(){let e=this.elContent.find(".coordinates_table_container");e.empty(),e.append(this.createCoordinatesTable(this.measurement.points.map(e=>e.position)));{let e=this.measurement.points.slice().sort((e,t)=>e.position.z-t.position.z),t=e[0].position.clone(),i=e[e.length-1].position.clone(),n=t.z,o=i.z-n;o=o.toFixed(3),this.elHeightLabel=this.elContent.find("#height_label"),this.elHeightLabel.html(`<b>Height:</b> ${o}`)}}}class VolumePanel extends MeasurePanel{constructor(e,t,i){super(e,t,i);let n=Potree.resourcePath+"/icons/copy.svg",o=Potree.resourcePath+"/icons/remove.svg";this.elContent=$(`\n\t\t\t<div class="measurement_content selectable">\n\t\t\t\t<span class="coordinates_table_container"></span>\n\n\t\t\t\t<table class="measurement_value_table">\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<th>α</th>\n\t\t\t\t\t\t<th>β</th>\n\t\t\t\t\t\t<th>γ</th>\n\t\t\t\t\t\t<th></th>\n\t\t\t\t\t</tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td align="center" id="angle_cell_alpha" style="width: 33%"></td>\n\t\t\t\t\t\t<td align="center" id="angle_cell_betta" style="width: 33%"></td>\n\t\t\t\t\t\t<td align="center" id="angle_cell_gamma" style="width: 33%"></td>\n\t\t\t\t\t\t<td align="right" style="width: 25%">\n\t\t\t\t\t\t\t<img name="copyRotation" title="copy" class="button-icon" src="${n}" style="width: 16px; height: 16px"/>\n\t\t\t\t\t\t</td>\n\t\t\t\t\t</tr>\n\t\t\t\t</table>\n\n\t\t\t\t<table class="measurement_value_table">\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<th>length</th>\n\t\t\t\t\t\t<th>width</th>\n\t\t\t\t\t\t<th>height</th>\n\t\t\t\t\t\t<th></th>\n\t\t\t\t\t</tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td align="center" id="cell_length" style="width: 33%"></td>\n\t\t\t\t\t\t<td align="center" id="cell_width" style="width: 33%"></td>\n\t\t\t\t\t\t<td align="center" id="cell_height" style="width: 33%"></td>\n\t\t\t\t\t\t<td align="right" style="width: 25%">\n\t\t\t\t\t\t\t<img name="copyScale" title="copy" class="button-icon" src="${n}" style="width: 16px; height: 16px"/>\n\t\t\t\t\t\t</td>\n\t\t\t\t\t</tr>\n\t\t\t\t</table>\n\n\t\t\t\t<br>\n\t\t\t\t<span style="font-weight: bold">Volume: </span>\n\t\t\t\t<span id="measurement_volume"></span>\n\n\t\t\t\t\x3c!--\n\t\t\t\t<li>\n\t\t\t\t\t<label style="whitespace: nowrap">\n\t\t\t\t\t\t<input id="volume_show" type="checkbox"/>\n\t\t\t\t\t\t<span>show volume</span>\n\t\t\t\t\t</label>\n\t\t\t\t</li>--\x3e\n\n\t\t\t\t<li>\n\t\t\t\t\t<label style="whitespace: nowrap">\n\t\t\t\t\t\t<input id="volume_clip" type="checkbox"/>\n\t\t\t\t\t\t<span>make clip volume</span>\n\t\t\t\t\t</label>\n\t\t\t\t</li>\n\n\t\t\t\t<li>\n\t\t\t\t\t<input name="download_volume" type="button" value="download" style="display:hidden" />\n\t\t\t\t</li>\n\n\n\t\t\t\t\x3c!-- ACTIONS --\x3e\n\t\t\t\t<input id="volume_reset_orientation" type="button" value="reset orientation"/>\n\t\t\t\t<div style="display: flex; margin-top: 12px">\n\t\t\t\t\t<span></span>\n\t\t\t\t\t<span style="flex-grow: 1"></span>\n\t\t\t\t\t<img name="remove" class="button-icon" src="${o}" style="width: 16px; height: 16px"/>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t`),this.elDownloadButton=this.elContent.find("input[name=download_volume]"),this.propertiesPanel.viewer.server?this.elDownloadButton.click(()=>this.download()):this.elDownloadButton.hide(),this.elCopyRotation=this.elContent.find("img[name=copyRotation]"),this.elCopyRotation.click(()=>{let e=this.measurement.rotation.toArray().slice(0,3).map(e=>e.toFixed(3)).join(", ");Potree.utils.clipboardCopy(e),this.viewer.postMessage(`Copied value to clipboard: <br>'${e}'`,{duration:3e3})}),this.elCopyScale=this.elContent.find("img[name=copyScale]"),this.elCopyScale.click(()=>{let e=this.measurement.scale.toArray().map(e=>e.toFixed(3)).join(", ");Potree.utils.clipboardCopy(e),this.viewer.postMessage(`Copied value to clipboard: <br>'${e}'`,{duration:3e3})}),this.elRemove=this.elContent.find("img[name=remove]"),this.elRemove.click(()=>{this.viewer.scene.removeVolume(t)}),this.elContent.find("#volume_reset_orientation").click(()=>{t.rotation.set(0,0,0)}),this.elCheckClip=this.elContent.find("#volume_clip"),this.elCheckClip.click(e=>{this.measurement.clip=e.target.checked}),this.elCheckShow=this.elContent.find("#volume_show"),this.elCheckShow.click(e=>{this.measurement.visible=e.target.checked}),this.propertiesPanel.addVolatileListener(t,"position_changed",this._update),this.propertiesPanel.addVolatileListener(t,"orientation_changed",this._update),this.propertiesPanel.addVolatileListener(t,"scale_changed",this._update),this.propertiesPanel.addVolatileListener(t,"clip_changed",this._update),this.update()}download(){let e=[this.measurement.matrixWorld].map(e=>e.elements.join(",")).join(","),t=[];for(let e of this.viewer.scene.pointclouds){let i="";i=new RegExp("^(?:[a-z]+:)?//","i").test(e.pcoGeometry.url)?e.pcoGeometry.url:`${window.location.href}/../${e.pcoGeometry.url}`,t.push(i)}let i=t.map(e=>`pointcloud[]=${e}`).join("&"),n=`${viewer.server}/start_extract_region_worker?minLOD=0&maxLOD=100&box=${e}&${i}`;console.log(n)}update(){let e=this.elContent.find(".coordinates_table_container");e.empty(),e.append(this.createCoordinatesTable([this.measurement.position]));{let e=this.measurement.rotation.toVector3();e=(e=(e=e.toArray()).map(e=>180*e/Math.PI)).map(e=>e.toFixed(1)+"°");let t=this.elContent.find("#angle_cell_alpha"),i=this.elContent.find("#angle_cell_betta"),n=this.elContent.find("#angle_cell_gamma");t.html(e[0]),i.html(e[1]),n.html(e[2])}{let e=this.measurement.scale.toArray();e=e.map(e=>Potree.utils.addCommas(e.toFixed(2)));let t=this.elContent.find("#cell_length"),i=this.elContent.find("#cell_width"),n=this.elContent.find("#cell_height");t.html(e[0]),i.html(e[1]),n.html(e[2])}{let e=this.elContent.find("#measurement_volume"),t=this.measurement.getVolume();e.html(Potree.utils.addCommas(t.toFixed(2)))}this.elCheckClip.prop("checked",this.measurement.clip),this.elCheckShow.prop("checked",this.measurement.visible)}}class ProfilePanel extends MeasurePanel{constructor(e,t,i){super(e,t,i);let n=Potree.resourcePath+"/icons/remove.svg";this.elContent=$(`\n\t\t\t<div class="measurement_content selectable">\n\t\t\t\t<span class="coordinates_table_container"></span>\n\t\t\t\t<br>\n\t\t\t\t<span style="display:flex">\n\t\t\t\t\t<span style="display:flex; align-items: center; padding-right: 10px">Width: </span>\n\t\t\t\t\t<input id="sldProfileWidth" name="sldProfileWidth" value="5.06" style="flex-grow: 1; width:100%">\n\t\t\t\t</span>\n\t\t\t\t<br>\n\n\t\t\t\t<input type="button" value="Prepare Download" id="download_profile"/>\n\t\t\t\t<span id="download_profile_status"></span>\n\t\t\t\t<br>\n\t\t\t\t<input type="button" id="show_2d_profile" value="show 2d profile" style="width: 100%"/>\n\n\t\t\t\t\x3c!-- ACTIONS --\x3e\n\t\t\t\t<div style="display: flex; margin-top: 12px">\n\t\t\t\t\t<span></span>\n\t\t\t\t\t<span style="flex-grow: 1"></span>\n\t\t\t\t\t<img name="remove" class="button-icon" src="${n}" style="width: 16px; height: 16px"/>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t`),this.elRemove=this.elContent.find("img[name=remove]"),this.elRemove.click(()=>{this.viewer.scene.removeProfile(t)}),this.elDownloadButton=this.elContent.find("#download_profile"),this.propertiesPanel.viewer.server?this.elDownloadButton.click(()=>this.download()):this.elDownloadButton.hide();{let e=this.elContent.find("#sldProfileWidth");e.spinner({min:0,max:1e7,step:.01,numberFormat:"n",start:()=>{},spin:(i,n)=>{let o=e.spinner("value");t.setWidth(o)},change:(i,n)=>{let o=e.spinner("value");t.setWidth(o)},stop:(i,n)=>{let o=e.spinner("value");t.setWidth(o)},incremental:t=>{let i=e.spinner("value"),n=e.spinner("option","step"),o=.05*i;return Math.max(1,parseInt(o/n))}}),e.spinner("value",t.getWidth()),e.spinner("widget").css("width","100%");let i=i=>{e.spinner("value")!==t.getWidth()&&e.spinner("value",t.getWidth())};this.propertiesPanel.addVolatileListener(t,"width_changed",i)}this.elContent.find("#show_2d_profile").click(()=>{this.propertiesPanel.viewer.profileWindow.show(),this.propertiesPanel.viewer.profileWindowController.setProfile(t)}),this.propertiesPanel.addVolatileListener(t,"marker_added",this._update),this.propertiesPanel.addVolatileListener(t,"marker_removed",this._update),this.propertiesPanel.addVolatileListener(t,"marker_moved",this._update),this.update()}update(){let e=this.elContent.find(".coordinates_table_container");e.empty(),e.append(this.createCoordinatesTable(this.measurement.points))}}class CameraPanel{constructor(e,t){this.viewer=e,this.propertiesPanel=t,this._update=(()=>{this.update()});let i=Potree.resourcePath+"/icons/copy.svg";this.elContent=$(`\n\t\t<div class="propertypanel_content">\n\t\t\t<table>\n\t\t\t\t<tr>\n\t\t\t\t\t<th colspan="3">position</th>\n\t\t\t\t\t<th></th>\n\t\t\t\t</tr>\n\t\t\t\t<tr>\n\t\t\t\t\t<td align="center" id="camera_position_x" style="width: 25%"></td>\n\t\t\t\t\t<td align="center" id="camera_position_y" style="width: 25%"></td>\n\t\t\t\t\t<td align="center" id="camera_position_z" style="width: 25%"></td>\n\t\t\t\t\t<td align="right" id="copy_camera_position" style="width: 25%">\n\t\t\t\t\t\t<img name="copyPosition" title="copy" class="button-icon" src="${i}" style="width: 16px; height: 16px"/>\n\t\t\t\t\t</td>\n\t\t\t\t</tr>\n\t\t\t\t<tr>\n\t\t\t\t\t<th colspan="3">target</th>\n\t\t\t\t\t<th></th>\n\t\t\t\t</tr>\n\t\t\t\t<tr>\n\t\t\t\t\t<td align="center" id="camera_target_x" style="width: 25%"></td>\n\t\t\t\t\t<td align="center" id="camera_target_y" style="width: 25%"></td>\n\t\t\t\t\t<td align="center" id="camera_target_z" style="width: 25%"></td>\n\t\t\t\t\t<td align="right" id="copy_camera_target" style="width: 25%">\n\t\t\t\t\t\t<img name="copyTarget" title="copy" class="button-icon" src="${i}" style="width: 16px; height: 16px"/>\n\t\t\t\t\t</td>\n\t\t\t\t</tr>\n\t\t\t</table>\n\t\t</div>\n\t\t`),this.elCopyPosition=this.elContent.find("img[name=copyPosition]"),this.elCopyPosition.click(()=>{let e=this.viewer.scene.getActiveCamera().position.toArray().map(e=>e.toFixed(3)).join(", ");Potree.utils.clipboardCopy(e),this.viewer.postMessage(`Copied value to clipboard: <br>'${e}'`,{duration:3e3})}),this.elCopyTarget=this.elContent.find("img[name=copyTarget]"),this.elCopyTarget.click(()=>{let e=this.viewer.scene.view.getPivot().toArray().map(e=>e.toFixed(3)).join(", ");Potree.utils.clipboardCopy(e),this.viewer.postMessage(`Copied value to clipboard: <br>'${e}'`,{duration:3e3})}),this.propertiesPanel.addVolatileListener(e,"camera_changed",this._update),this.update()}update(){console.log("updating camera panel");let e=this.viewer.scene.getActiveCamera(),t=this.viewer.scene.view,i=e.position.toArray().map(e=>Potree.utils.addCommas(e.toFixed(3)));this.elContent.find("#camera_position_x").html(i[0]),this.elContent.find("#camera_position_y").html(i[1]),this.elContent.find("#camera_position_z").html(i[2]);let n=t.getPivot().toArray().map(e=>Potree.utils.addCommas(e.toFixed(3)));this.elContent.find("#camera_target_x").html(n[0]),this.elContent.find("#camera_target_y").html(n[1]),this.elContent.find("#camera_target_z").html(n[2])}}Potree.PropertiesPanel=class{constructor(e,t){this.container=e,this.viewer=t,this.object=null,this.cleanupTasks=[],this.scene=null}setScene(e){this.scene=e}set(e){if(this.object!==e){this.object=e;for(let e of this.cleanupTasks)e();this.cleanupTasks=[],this.container.empty(),e instanceof Potree.PointCloudTree?this.setPointCloud(e):e instanceof Potree.Measure||e instanceof Potree.Profile||e instanceof Potree.Volume?this.setMeasurement(e):e instanceof THREE.Camera&&this.setCamera(e)}}addVolatileListener(e,t,i){e.addEventListener(t,i),this.cleanupTasks.push(()=>{e.removeEventListener(t,i)})}setPointCloud(e){let t=e.material,i=$(`\n\t\t\t<div class="scene_content selectable">\n\t\t\t\t<ul class="pv-menu-list">\n\n\t\t\t\t<li>\n\t\t\t\t<span data-i18n="appearance.point_size"></span>:<span id="lblPointSize"></span> <div id="sldPointSize"></div>\n\t\t\t\t</li>\n\n\t\t\t\t\x3c!-- SIZE TYPE --\x3e\n\t\t\t\t<li>\n\t\t\t\t\t<label for="optPointSizing" class="pv-select-label" data-i18n="appearance.point_size_type">Point Sizing </label>\n\t\t\t\t\t<select id="optPointSizing" name="optPointSizing">\n\t\t\t\t\t\t<option>FIXED</option>\n\t\t\t\t\t\t<option>ATTENUATED</option>\n\t\t\t\t\t\t<option>ADAPTIVE</option>\n\t\t\t\t\t</select>\n\t\t\t\t</li>\n\n\t\t\t\t\x3c!-- SHAPE --\x3e\n\t\t\t\t<li>\n\t\t\t\t\t<label for="optShape" class="pv-select-label" data-i18n="appearance.point_shape"></label><br>\n\t\t\t\t\t<select id="optShape" name="optShape">\n\t\t\t\t\t\t<option>SQUARE</option>\n\t\t\t\t\t\t<option>CIRCLE</option>\n\t\t\t\t\t\t<option>PARABOLOID</option>\n\t\t\t\t\t</select>\n\t\t\t\t</li>\n\n\t\t\t\t\x3c!-- OPACITY --\x3e\n\t\t\t\t<li><span data-i18n="appearance.point_opacity"></span>:<span id="lblOpacity"></span><div id="sldOpacity"></div></li>\n\n\t\t\t\t<div class="divider">\n\t\t\t\t\t<span>Attribute</span>\n\t\t\t\t</div>\n\n\t\t\t\t<li>\n\t\t\t\t\t\x3c!--<label for="optMaterial" class="pv-select-label">Attributes:</label><br>--\x3e\n\t\t\t\t\t<select id="optMaterial" name="optMaterial">\n\t\t\t\t\t</select>\n\t\t\t\t</li>\n\n\t\t\t\t<div id="materials.composite_weight_container">\n\t\t\t\t\t<div class="divider">\n\t\t\t\t\t\t<span>Attribute Weights</span>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<li>RGB: <span id="lblWeightRGB"></span> <div id="sldWeightRGB"></div>\t</li>\n\t\t\t\t\t<li>Intensity: <span id="lblWeightIntensity"></span> <div id="sldWeightIntensity"></div>\t</li>\n\t\t\t\t\t<li>Elevation: <span id="lblWeightElevation"></span> <div id="sldWeightElevation"></div>\t</li>\n\t\t\t\t\t<li>Classification: <span id="lblWeightClassification"></span> <div id="sldWeightClassification"></div>\t</li>\n\t\t\t\t\t<li>Return Number: <span id="lblWeightReturnNumber"></span> <div id="sldWeightReturnNumber"></div>\t</li>\n\t\t\t\t\t<li>Source ID: <span id="lblWeightSourceID"></span> <div id="sldWeightSourceID"></div>\t</li>\n\t\t\t\t</div>\n\n\t\t\t\t<div id="materials.rgb_container">\n\t\t\t\t\t<div class="divider">\n\t\t\t\t\t\t<span>RGB</span>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<li>Gamma: <span id="lblRGBGamma"></span> <div id="sldRGBGamma"></div>\t</li>\n\t\t\t\t\t<li>Brightness: <span id="lblRGBBrightness"></span> <div id="sldRGBBrightness"></div>\t</li>\n\t\t\t\t\t<li>Contrast: <span id="lblRGBContrast"></span> <div id="sldRGBContrast"></div>\t</li>\n\t\t\t\t</div>\n\n\t\t\t\t<div id="materials.color_container">\n\t\t\t\t\t<div class="divider">\n\t\t\t\t\t\t<span>Color</span>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<input id="materials.color.picker" />\n\t\t\t\t</div>\n\n\n\t\t\t\t<div id="materials.elevation_container">\n\t\t\t\t\t<div class="divider">\n\t\t\t\t\t\t<span>Elevation</span>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<li><span data-i18n="appearance.elevation_range"></span>: <span id="lblHeightRange"></span> <div id="sldHeightRange"></div>\t</li>\n\t\t\t\t\t<li>\n\t\t\t\t\t\t<span>Gradient Scheme:</span>\n\t\t\t\t\t\t<div id="elevation_gradient_scheme_selection" style="display: flex">\n\t\t\t\t\t\t\x3c!--\n\t\t\t\t\t\t\t<span style="flex-grow: 1;">\n\t\t\t\t\t\t\t\t<img id="gradient_spectral" class="button-icon" style="max-width: 100%" src="${Potree.resourcePath}/icons/gradients_spectral.png" />\n\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t<span style="flex-grow: 1;">\n\t\t\t\t\t\t\t\t<img id="gradient_yellow_green" class="button-icon" style="max-width: 100%" src="${Potree.resourcePath}/icons/gradients_yellow_green.png" />\n\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t<span style="flex-grow: 1;">\n\t\t\t\t\t\t\t\t<img class="button-icon" style="max-width: 100%" src="${Potree.resourcePath}/icons/gradients_plasma.png" />\n\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t<span style="flex-grow: 1;">\n\t\t\t\t\t\t\t\t<img class="button-icon" style="max-width: 100%" src="${Potree.resourcePath}/icons/gradients_grayscale.png" />\n\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t<span style="flex-grow: 1;">\n\t\t\t\t\t\t\t\t<img class="button-icon" style="max-width: 100%" src="${Potree.resourcePath}/icons/gradients_rainbow.png" />\n\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t--\x3e\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</li>\n\t\t\t\t</div>\n\n\t\t\t\t<div id="materials.transition_container">\n\t\t\t\t\t<div class="divider">\n\t\t\t\t\t\t<span>Transition</span>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<li>transition: <span id="lblTransition"></span> <div id="sldTransition"></div>\t</li>\n\t\t\t\t</div>\n\n\t\t\t\t<div id="materials.intensity_container">\n\t\t\t\t\t<div class="divider">\n\t\t\t\t\t\t<span>Intensity</span>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<li>Range: <span id="lblIntensityRange"></span> <div id="sldIntensityRange"></div>\t</li>\n\t\t\t\t\t<li>Gamma: <span id="lblIntensityGamma"></span> <div id="sldIntensityGamma"></div>\t</li>\n\t\t\t\t\t<li>Brightness: <span id="lblIntensityBrightness"></span> <div id="sldIntensityBrightness"></div>\t</li>\n\t\t\t\t\t<li>Contrast: <span id="lblIntensityContrast"></span> <div id="sldIntensityContrast"></div>\t</li>\n\t\t\t\t</div>\n\t\t\t\t\n\t\t\t\t<div id="materials.index_container">\n\t\t\t\t\t<div class="divider">\n\t\t\t\t\t\t<span>Indices</span>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\n\n\t\t\t\t</ul>\n\t\t\t</div>\n\t\t`);i.i18n(),this.container.append(i);{let e=i.find("#sldPointSize"),n=i.find("#lblPointSize");e.slider({value:t.size,min:0,max:3,step:.01,slide:function(e,i){t.size=i.value}});let o=i=>{n.html(t.size.toFixed(2)),e.slider({value:t.size})};this.addVolatileListener(t,"point_size_changed",o),o()}{let e=Object.keys(Potree.PointSizeType)[t.pointSizeType],n=i.find("#optPointSizing");n.selectmenu(),n.val(e).selectmenu("refresh"),n.selectmenu({change:(e,i)=>{t.pointSizeType=Potree.PointSizeType[i.item.value]}})}{let e=i.find("#optShape");e.selectmenu({change:(e,i)=>{let n=i.item.value;t.shape=Potree.PointShape[n]}});let n=()=>{let i=Object.keys(Potree.PointShape)[t.shape];e.selectmenu().val(i).selectmenu("refresh")};this.addVolatileListener(t,"point_shape_changed",n),n()}{let e=i.find("#sldOpacity"),n=i.find("#lblOpacity");e.slider({value:t.opacity,min:0,max:1,step:.001,slide:function(e,i){t.opacity=i.value}});let o=i=>{n.html(t.opacity.toFixed(2)),e.slider({value:t.opacity})};this.addVolatileListener(t,"opacity_changed",o),o()}{let e=["RGB","RGB and Elevation","Color","Elevation","Intensity","Intensity Gradient","Classification","Return Number","Source","Index","Level of Detail","Composite"],n=i.find("#optMaterial");for(let t of e){let e=$(`<option>${t}</option>`);n.append(e)}let o=(e,i)=>{let o=n.selectmenu().val();t.pointColorType=Potree.toMaterialID(o);let s=$("#materials\\.composite_weight_container"),r=$("#materials\\.elevation_container"),a=$("#materials\\.rgb_container"),l=$("#materials\\.color_container"),h=$("#materials\\.intensity_container"),d=$("#materials\\.index_container"),c=$("#materials\\.transition_container");d.css("display","none"),h.css("display","none"),r.css("display","none"),a.css("display","none"),l.css("display","none"),s.css("display","none"),c.css("display","none"),"Composite"===o?(s.css("display","block"),r.css("display","block"),a.css("display","block"),h.css("display","block")):"Elevation"===o?r.css("display","block"):"RGB and Elevation"===o?(a.css("display","block"),r.css("display","block")):"RGB"===o?a.css("display","block"):"Color"===o?l.css("display","block"):"Intensity"===o?h.css("display","block"):"Intensity Gradient"===o?h.css("display","block"):"Index"===o&&d.css("display","block")};n.selectmenu({change:o});let s=()=>{n.val(Potree.toMaterialName(t.pointColorType)).selectmenu("refresh")};this.addVolatileListener(t,"point_color_type_changed",s),s(),o()}{let e=[{name:"SPECTRAL",icon:`${Potree.resourcePath}/icons/gradients_spectral.png`},{name:"YELLOW_GREEN",icon:`${Potree.resourcePath}/icons/gradients_yellow_green.png`},{name:"PLASMA",icon:`${Potree.resourcePath}/icons/gradients_plasma.png`},{name:"GRAYSCALE",icon:`${Potree.resourcePath}/icons/gradients_grayscale.png`},{name:"RAINBOW",icon:`${Potree.resourcePath}/icons/gradients_rainbow.png`}],n=i.find("#elevation_gradient_scheme_selection");for(let i of e){let e=$(`\n\t\t\t\t\t<span style="flex-grow: 1;">\n\t\t\t\t\t\t<img src="${i.icon}" class="button-icon" style="max-width: 100%" />\n\t\t\t\t\t</span>\n\t\t\t\t`);e.click(()=>{t.gradient=Potree.Gradients[i.name]}),n.append(e)}}{i.find("#sldRGBGamma").slider({value:t.rgbGamma,min:0,max:4,step:.01,slide:(e,i)=>{t.rgbGamma=i.value}}),i.find("#sldRGBContrast").slider({value:t.rgbContrast,min:-1,max:1,step:.01,slide:(e,i)=>{t.rgbContrast=i.value}}),i.find("#sldRGBBrightness").slider({value:t.rgbBrightness,min:-1,max:1,step:.01,slide:(e,i)=>{t.rgbBrightness=i.value}}),i.find("#sldHeightRange").slider({range:!0,min:0,max:1e3,step:.01,values:[0,1e3],slide:(e,i)=>{t.heightMin=i.values[0],t.heightMax=i.values[1]}}),i.find("#sldIntensityRange").slider({range:!0,min:0,max:1,step:.01,values:[0,1],slide:(e,i)=>{let n=0===Number(i.values[0])?0:parseInt(Math.pow(2,16*i.values[0])),o=parseInt(Math.pow(2,16*i.values[1]));t.intensityRange=[n,o]}}),i.find("#sldIntensityGamma").slider({value:t.intensityGamma,min:0,max:4,step:.01,slide:(e,i)=>{t.intensityGamma=i.value}}),i.find("#sldIntensityContrast").slider({value:t.intensityContrast,min:-1,max:1,step:.01,slide:(e,i)=>{t.intensityContrast=i.value}}),i.find("#sldIntensityBrightness").slider({value:t.intensityBrightness,min:-1,max:1,step:.01,slide:(e,i)=>{t.intensityBrightness=i.value}}),i.find("#sldWeightRGB").slider({value:t.weightRGB,min:0,max:1,step:.01,slide:(e,i)=>{t.weightRGB=i.value}}),i.find("#sldWeightIntensity").slider({value:t.weightIntensity,min:0,max:1,step:.01,slide:(e,i)=>{t.weightIntensity=i.value}}),i.find("#sldWeightElevation").slider({value:t.weightElevation,min:0,max:1,step:.01,slide:(e,i)=>{t.weightElevation=i.value}}),i.find("#sldWeightClassification").slider({value:t.weightClassification,min:0,max:1,step:.01,slide:(e,i)=>{t.weightClassification=i.value}}),i.find("#sldWeightReturnNumber").slider({value:t.weightReturnNumber,min:0,max:1,step:.01,slide:(e,i)=>{t.weightReturnNumber=i.value}}),i.find("#sldWeightSourceID").slider({value:t.weightSourceID,min:0,max:1,step:.01,slide:(e,i)=>{t.weightSourceID=i.value}}),i.find("#materials\\.color\\.picker").spectrum({flat:!0,showInput:!0,preferredFormat:"rgb",cancelText:"",chooseText:"Apply",color:`#${t.color.getHexString()}`,move:e=>{let i=e.toRgb(),n=(new THREE.Color).setRGB(i.r/255,i.g/255,i.b/255);t.color=n},change:e=>{let i=e.toRgb(),n=(new THREE.Color).setRGB(i.r/255,i.g/255,i.b/255);t.color=n}}),this.addVolatileListener(t,"color_changed",()=>{i.find("#materials\\.color\\.picker").spectrum("set",`#${t.color.getHexString()}`)});let n=function(){let n=[e.pcoGeometry.tightBoundingBox,e.getBoundingBoxWorld()].find(e=>void 0!==e);e.updateMatrixWorld(!0);let o=(n=Potree.utils.computeTransformedBoundingBox(n,e.matrixWorld)).max.z-n.min.z,s=n.min.z-.2*o,r=n.max.z+.2*o,a=t.elevationRange;i.find("#lblHeightRange").html(`${a[0].toFixed(2)} to ${a[1].toFixed(2)}`),i.find("#sldHeightRange").slider({min:s,max:r,values:a})},o=function(){let e=t.intensityRange,[n,o]=e.map(e=>Math.log2(e)/16);i.find("#lblIntensityRange").html(`${parseInt(e[0])} to ${parseInt(e[1])}`),i.find("#sldIntensityRange").slider({values:[n,o]})};n(),i.find("#sldHeightRange").slider("option","min"),i.find("#sldHeightRange").slider("option","max");let s=()=>{let e=t.intensityGamma,n=t.intensityContrast,s=t.intensityBrightness;o(),i.find("#lblIntensityGamma").html(e.toFixed(2)),i.find("#lblIntensityContrast").html(n.toFixed(2)),i.find("#lblIntensityBrightness").html(s.toFixed(2)),i.find("#sldIntensityGamma").slider({value:e}),i.find("#sldIntensityContrast").slider({value:n}),i.find("#sldIntensityBrightness").slider({value:s})},r=()=>{let e=t.rgbGamma,n=t.rgbContrast,o=t.rgbBrightness;i.find("#lblRGBGamma").html(e.toFixed(2)),i.find("#lblRGBContrast").html(n.toFixed(2)),i.find("#lblRGBBrightness").html(o.toFixed(2)),i.find("#sldRGBGamma").slider({value:e}),i.find("#sldRGBContrast").slider({value:n}),i.find("#sldRGBBrightness").slider({value:o})};this.addVolatileListener(t,"material_property_changed",n),this.addVolatileListener(t,"material_property_changed",s),this.addVolatileListener(t,"material_property_changed",r),n(),s(),r()}}setMeasurement(e){let t={DISTANCE:{panel:DistancePanel},AREA:{panel:AreaPanel},POINT:{panel:PointPanel},ANGLE:{panel:AnglePanel},HEIGHT:{panel:HeightPanel},PROFILE:{panel:ProfilePanel},VOLUME:{panel:VolumePanel}},i=new(0,(e=>e instanceof Potree.Measure?!e.showDistances||e.showArea||e.showAngles?e.showDistances&&e.showArea&&!e.showAngles?t.AREA:1===e.maxMarkers?t.POINT:e.showDistances||e.showArea||!e.showAngles?e.showHeight?t.HEIGHT:t.OTHER:t.ANGLE:t.DISTANCE:e instanceof Potree.Profile?t.PROFILE:e instanceof Potree.Volume?t.VOLUME:void 0)(e).panel)(this.viewer,e,this);this.container.append(i.elContent)}setCamera(e){let t=new CameraPanel(this.viewer,this);this.container.append(t.elContent)}},Potree.NavigationCube=class extends THREE.Object3D{constructor(e){super(),this.viewer=e;let t=t=>{let i=new THREE.MeshBasicMaterial({depthTest:!0,depthWrite:!0,side:THREE.DoubleSide});return(new THREE.TextureLoader).load(Potree.resourcePath+"/textures/navigation/"+t,function(t){t.anisotropy=e.renderer.getMaxAnisotropy(),i.map=t,i.needsUpdate=!0}),i},i=new THREE.PlaneGeometry(1,1);this.front=new THREE.Mesh(i,t("F.png")),this.front.position.y=-.5,this.front.rotation.x=Math.PI/2,this.front.updateMatrixWorld(),this.front.name="F",this.add(this.front),this.back=new THREE.Mesh(i,t("B.png")),this.back.position.y=.5,this.back.rotation.x=Math.PI/2,this.back.updateMatrixWorld(),this.back.name="B",this.add(this.back),this.left=new THREE.Mesh(i,t("L.png")),this.left.position.x=-.5,this.left.rotation.y=Math.PI/2,this.left.updateMatrixWorld(),this.left.name="L",this.add(this.left),this.right=new THREE.Mesh(i,t("R.png")),this.right.position.x=.5,this.right.rotation.y=Math.PI/2,this.right.updateMatrixWorld(),this.right.name="R",this.add(this.right),this.bottom=new THREE.Mesh(i,t("D.png")),this.bottom.position.z=-.5,this.bottom.updateMatrixWorld(),this.bottom.name="D",this.add(this.bottom),this.top=new THREE.Mesh(i,t("U.png")),this.top.position.z=.5,this.top.updateMatrixWorld(),this.top.name="U",this.add(this.top),this.width=150,this.camera=new THREE.OrthographicCamera(-1,1,1,-1,-1,1),this.camera.position.copy(new THREE.Vector3(0,0,0)),this.camera.lookAt(new THREE.Vector3(0,1,0)),this.camera.updateMatrixWorld(),this.camera.rotation.order="ZXY";this.viewer.renderer.domElement.addEventListener("mousedown",e=>{this.pickedFace=null;let t=new THREE.Vector2;if(t.x=e.clientX-(window.innerWidth-this.width),t.y=e.clientY,t.x<0||t.y>this.width)return;t.x=t.x/this.width*2-1,t.y=-t.y/this.width*2+1;let i=new THREE.Raycaster;i.setFromCamera(t,this.camera),i.ray.origin.sub(this.camera.getWorldDirection());let n=i.intersectObjects(this.children),o=1e3;for(let e=0;e<n.length;e++)n[e].distance<o&&(this.pickedFace=n[e].object.name,o=n[e].distance);this.pickedFace&&this.viewer.setView(this.pickedFace)},!1)}update(e){this.camera.rotation.copy(e),this.camera.updateMatrixWorld()}},Potree.GLProgram=class{constructor(e,t){this.gl=e,this.material=t,this.program=e.createProgram(),this.recompile()}compileShader(e,t){let i=this.gl,n=i.createShader(e);if(i.shaderSource(n,t),i.compileShader(n),!i.getShaderParameter(n,i.COMPILE_STATUS)){console.error("could not compile shader:");let e=i.getShaderInfoLog(n);return console.error(e,t),null}return n}recompile(){let e=this.gl,t=this.compileShader(e.VERTEX_SHADER,this.material.vertexShader),i=this.compileShader(e.FRAGMENT_SHADER,this.material.fragmentShader);if(null===t||null===i)return;let n=this.program;if(e.attachShader(n,t),e.attachShader(n,i),e.linkProgram(n),!e.getProgramParameter(n,e.LINK_STATUS))return console.error("could not compile/link program:"),console.error(this.material.vertexShader),void console.error(this.material.fragmentShader);e.detachShader(n,t),e.detachShader(n,i),e.deleteShader(t),e.deleteShader(i),e.useProgram(n);{let t={},i=e.getProgramParameter(n,e.ACTIVE_UNIFORMS);for(let o=0;o<i;o++){let i=e.getActiveUniform(n,o).name,s=e.getUniformLocation(n,i);t[i]=s}this.uniforms=t}}},Potree.InterleavedBufferAttribute=class{constructor(e,t,i,n,o){this.name=e,this.bytes=t,this.numElements=i,this.normalized=o,this.type=n}},Potree.InterleavedBuffer=class{constructor(e,t,i){this.data=e,this.attributes=t,this.stride=t.reduce((e,t)=>e+t.bytes,0),this.stride=4*Math.ceil(this.stride/4),this.numElements=i}offset(e){let t=0;for(let i of this.attributes){if(i.name===e)return t;t+=i.bytes}return null}},Potree.toInterleavedBufferAttribute=function(e){let t=null;return e.name===Potree.PointAttribute.POSITION_CARTESIAN.name?t=new Potree.InterleavedBufferAttribute("position",12,3,"FLOAT",!1):e.name===Potree.PointAttribute.COLOR_PACKED.name?t=new Potree.InterleavedBufferAttribute("color",4,4,"UNSIGNED_BYTE",!0):e.name===Potree.PointAttribute.INTENSITY.name?t=new Potree.InterleavedBufferAttribute("intensity",4,1,"FLOAT",!1):e.name===Potree.PointAttribute.CLASSIFICATION.name?t=new Potree.InterleavedBufferAttribute("classification",4,1,"FLOAT",!1):e.name===Potree.PointAttribute.RETURN_NUMBER.name?t=new Potree.InterleavedBufferAttribute("returnNumber",4,1,"FLOAT",!1):e.name===Potree.PointAttribute.NUMBER_OF_RETURNS.name?t=new Potree.InterleavedBufferAttribute("numberOfReturns",4,1,"FLOAT",!1):e.name===Potree.PointAttribute.SOURCE_ID.name?t=new Potree.InterleavedBufferAttribute("pointSourceID",4,1,"FLOAT",!1):e.name===Potree.PointAttribute.NORMAL_SPHEREMAPPED.name?t=new Potree.InterleavedBufferAttribute("normal",12,3,"FLOAT",!1):e.name===Potree.PointAttribute.NORMAL_OCT16.name?t=new Potree.InterleavedBufferAttribute("normal",12,3,"FLOAT",!1):e.name===Potree.PointAttribute.NORMAL.name&&(t=new Potree.InterleavedBufferAttribute("normal",12,3,"FLOAT",!1)),t};var GeoTIFF=function(e){"use strict";class t{constructor(e){for(let t of Object.keys(e))this[t]=e[t]}inspect(){return`Enum(${this.name}: ${this.value})`}}class i{constructor(e){this.object=e;for(let i of Object.keys(e)){let n=e[i];"object"==typeof n?n.name=i:n={name:i,value:n},this[i]=new t(n)}}fromValue(e){for(let t of Object.keys(this.object))if(this[t].value===e)return this[t];throw new Error(`No enum for value: ${e}`)}}const n=new i({LITTLE:"II",BIG:"MM"}),o=new i({BYTE:{value:1,bytes:1},ASCII:{value:2,bytes:1},SHORT:{value:3,bytes:2},LONG:{value:4,bytes:4},RATIONAL:{value:5,bytes:8},SBYTE:{value:6,bytes:1},UNDEFINED:{value:7,bytes:1},SSHORT:{value:8,bytes:2},SLONG:{value:9,bytes:4},SRATIONAL:{value:10,bytes:8},FLOAT:{value:11,bytes:4},DOUBLE:{value:12,bytes:8}}),s=new i({IMAGE_WIDTH:256,IMAGE_HEIGHT:257,BITS_PER_SAMPLE:258,COMPRESSION:259,PHOTOMETRIC_INTERPRETATION:262,STRIP_OFFSETS:273,ORIENTATION:274,SAMPLES_PER_PIXEL:277,ROWS_PER_STRIP:278,STRIP_BYTE_COUNTS:279,X_RESOLUTION:282,Y_RESOLUTION:283,PLANAR_CONFIGURATION:284,RESOLUTION_UNIT:296,SOFTWARE:305,COLOR_MAP:320,SAMPLE_FORMAT:339,MODEL_PIXEL_SCALE:33550,MODEL_TIEPOINT:33922,GEO_KEY_DIRECTORY:34735,GEO_DOUBLE_PARAMS:34736,GEO_ASCII_PARAMS:34737}),r=new Map([[o.BYTE,Uint8Array],[o.ASCII,Uint8Array],[o.SHORT,Uint16Array],[o.LONG,Uint32Array],[o.RATIONAL,Uint32Array],[o.SBYTE,Int8Array],[o.UNDEFINED,Uint8Array],[o.SSHORT,Int16Array],[o.SLONG,Int32Array],[o.SRATIONAL,Int32Array],[o.FLOAT,Float32Array],[o.DOUBLE,Float64Array]]);class a{constructor(e,t,i,n,o){this.tag=e,this.type=t,this.count=i,this.offset=n,this.value=o}}class l{constructor(){this.width=0,this.height=0,this.buffer=null,this.metadata=[]}}return e.Tag=s,e.Type=o,e.IFDEntry=a,e.Image=l,e.Reader=class{constructor(){}static read(e){let t=String.fromCharCode(...Array.from(e.slice(0,2)));if(n.fromValue(t),42!==e.readUInt8(2))throw new Error("not a valid tiff file");let i=e.readUInt32LE(4);console.log("offsetToFirstIFD",i);let h=[],d=i,c=0;for(;c<100;){console.log("currentIFDOffset",d);let t=e.readUInt16LE(d),i=e.readUInt32LE(d+2+12*t);console.log("next offset: ",d+2+12*t);let n=e.slice(d+2,d+2+12*t);for(let i=0;i<t;i++){let t,l=s.fromValue(n.readUInt16LE(12*i)),d=o.fromValue(n.readUInt16LE(12*i+2)),c=n.readUInt32LE(12*i+4),p=n.readUInt32LE(12*i+8),u=d.bytes*c;if(u<=4)t=p;else{let i=new Uint8Array(u);i.set(e.slice(p,p+u)),t=new(r.get(d))(i.buffer),d===o.ASCII&&(t=String.fromCharCode(...t))}let m=new a(l,d,c,p,t);h.push(m)}if(console.log("nextIFDOffset",i),0===i)break;d=i,c++}let p=e=>{for(let t of h)if(t.tag===e)return t;return null},u=p(s.IMAGE_WIDTH).value,m=p(s.IMAGE_HEIGHT).value,g=(p(s.COMPRESSION).value,p(s.ROWS_PER_STRIP).value),f=p(s.STRIP_OFFSETS),E=p(s.STRIP_BYTE_COUNTS),v=Math.ceil(m/g),y=[];for(let t=0;t<E.count;t++){let i,n=E.type,s=E.offset+t*n.bytes;n===o.SHORT?i=e.readUInt16LE(s):n===o.LONG&&(i=e.readUInt32LE(s)),y.push(i)}let w=[];for(let t=0;t<f.count;t++){let i,n=f.type,s=f.offset+t*n.bytes;n===o.SHORT?i=e.readUInt16LE(s):n===o.LONG&&(i=e.readUInt32LE(s)),w.push(i)}let T=new Uint8Array(u*m*3),b=0;for(let t=0;t<v;t++){let i=w[t],n=y[t],o=e.slice(i,i+n),s=3*u;for(let e=0;e<g;e++){let t=o.slice(e*s,e*s+s);if(T.set(t,b*s),t.length!==s)break;b++}}console.log(`width: ${u}`),console.log(`height: ${m}`),console.log(`numStrips: ${v}`),console.log("stripByteCounts",y.join(", ")),console.log("stripOffsets",w.join(", "));let P=new l;return P.width=u,P.height=m,P.buffer=T,P.metadata=h,P}},e.Exporter=class{constructor(){}static toTiffBuffer(e,t={}){let i=new Uint8Array([73,73,42,0,8,0,0,0]),[n,r]=[e.width,e.height],l=[new a(s.IMAGE_WIDTH,o.SHORT,1,null,n),new a(s.IMAGE_HEIGHT,o.SHORT,1,null,r),new a(s.BITS_PER_SAMPLE,o.SHORT,4,null,new Uint16Array([8,8,8,8])),new a(s.COMPRESSION,o.SHORT,1,null,1),new a(s.PHOTOMETRIC_INTERPRETATION,o.SHORT,1,null,2),new a(s.ORIENTATION,o.SHORT,1,null,1),new a(s.SAMPLES_PER_PIXEL,o.SHORT,1,null,4),new a(s.ROWS_PER_STRIP,o.LONG,1,null,r),new a(s.STRIP_BYTE_COUNTS,o.LONG,1,null,n*r*3),new a(s.PLANAR_CONFIGURATION,o.SHORT,1,null,1),new a(s.RESOLUTION_UNIT,o.SHORT,1,null,1),new a(s.SOFTWARE,o.ASCII,6,null,"......"),new a(s.STRIP_OFFSETS,o.LONG,1,null,null),new a(s.X_RESOLUTION,o.RATIONAL,1,null,new Uint32Array([1,1])),new a(s.Y_RESOLUTION,o.RATIONAL,1,null,new Uint32Array([1,1]))];t.ifdEntries&&l.push(...t.ifdEntries);let h=10+12*l.length+4,d=new Map,c=new Map;for(let e of l){let t=new ArrayBuffer(12),i=new DataView(t);if(e.type.bytes,e.count,i.setUint16(0,e.tag.value,!0),i.setUint16(2,e.type.value,!0),i.setUint32(4,e.count,!0),1===e.count&&e.type.bytes<=4)i.setUint32(8,e.value,!0);else{i.setUint32(8,h,!0);let t=new Uint8Array(e.count*e.type.bytes);e.type===o.ASCII?t.set(new Uint8Array(e.value.split("").map(e=>e.charCodeAt(0)))):t.set(new Uint8Array(e.value.buffer)),c.set(e.tag,t),h+=t.byteLength}d.set(e.tag,t)}let p=h;new DataView(d.get(s.STRIP_OFFSETS)).setUint32(8,p,!0);let u=e=>{let t=e.reduce((e,t)=>e+t.byteLength,0),i=new Uint8Array(t),n=0;for(let t of e)i.set(new Uint8Array(t),n),n+=t.byteLength;return i};return{width:n,height:r,buffer:u([i,u([new Uint16Array([l.length]),...d.values(),new Uint32Array([0])]),u([...c.values()]),e.buffer])}}},e}({});