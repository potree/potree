define(["./when-b43ff45e","./Check-d404a0fe","./Math-336da716","./Cartesian2-3c21ddb9","./Transforms-ffcbad88","./RuntimeError-bf10f3d5","./WebGLConstants-56de22c0","./ComponentDatatype-8956ad9a","./GeometryAttribute-c9800e88","./GeometryAttributes-fbf888b4","./AttributeCompression-2ec18651","./GeometryPipeline-3f00aefe","./EncodedCartesian3-bf440da4","./IndexDatatype-c5295474","./IntersectionTests-e522b831","./Plane-56dc8a69","./GeometryInstance-61aa44f7","./arrayRemoveDuplicates-a7dee4b8","./EllipsoidTangentPlane-0c88eccf","./OrientedBoundingBox-2239d753","./CoplanarPolygonGeometryLibrary-0905aa66","./ArcType-46047bc6","./EllipsoidRhumbLine-6daaa4d2","./PolygonPipeline-b2950861","./PolygonGeometryLibrary-9cdf0808"],function(o,e,t,c,p,r,n,s,u,d,a,m,i,f,y,l,g,b,h,P,G,v,L,C,T){"use strict";function E(e){for(var t=e.length,r=new Float64Array(3*t),n=f.IndexDatatype.createTypedArray(t,2*t),a=0,o=0,i=0;i<t;i++){var y=e[i];r[a++]=y.x,r[a++]=y.y,r[a++]=y.z,n[o++]=i,n[o++]=(i+1)%t}var l=new d.GeometryAttributes({position:new u.GeometryAttribute({componentDatatype:s.ComponentDatatype.DOUBLE,componentsPerAttribute:3,values:r})});return new u.Geometry({attributes:l,indices:n,primitiveType:u.PrimitiveType.LINES})}function k(e){var t=(e=o.defaultValue(e,o.defaultValue.EMPTY_OBJECT)).polygonHierarchy;this._polygonHierarchy=t,this._workerName="createCoplanarPolygonOutlineGeometry",this.packedLength=T.PolygonGeometryLibrary.computeHierarchyPackedLength(t)+1}k.fromPositions=function(e){return new k({polygonHierarchy:{positions:(e=o.defaultValue(e,o.defaultValue.EMPTY_OBJECT)).positions}})},k.pack=function(e,t,r){return r=o.defaultValue(r,0),t[r=T.PolygonGeometryLibrary.packPolygonHierarchy(e._polygonHierarchy,t,r)]=e.packedLength,t};var H={polygonHierarchy:{}};return k.unpack=function(e,t,r){t=o.defaultValue(t,0);var n=T.PolygonGeometryLibrary.unpackPolygonHierarchy(e,t);t=n.startingIndex,delete n.startingIndex;var a=e[t];return o.defined(r)||(r=new k(H)),r._polygonHierarchy=n,r.packedLength=a,r},k.createGeometry=function(e){var t=e._polygonHierarchy,r=t.positions;if(!((r=b.arrayRemoveDuplicates(r,c.Cartesian3.equalsEpsilon,!0)).length<3)&&G.CoplanarPolygonGeometryLibrary.validOutline(r)){var n=T.PolygonGeometryLibrary.polygonOutlinesFromHierarchy(t,!1);if(0!==n.length){for(var a=[],o=0;o<n.length;o++){var i=new g.GeometryInstance({geometry:E(n[o])});a.push(i)}var y=m.GeometryPipeline.combineInstances(a)[0],l=p.BoundingSphere.fromPoints(t.positions);return new u.Geometry({attributes:y.attributes,indices:y.indices,primitiveType:y.primitiveType,boundingSphere:l})}}},function(e,t){return o.defined(t)&&(e=k.unpack(e,t)),e._ellipsoid=c.Ellipsoid.clone(e._ellipsoid),k.createGeometry(e)}});
