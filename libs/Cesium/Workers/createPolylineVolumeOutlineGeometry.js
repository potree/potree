define(["./when-b43ff45e","./Check-d404a0fe","./Math-336da716","./Cartesian2-3c21ddb9","./Transforms-ffcbad88","./RuntimeError-bf10f3d5","./WebGLConstants-56de22c0","./ComponentDatatype-8956ad9a","./GeometryAttribute-c9800e88","./GeometryAttributes-fbf888b4","./IndexDatatype-c5295474","./IntersectionTests-e522b831","./Plane-56dc8a69","./arrayRemoveDuplicates-a7dee4b8","./BoundingRectangle-a8437ba4","./EllipsoidTangentPlane-0c88eccf","./EllipsoidRhumbLine-6daaa4d2","./PolygonPipeline-b2950861","./PolylineVolumeGeometryLibrary-ff75c3ae","./EllipsoidGeodesic-acfd9e4b","./PolylinePipeline-1c467caa"],function(d,e,t,c,y,i,a,h,f,g,m,n,r,o,l,s,p,u,v,E,P){"use strict";function _(e){var i=(e=d.defaultValue(e,d.defaultValue.EMPTY_OBJECT)).polylinePositions,a=e.shapePositions;this._positions=i,this._shape=a,this._ellipsoid=c.Ellipsoid.clone(d.defaultValue(e.ellipsoid,c.Ellipsoid.WGS84)),this._cornerType=d.defaultValue(e.cornerType,v.CornerType.ROUNDED),this._granularity=d.defaultValue(e.granularity,t.CesiumMath.RADIANS_PER_DEGREE),this._workerName="createPolylineVolumeOutlineGeometry";var n=1+i.length*c.Cartesian3.packedLength;n+=1+a.length*c.Cartesian2.packedLength,this.packedLength=n+c.Ellipsoid.packedLength+2}_.pack=function(e,i,a){var n;a=d.defaultValue(a,0);var t=e._positions,r=t.length;for(i[a++]=r,n=0;n<r;++n,a+=c.Cartesian3.packedLength)c.Cartesian3.pack(t[n],i,a);var o=e._shape;for(r=o.length,i[a++]=r,n=0;n<r;++n,a+=c.Cartesian2.packedLength)c.Cartesian2.pack(o[n],i,a);return c.Ellipsoid.pack(e._ellipsoid,i,a),a+=c.Ellipsoid.packedLength,i[a++]=e._cornerType,i[a]=e._granularity,i};var b=c.Ellipsoid.clone(c.Ellipsoid.UNIT_SPHERE),k={polylinePositions:void 0,shapePositions:void 0,ellipsoid:b,height:void 0,cornerType:void 0,granularity:void 0};_.unpack=function(e,i,a){var n;i=d.defaultValue(i,0);var t=e[i++],r=new Array(t);for(n=0;n<t;++n,i+=c.Cartesian3.packedLength)r[n]=c.Cartesian3.unpack(e,i);t=e[i++];var o=new Array(t);for(n=0;n<t;++n,i+=c.Cartesian2.packedLength)o[n]=c.Cartesian2.unpack(e,i);var l=c.Ellipsoid.unpack(e,i,b);i+=c.Ellipsoid.packedLength;var s=e[i++],p=e[i];return d.defined(a)?(a._positions=r,a._shape=o,a._ellipsoid=c.Ellipsoid.clone(l,a._ellipsoid),a._cornerType=s,a._granularity=p,a):(k.polylinePositions=r,k.shapePositions=o,k.cornerType=s,k.granularity=p,new _(k))};var C=new l.BoundingRectangle;return _.createGeometry=function(e){var i=e._positions,a=o.arrayRemoveDuplicates(i,c.Cartesian3.equalsEpsilon),n=e._shape;if(n=v.PolylineVolumeGeometryLibrary.removeDuplicatesFromShape(n),!(a.length<2||n.length<3)){u.PolygonPipeline.computeWindingOrder2D(n)===u.WindingOrder.CLOCKWISE&&n.reverse();var t=l.BoundingRectangle.fromPoints(n,C);return function(e,i){var a=new g.GeometryAttributes;a.position=new f.GeometryAttribute({componentDatatype:h.ComponentDatatype.DOUBLE,componentsPerAttribute:3,values:e});var n,t,r=i.length,o=a.position.values.length/3,l=e.length/3/r,s=m.IndexDatatype.createTypedArray(o,2*r*(1+l)),p=0,d=(n=0)*r;for(t=0;t<r-1;t++)s[p++]=t+d,s[p++]=t+d+1;for(s[p++]=r-1+d,s[p++]=d,d=(n=l-1)*r,t=0;t<r-1;t++)s[p++]=t+d,s[p++]=t+d+1;for(s[p++]=r-1+d,s[p++]=d,n=0;n<l-1;n++){var c=r*n,u=c+r;for(t=0;t<r;t++)s[p++]=t+c,s[p++]=t+u}return new f.Geometry({attributes:a,indices:m.IndexDatatype.createTypedArray(o,s),boundingSphere:y.BoundingSphere.fromVertices(e),primitiveType:f.PrimitiveType.LINES})}(v.PolylineVolumeGeometryLibrary.computePositions(a,n,t,e,!1),n)}},function(e,i){return d.defined(i)&&(e=_.unpack(e,i)),e._ellipsoid=c.Ellipsoid.clone(e._ellipsoid),_.createGeometry(e)}});
